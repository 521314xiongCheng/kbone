{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/cache.js","webpack:///./src/util/tool.js","webpack:///./src/util/pool.js","webpack:///./src/node/element.js","webpack:///./src/event/event-target.js","webpack:///./src/event/event.js","webpack:///./src/node/node.js","webpack:///./src/bom/location.js","webpack:///./src/document.js","webpack:///./src/event/custom-event.js","webpack:///./src/node/class-list.js","webpack:///./src/node/style.js","webpack:///./src/node/attribute.js","webpack:///./src/node/text-node.js","webpack:///./src/node/comment.js","webpack:///./src/index.js","webpack:///./src/window.js","webpack:///./src/tree/tree.js","webpack:///./src/tree/query-selector.js","webpack:///./src/node/style-list.js","webpack:///./src/tree/parser.js","webpack:///./src/node/element/a.js","webpack:///./src/node/element/image.js","webpack:///./src/node/element/input.js","webpack:///./src/node/element/textarea.js","webpack:///./src/node/element/video.js","webpack:///./src/node/element/canvas.js","webpack:///./src/node/element/select.js","webpack:///./src/node/element/option.js","webpack:///./src/node/element/not-support.js","webpack:///./src/node/element/wx-component.js","webpack:///./src/node/element/wx-custom-component.js","webpack:///./src/bom/cookie.js","webpack:///./src/bom/navigator.js","webpack:///./src/bom/screen.js","webpack:///./src/bom/history.js","webpack:///./src/bom/miniprogram.js","webpack:///./src/bom/storage.js","webpack:///./src/bom/worker.js","webpack:///./src/bom/performance.js","webpack:///./src/bom/xml-http-request.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageMap","configCache","cookieCache","init","pageId","options","window","document","nodeIdMap","destroy","getDocument","getWindow","getWindowList","keys","map","setNode","nodeId","domNode","parentNode","body","getNode","setConfig","config","getConfig","getCookie","cache","WX_COMPONENT_MAP","forEach","seed","Date","waitFuncSet","Set","NOT_SUPPORT_TAG_NAME_LIST","checkIsWxComponent","tagName","notNeedPrefix","hasPrefix","indexOf","slice","toDash","str","replace","all","toLowerCase","toCamel","$1","toUpperCase","getId","getPageRoute","split","getPageName","pageRoute","pluginMatchRes","match","splitPageRoute","throttle","func","has","add","Promise","resolve","then","delete","catch","console","error","flushThrottleCache","waitFunc","clear","completeURL","url","defaultOrigin","notTransHttps","origin","decodeContent","content","isTagNameSupport","escapeForHtmlGeneration","size","this","$_size","$_cache","length","push","pop","Node","ClassList","Style","Attribute","parser","tool","pool","Element","tree","optimization","elementMultiplexing","instance","$$init","type","super","$_tagName","$_children","$_nodeType","nodeType","ELEMENT_NODE","$_unary","voidMap","$_notTriggerUpdate","$_dataset","$_classList","$_style","$_attrs","$$scrollTop","$$scrollTimeStamp","$_initAttrs","attrs","onclick","ontouchstart","ontouchmove","ontouchend","ontouchcancel","onload","onerror","$$destroy","_wxComponent","child","$$recycle","$__dataset","$__classList","$$create","$_onClassOrStyleUpdate","$__style","$__attrs","$_triggerParentUpdate","attrKeys","datasetName","substr","setAttribute","triggerUpdate","$$trigger","node","isRemove","id","$_pageId","$$nodeId","$_tree","updateIdMap","childNodes","$_updateChildrenExtra","TEXT_NODE","textContent","html","behavior","className","styleText","style","cssText","src","dataset","$$dealWithAttrsForGenerateHtml","$$isUnary","childrenHtml","$_generateHtml","join","children","attrsMap","attr","element","ownerDocument","$$createElement","$_generateDomTree","appendChild","$$createTextNode","createComment","$$pageId","$_type","slot","getAttribute","reject","$$createSelectorQuery","selectViewport","scrollOffset","res","Error","exec","select","$_nodeId","boundingClientRect","wx","createSelectorQuery","in","$$wxComponent","context","set","trim","oldId","getById","toString","$$parse","filter","fragment","DOCUMENT_FRAGMENT_NODE","ast","parse","err","item","$$updateParent","hasTbody","tbody","concat","assign","$$dealWithAttrsForOuterHTML","text","list","parseInt","pageScrollTo","scrollTop","duration","deep","newNode","class","$$dealWithAttrsForCloneNode","attrName","cloneNode","nodes","hasUpdate","removeChild","$_triggerMeUpdate","index","splice","ref","insertIndex","old","replaceIndex","getByTagName","getByClassName","selector","query","valueType","undefined","Array","isArray","JSON","oldValue","oldKeys","removeAttribute","handler","removeEventListener","addEventListener","remove","namespace","warn","hasAttribute","otherElement","stack","checkElement","left","top","Event","CustomEvent","compareTouchList","a","b","len","aItem","bItem","identifier","pageX","pageY","clientX","clientY","EventTarget","args","oninput","onfocus","onblur","onchange","$_miniprogramEvent","$_eventHandlerMap","$__eventHandlerMap","target","eventName","miniprogramEvent","extra","callback","event","path","timeStamp","touches","changedTouches","bubbles","$$extra","currentTarget","$$canBubble","$$setCurrentTarget","$$setEventPhase","CAPTURING_PHASE","isCapture","AT_TARGET","isTarget","BUBBLING_PHASE","stopPropagation","NONE","isInit","handlerMap","handlerObj","capture","bubble","handlers","$_getHandlers","onEventName","$$immediateStop","_namespace","namespaceHandlers","last","now","flag","$$namespace","bubbleHandlers","captureHandlers","evt","$$process","$_name","$_target","$_timeStamp","$_currentTarget","$_eventPhase","eventPhase","$_detail","detail","$_immediateStop","$_canBubble","$_bubbles","$_touches","$_targetTouches","$_changedTouches","$_cancelable","touch","$$checkTargetTouches","node1","node2","checkRelation","$_parentNode","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","Location","$_pageRoute","$_protocol","$_hostname","$_port","$_pathname","$_search","$_hash","$_lastHash","$_lastPathname","$_lastSearch","$_lastHref","$_allowCheck","protocol","hostname","port","pathname","search","hash","$$startCheckHash","test","oldValues","$_getOldValues","$$endCheckHash","$_checkUrl","href","jumpUrl","matchRoute","$$miniprogram","getMatchRoute","param","encodeURIComponent","callMethod","isTabBarPage","parseRes","host","hostStart","hostEnd","isEnd","char","charCodeAt","searchIndex","hashIndex","firstIndex","needCheckUrlChange","oldURL","newURL","$_enterHistory","isFinite","$_setHrefWithoutEnterHistory","Tree","TextNode","Comment","A","Image","Input","Textarea","Video","Canvas","Select","Option","NotSupport","WxComponent","WxCustomComponent","Cookie","CONSTRUCTOR_MAP","IMG","INPUT","TEXTAREA","VIDEO","CANVAS","SELECT","OPTION","WX_CUSTOM_COMPONENT_MAP","runtime","cookieStore","usingComponents","pageName","that","$_imageConstructor","width","height","unary","$_cookie","$_config","$_node","$_head","createElement","root","$$children","cookie","getStorageSync","$$cookieInstance","deserialize","URL","wxComponent","$_visibilityState","documentElement","originTagName","wxComponentName","constructorClass","$$notNeedPrefix","componentName","start","startSplit","nextSplit","cookies","lastSplitStr","substring","splitStr","defaultView","location","setCookie","$$createComment","dispatchEvent","Pool","onUpdate","domExtendMultiplexing","$_doUpdate","isUpdate","force","isNotContain","action","styleList","$_disableCheckUpdate","joinText","rules","rule","$_checkUpdate","properties","styleValueReduce","defineProperties","$_element","$_map","$_list","attrValueReduce","$$node","idValue","classValue","styleValue","textMultiplexing","$_content","commentMultiplexing","Window","Document","route","$$adapter","OriginalCustomEvent","Navigator","Screen","History","Miniprogram","SessionStorage","LocalStorage","WorkerImpl","Performance","OriginalXMLHttpRequest","lastRafTime","WINDOW_PROTOTYPE_MAP","navigator","performance","screen","history","localStorage","sessionStorage","XMLHttpRequest","ELEMENT_PROTOTYPE_MAP","attribute","classList","subscribeMap","globalObject","timeOrigin","$_outerHeight","$_outerWidth","$_innerHeight","$_innerWidth","$_location","$_navigator","$_screen","$_history","$_miniprogram","$_localStorage","$_sessionStorage","$_performance","$_nowFetchingWebviewInfoPromise","$_fetchDeviceInfo","$_initInnerEvent","onhashchange","$_elementConstructor","$_customEventConstructor","$_xmlHttpRequestConstructor","generate","worker","$_workerConstructor","Worker","$_sharedWorkerConstructor","SharedWorker","HTMLIFrameElement","state","info","getSystemInfoSync","screenHeight","screenWidth","windowHeight","windowWidth","$$reset","descriptor","main","sub","method","handlersMap","dom","computedStyle","fields","errStack","errLines","message","line","filename","lineno","colno","$$isOfficial","oldOnError","$$getPrototype","$_getAspectInfo","methodInPrototype","$$isHook","beforeFuncs","$$before","afterFuncs","$$after","beforeFunc","apply","afterFunc","$$originalMethod","data","$$imageConstructor","setTimeout","clearTimeout","setInterval","clearInterval","RegExp","Math","Number","Boolean","String","parseFloat","$$open","navigateBack","delta","transitionDelay","transitionDuration","animationDelay","animationDuration","nextRafTime","max","timeId","QuerySelector","walkDomTree","tagMap","classMap","idMap","querySelector","walk","childNode","findNode","PSEUDO_CHECK","checked","selected","disabled","enabled","ATTR_CHECK","nodeVal","val","KINSHIP_CHECK","kinshipRule","kinshipNode","checkHit","foundCurrent","tag","pseudo","contains","checkPseudo","opr","checkAttr","parseCache","parseCacheKeys","regexp","shift","segment","onProcess","idAll","tagAll","classAll","pseudoAll","pseudoName","pseudoParam","attrAll","attrOpr","attrVal","kinshipAll","kinship","currentRule","nthParsed","lastParse","getParseCache","setParseCache","lastRule","hitNodes","classNodes","classNode","tagNodes","tagNode","checkNode","isMatched","j","prevRule","checkKinship","unique","sort","aList","bList","aParent","bParent","unshift","doctypeReg","startTagReg","endTagReg","attrReg","blockMap","inlineMap","rawTextMap","longAttributeCache","tokenize","isText","execRes","parseEndTag","comment","parseStartTag","indexStart","indexEnd","rest","$2","$3","$4","pos","end","HTMLAnchorElement","$_naturalWidth","$_naturalHeight","$_initRect","rect","getImageInfo","success","$_resetRect","fail","HTMLInputElement","maxlength","placeholder","mpplaceholderclass","HTMLTextAreaElement","HTMLVideoElement","HTMLCanvasElement","$$getNodesRef","nodesRef","getContext","HTMLSelectElement","$$resetOptions","$$updateSelected","selectedIndex","option","find","$$setAttributeWithoutUpdate","findIndex","HTMLOptionElement","label","onDealWithNotSupportDom","isNaN","scrollItem","getElementById","propName","$$getBoundingClientRect","rectName","scrollRect","itemRect","$_behavior","$_pageName","cookieStr","parseKeyValue","domain","expires","maxAge","secure","httpOnly","cookieDomain","cookiePath","createTime","$_checkDomain","lastIndex","lastIndexOf","cookieKey","oldCookie","$_checkExpires","setStorage","serialize","includeHttpOnly","domainList","domainItem","domainMap","pathList","pathItem","$_checkPath","pathMap","gap","stringify","log","$_language","$_wxVersion","$_brand","$_model","$_platform","$_system","$_userAgent","language","version","brand","model","platform","system","platformContext","systemVersion","appCodeName","$_width","$_height","$_stack","title","$_currentIndex","current","go","next","$$setHrefWithoutCheck","reload","$_checkOrigin","setNavigationBarTitle","pageUrlRouteMap","$_pageUrl","$_subpackagesMap","entry","router","subpackagesMap","regexpList","pathObj","packageName","matchRes","tabBarMap","Storage","$_window","$_keys","newValue","storageArea","num","$_triggerStorage","getStorageInfoSync","$$keys","setStorageSync","$_updateInfo","removeStorageSync","clearStorageSync","wxWorker","wxWorkerPath","callbackList","sharedWorkerInstCount","workerMap","sharedWorkerMap","getWorkerUrl","fileName","getWorkersDir","isSharedWorker","filePath","$_tryCatch","createWorker","$_onMessage","_hasRegisterCb","onMessage","postMessage","terminate","$_worker","close","sharedWorker","$_timeOrigin","SUPPORT_METHOD","STATUS_TEXT_MAP","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","500","501","502","503","504","505","$_method","$_url","$_data","$_status","$_statusText","$_readyState","UNSENT","$_header","Accept","$_responseType","$_resHeader","$_response","$_timeout","$_startTime","$_withCredentials","$_requestTask","$_requestSuccess","$_requestFail","$_requestComplete","readyState","hasChange","DONE","abort","$_callReadyStateChange","OPENED","header","$$cookie","withCredentials","request","dataType","responseType","complete","statusCode","HEADERS_RECEIVED","$$setCookie","LOADING","errMsg","timeout","$_callRequest"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const pageMap = {}\nlet configCache = {}\nconst cookieCache = {}\n\n/**\n * 初始化\n */\nfunction init(pageId, options) {\n    pageMap[pageId] = {\n        window: options.window,\n        document: options.document,\n        nodeIdMap: options.nodeIdMap,\n    }\n}\n\n/**\n * 销毁\n */\nfunction destroy(pageId) {\n    delete pageMap[pageId]\n}\n\n/**\n * 获取 document\n */\nfunction getDocument(pageId) {\n    return pageMap[pageId] && pageMap[pageId].document\n}\n\n/**\n * 获取 window\n */\nfunction getWindow(pageId) {\n    return pageMap[pageId] && pageMap[pageId].window\n}\n\n/**\n * 获取 window 列表\n */\nfunction getWindowList() {\n    return Object.keys(pageMap).map(pageId => pageMap[pageId].window)\n}\n\n/**\n * 存储 domNode 映射\n */\nfunction setNode(pageId, nodeId, domNode = null) {\n    const document = pageMap[pageId] && pageMap[pageId].document\n\n    // 运行前调用，不做任何操作\n    if (!document) return\n    // 相当于删除映射\n    if (!domNode) return pageMap[pageId].nodeIdMap[nodeId] = domNode\n\n    let parentNode = domNode.parentNode\n\n    while (parentNode && parentNode !== document.body) {\n        parentNode = parentNode.parentNode\n    }\n\n    pageMap[pageId].nodeIdMap[nodeId] = parentNode === document.body ? domNode : null\n}\n\n/**\n * 根据 nodeId 获取 domNode\n */\nfunction getNode(pageId, nodeId) {\n    return pageMap[pageId] && pageMap[pageId].nodeIdMap[nodeId]\n}\n\n/**\n * 存储全局 config\n */\nfunction setConfig(config) {\n    configCache = config\n}\n\n/**\n * 获取全局 config\n */\nfunction getConfig() {\n    return configCache\n}\n\n/**\n * 获取全局 cookie\n */\nfunction getCookie() {\n    return cookieCache\n}\n\nmodule.exports = {\n    init,\n    destroy,\n    getDocument,\n    getWindow,\n    getWindowList,\n    setNode,\n    getNode,\n    setConfig,\n    getConfig,\n    getCookie,\n}\n","const cache = require('./cache')\n\n/**\n * 判断是否是内置组件\n */\nconst WX_COMPONENT_MAP = {}\nconst WX_COMPONENT_LIST = [\n    'cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'scroll-view', 'swiper', 'swiper-item', 'view',\n    'icon', 'progress', 'rich-text', 'text',\n    'button', 'checkbox', 'checkbox-group', 'editor', 'form', 'input', 'label', 'picker', 'picker-view', 'picker-view-column', 'radio', 'radio-group', 'slider', 'switch', 'textarea',\n    'functional-page-navigator', 'navigator',\n    'audio', 'camera', 'image', 'live-player', 'live-pusher', 'video', 'voip-room',\n    'map',\n    'canvas',\n    'ad', 'ad-custom', 'official-account', 'open-data', 'web-view',\n    // 特殊补充\n    'capture', 'catch', 'animation'\n]\nWX_COMPONENT_LIST.forEach(name => WX_COMPONENT_MAP[name] = name)\nfunction checkIsWxComponent(tagName, notNeedPrefix) {\n    const hasPrefix = tagName.indexOf('wx-') === 0\n    if (notNeedPrefix) {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : WX_COMPONENT_MAP[tagName]\n    } else {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : false\n    }\n}\n\n/**\n * 驼峰转连字符\n */\nfunction toDash(str) {\n    return str.replace(/[A-Z]/g, all => `-${all.toLowerCase()}`)\n}\n\n/**\n * 连字符转驼峰\n */\nfunction toCamel(str) {\n    return str.replace(/-([a-zA-Z])/g, (all, $1) => $1.toUpperCase())\n}\n\n/**\n * 获取唯一 id\n */\nlet seed = +new Date()\nfunction getId() {\n    return seed++\n}\n\n/**\n * 从 pageId 中获取小程序页面 route\n */\nfunction getPageRoute(pageId) {\n    return pageId.split('-')[2]\n}\n\n/**\n * 从 pageRoute 中获取小程序页面名称\n */\nfunction getPageName(pageRoute) {\n    const pluginMatchRes = pageRoute.match(/(?:^|\\/)__plugin__\\/(?:.*?)(\\/.*)/)\n    if (pluginMatchRes && pluginMatchRes[1]) {\n        // 插件页面的 route 需要特殊处理\n        pageRoute = pluginMatchRes[1]\n    }\n    const splitPageRoute = pageRoute.split('/')\n    return splitPageRoute[1] === 'pages' ? splitPageRoute[2] : splitPageRoute[1]\n}\n\n/**\n * 节流，一个同步流中只调用一次该函数\n */\nconst waitFuncSet = new Set()\nfunction throttle(func) {\n    return () => {\n        if (waitFuncSet.has(func)) return\n\n        waitFuncSet.add(func)\n\n        Promise.resolve().then(() => {\n            if (waitFuncSet.has(func)) {\n                waitFuncSet.delete(func)\n                func()\n            }\n        }).catch(console.error)\n    }\n}\n\n/**\n * 清空节流缓存\n */\nfunction flushThrottleCache() {\n    waitFuncSet.forEach(waitFunc => waitFunc && waitFunc())\n    waitFuncSet.clear()\n}\n\n/**\n * 补全 url\n */\nfunction completeURL(url, defaultOrigin, notTransHttps) {\n    const config = cache.getConfig()\n\n    // 处理 url 前缀\n    if (url.indexOf('//') === 0) {\n        url = 'https:' + url\n    } else if (url[0] === '/') {\n        url = (config.origin || defaultOrigin) + url\n    }\n\n    if (!notTransHttps && url.indexOf('http:') === 0) {\n        url = url.replace(/^http:/ig, 'https:')\n    }\n\n    return url\n}\n\n/**\n * 解码特殊字符\n */\nfunction decodeContent(content) {\n    return content\n        .replace(/&nbsp;/g, '\\u00A0')\n        .replace(/&ensp;/g, '\\u2002')\n        .replace(/&emsp;/g, '\\u2003')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, '\\'')\n        .replace(/&amp;/g, '&')\n}\n\n/**\n * 判断该标签在小程序中是否支持\n */\nconst NOT_SUPPORT_TAG_NAME_LIST = ['IFRAME']\nfunction isTagNameSupport(tagName) {\n    return NOT_SUPPORT_TAG_NAME_LIST.indexOf(tagName) === -1\n}\n\n/**\n * 处理 innerHTML/outerHTML 的属性值过滤\n */\nfunction escapeForHtmlGeneration(value) {\n    return value.replace(/\"/g, '&quot;')\n}\n\nmodule.exports = {\n    checkIsWxComponent,\n    toDash,\n    toCamel,\n    getId,\n    getPageRoute,\n    getPageName,\n    throttle,\n    flushThrottleCache,\n    completeURL,\n    decodeContent,\n    isTagNameSupport,\n    escapeForHtmlGeneration,\n}\n","class Pool {\r\n    constructor(size) {\r\n        this.$_size = size || 3000\r\n        this.$_cache = []\r\n    }\r\n\r\n    /**\r\n     * 添加一个对象\r\n     */\r\n    add(object) {\r\n        if (this.$_cache.length >= this.$_size) return\r\n\r\n        this.$_cache.push(object)\r\n    }\r\n\r\n    /**\r\n     * 取出一个对象\r\n     */\r\n    get() {\r\n        return this.$_cache.pop()\r\n    }\r\n}\r\n\r\nmodule.exports = Pool\r\n","const Node = require('./node')\nconst ClassList = require('./class-list')\nconst Style = require('./style')\nconst Attribute = require('./attribute')\nconst cache = require('../util/cache')\nconst parser = require('../tree/parser')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\n\nconst pool = new Pool()\n\nclass Element extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Element(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'element'\n\n        super.$$init(options, tree)\n\n        this.$_tagName = options.tagName || ''\n        this.$_children = []\n        this.$_nodeType = options.nodeType || Node.ELEMENT_NODE\n        this.$_unary = !!parser.voidMap[this.$_tagName.toLowerCase()]\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0 // 最近一次滚动事件触发的时间戳\n\n        this.$_initAttrs(options.attrs)\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onclick = null\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.onload = null\n        this.onerror = null\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_tagName = ''\n        this.$_children.length = 0\n        this.$_nodeType = Node.ELEMENT_NODE\n        this.$_unary = null\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this._wxComponent = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 延迟创建内部属性对象\n     */\n    set $_dataset(value) {\n        this.$__dataset = value\n    }\n\n    get $_dataset() {\n        if (!this.$__dataset) this.$__dataset = Object.create(null)\n        return this.$__dataset\n    }\n\n    set $_classList(value) {\n        if (!value && this.$__classList) this.$__classList.$$recycle()\n        this.$__classList = value\n    }\n\n    get $_classList() {\n        if (!this.$__classList) this.$__classList = ClassList.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__classList\n    }\n\n    set $_style(value) {\n        if (!value && this.$__style) this.$__style.$$recycle()\n        this.$__style = value\n    }\n\n    get $_style() {\n        if (!this.$__style) this.$__style = Style.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__style\n    }\n\n    set $_attrs(value) {\n        if (!value && this.$__attrs) this.$__attrs.$$recycle()\n        this.$__attrs = value\n    }\n\n    get $_attrs() {\n        if (!this.$__attrs) this.$__attrs = Attribute.$$create(this, this.$_triggerParentUpdate.bind(this))\n        return this.$__attrs\n    }\n\n    /**\n     * 初始化属性\n     */\n    $_initAttrs(attrs = {}) {\n        // 防止一开始就创建 $_attrs\n        const attrKeys = Object.keys(attrs)\n        if (!attrKeys.length) return\n\n        this.$_notTriggerUpdate = true // 初始化不触发更新\n\n        attrKeys.forEach(name => {\n            if (name.indexOf('data-') === 0) {\n                // dataset\n                const datasetName = tool.toCamel(name.substr(5))\n                this.$_dataset[datasetName] = attrs[name]\n            } else {\n                // 其他属性\n                this.setAttribute(name, attrs[name])\n            }\n        })\n\n        this.$_notTriggerUpdate = false // 重启触发更新\n    }\n\n    /**\n     * 监听 class 或 style 属性值变化\n     */\n    $_onClassOrStyleUpdate() {\n        if (this.$__attrs) this.$_attrs.triggerUpdate()\n        this.$_triggerParentUpdate()\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode && !this.$_notTriggerUpdate) this.parentNode.$$trigger('$$childNodesUpdate')\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$domNodeUpdate')\n    }\n\n    /**\n     * 更新子组件树\n     */\n    $_triggerMeUpdate() {\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 更新子节点变动引起的映射表修改\n     */\n    $_updateChildrenExtra(node, isRemove) {\n        const id = node.id\n\n        // 更新 nodeId - dom 映射表\n        if (isRemove) {\n            cache.setNode(this.$_pageId, node.$$nodeId, null)\n        } else {\n            cache.setNode(this.$_pageId, node.$$nodeId, node)\n        }\n\n        // 更新 id - dom 映射表\n        if (id) {\n            if (isRemove) {\n                this.$_tree.updateIdMap(id, null)\n            } else {\n                this.$_tree.updateIdMap(id, node)\n            }\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            for (const child of node.childNodes) {\n                this.$_updateChildrenExtra(child, isRemove)\n            }\n        }\n    }\n\n    /**\n     * 遍历 dom 树，生成 html\n     */\n    $_generateHtml(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            // 文本节点\n            return node.textContent\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            // 元素\n            const tagName = node.tagName.toLowerCase()\n            let html = `<${tagName}`\n\n            // 属性\n            if (node.behavior) html += ` behavior=\"${tool.escapeForHtmlGeneration(node.behavior)}\"`\n            if (node.id) html += ` id=\"${tool.escapeForHtmlGeneration(node.id)}\"`\n            if (node.className) html += ` class=\"${tool.escapeForHtmlGeneration(node.className)}\"`\n\n            const styleText = node.style.cssText\n            if (styleText) html += ` style=\"${tool.escapeForHtmlGeneration(styleText)}\"`\n\n            const src = node.src\n            if (src) html += ` src=${tool.escapeForHtmlGeneration(src)}`\n\n            const dataset = node.dataset\n            Object.keys(dataset).forEach(name => {\n                html += ` data-${tool.toDash(name)}=\"${tool.escapeForHtmlGeneration(dataset[name])}\"`\n            })\n\n            html = this.$$dealWithAttrsForGenerateHtml(html, node)\n\n            if (node.$$isUnary) {\n                // 空标签\n                return `${html} />`\n            } else {\n                const childrenHtml = node.childNodes.map(child => this.$_generateHtml(child)).join('')\n                return `${html}>${childrenHtml}</${tagName}>`\n            }\n        }\n    }\n\n    /**\n     * 遍历 ast，生成 dom 树\n     */\n    $_generateDomTree(node) {\n        const {\n            type,\n            tagName = '',\n            attrs = [],\n            children = [],\n            content = '',\n        } = node\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n\n        if (type === 'element') {\n            // 元素\n            const attrsMap = {}\n\n            // 属性列表转化成 map\n            for (const attr of attrs) {\n                const name = attr.name\n                let value = attr.value\n\n                if (name === 'style') value = value && value.replace('\"', '\\'') || ''\n\n                attrsMap[name] = value\n            }\n\n            const element = this.ownerDocument.$$createElement({\n                tagName, attrs: attrsMap, nodeId\n            })\n\n            for (let child of children) {\n                child = this.$_generateDomTree(child)\n\n                if (child) element.appendChild(child)\n            }\n\n            return element\n        } else if (type === 'text') {\n            // 文本\n            return this.ownerDocument.$$createTextNode({\n                content: tool.decodeContent(content), nodeId\n            })\n        } else if (type === 'comment') {\n            // 注释\n            return this.ownerDocument.createComment()\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$$nodeId,\n            pageId: this.$$pageId,\n            type: this.$_type,\n            tagName: this.$_tagName,\n            id: this.id,\n            className: this.className,\n            style: this.$__style ? this.style.cssText : '',\n            slot: this.getAttribute('slot'),\n        }\n    }\n\n    /**\n     * 是否空标签\n     */\n    get $$isUnary() {\n        return this.$_unary\n    }\n\n    /**\n     * 所属小程序自定义组件实例\n     */\n    get $$wxComponent() {\n        return this._wxComponent\n    }\n\n    /**\n     * 获取子节点列表\n     */\n    get $$children() {\n        return this.$_children\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForGenerateHtml(html) {\n        // 具体实现逻辑由子类实现\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML() {\n        // ignore，具体实现逻辑由子类实现\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        // 具体实现逻辑由子类实现\n        return {}\n    }\n\n    /**\n     * 小程序端的 getBoundingClientRect 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.scrollOffset.html\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.boundingClientRect.html\n     */\n    $$getBoundingClientRect() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'BODY') {\n                window.$$createSelectorQuery().selectViewport().scrollOffset(res => (res ? resolve(res) : reject(new Error('body not found in webview')))).exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).boundingClientRect(res => (res ? resolve(res) : reject(new Error('element not found in webview')))).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应小程序组件的 context 对象\n     */\n    $$getContext() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject()))\n                    .exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应节点的 NodesRef 对象\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.html\n     */\n    $$getNodesRef() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                resolve(wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`))\n            } else {\n                resolve(window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`))\n            }\n        })\n    }\n\n    /**\n     * 设置属性，但不触发更新\n     */\n    $$setAttributeWithoutUpdate(name, value) {\n        if (typeof name !== 'string') return\n\n        this.$_notTriggerUpdate = true\n        this.$_attrs.set(name, value)\n        this.$_notTriggerUpdate = false\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get id() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('id')\n    }\n\n    set id(id) {\n        if (typeof id !== 'string') return\n\n        id = id.trim()\n        const oldId = this.$_attrs.get('id')\n        this.$_attrs.set('id', id)\n\n        if (id === oldId) return\n\n        // 更新 tree\n        if (this.$_tree.getById(oldId) === this) this.$_tree.updateIdMap(oldId, null)\n        if (id) this.$_tree.updateIdMap(id, this)\n        this.$_triggerParentUpdate()\n    }\n\n    get tagName() {\n        return this.$_tagName.toUpperCase()\n    }\n\n    get className() {\n        if (!this.$__classList) return ''\n\n        return this.$_classList.toString()\n    }\n\n    set className(className) {\n        if (typeof className !== 'string') return\n\n        this.$_classList.$$parse(className)\n    }\n\n    get classList() {\n        return this.$_classList\n    }\n\n    get nodeName() {\n        return this.tagName\n    }\n\n    get nodeType() {\n        return this.$_nodeType\n    }\n\n    get childNodes() {\n        return this.$_children\n    }\n\n    get children() {\n        return this.$_children.filter(child => child.nodeType === Node.ELEMENT_NODE)\n    }\n\n    get firstChild() {\n        return this.$_children[0]\n    }\n\n    get lastChild() {\n        return this.$_children[this.$_children.length - 1]\n    }\n\n    get innerHTML() {\n        return this.$_children.map(child => this.$_generateHtml(child)).join('')\n    }\n\n    set innerHTML(html) {\n        if (typeof html !== 'string') return\n\n        const fragment = this.ownerDocument.$$createElement({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        })\n\n        // 解析成 ast\n        let ast = null\n        try {\n            ast = parser.parse(html)\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (!ast) return\n\n        // 生成 dom 树\n        ast.forEach(item => {\n            const node = this.$_generateDomTree(item)\n            if (node) fragment.appendChild(node)\n        })\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 追加新子节点\n        if (this.$_tagName === 'table') {\n            // table 节点需要判断是否存在 tbody\n            let hasTbody = false\n\n            for (const child of fragment.childNodes) {\n                if (child.tagName === 'TBODY') {\n                    hasTbody = true\n                    break\n                }\n            }\n\n            if (!hasTbody) {\n                const tbody = this.ownerDocument.$$createElement({\n                    tagName: 'tbody',\n                    attrs: {},\n                    nodeType: Node.ELEMENT_NODE,\n                    nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                })\n\n                tbody.appendChild(fragment)\n                this.appendChild(tbody)\n            }\n        } else {\n            this.appendChild(fragment)\n        }\n    }\n\n    get outerHTML() {\n        return this.$_generateHtml(this)\n    }\n\n    set outerHTML(html) {\n        if (typeof html !== 'string') return\n\n        // 解析成 ast，只取第一个作为当前节点\n        let ast = null\n        try {\n            ast = parser.parse(html)[0]\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (ast) {\n            // 生成 dom 树\n            const node = this.$_generateDomTree(ast)\n\n            // 删除所有子节点\n            this.$_children.forEach(node => {\n                node.$$updateParent(null)\n\n                // 更新映射表\n                this.$_updateChildrenExtra(node, true)\n            })\n            this.$_children.length = 0\n\n            this.$_notTriggerUpdate = true // 先不触发更新\n\n            // 追加新子节点\n            const children = [].concat(node.childNodes)\n            for (const child of children) {\n                this.appendChild(child)\n            }\n\n            this.$_tagName = node.tagName.toLowerCase()\n            this.id = node.id || ''\n            this.className = node.className || ''\n            this.style.cssText = node.style.cssText || ''\n            this.src = node.src || ''\n            this.$_dataset = Object.assign({}, node.dataset)\n\n            this.$$dealWithAttrsForOuterHTML(node)\n\n            this.$_notTriggerUpdate = false // 重启触发更新\n            this.$_triggerParentUpdate()\n        }\n    }\n\n    get innerText() {\n        // WARN：此处处理成和 textContent 一致，不去判断是否会渲染出来的情况\n        return this.textContent\n    }\n\n    set innerText(text) {\n        this.textContent = text\n    }\n\n    get textContent() {\n        return this.$_children.map(child => child.textContent).join('')\n    }\n\n    set textContent(text) {\n        text = '' + text\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 空串不新增 textNode 节点\n        if (!text) return\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n        const child = this.ownerDocument.$$createTextNode({content: text, nodeId})\n\n        this.appendChild(child)\n    }\n\n    get style() {\n        return this.$_style\n    }\n\n    set style(value) {\n        this.$_style.cssText = value\n    }\n\n    get dataset() {\n        return this.$_dataset\n    }\n\n    get attributes() {\n        return this.$_attrs.list\n    }\n\n    get src() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('src')\n    }\n\n    set src(value) {\n        value = '' + value\n        this.$_attrs.set('src', value)\n    }\n\n    get scrollTop() {\n        // 只有配置了 windowScroll 才能拿到准确值；如果没有配置，则需要通过 document.body.$$getBoundingClientRect 来获取准确值\n        return this.$$scrollTop\n    }\n\n    set scrollTop(value) {\n        if (this.$_tagName !== 'html') return // 只有 document.documentElement 支持设置 scrollTop\n        if (+new Date() - this.$$scrollTimeStamp < 500) return // 为了兼容 mp-webpack-plugin@0.9.14 及以前的版本，在滚动事件触发后的 500ms 内，设置 scrollTop 不予处理\n\n        value = parseInt(value, 10)\n        wx.pageScrollTo({scrollTop: value, duration: 0})\n        this.$$scrollTop = value\n    }\n\n    cloneNode(deep) {\n        const dataset = {}\n        Object.keys(this.$_dataset).forEach(name => {\n            dataset[`data-${tool.toDash(name)}`] = this.$_dataset[name]\n        })\n\n        const newNode = this.ownerDocument.$$createElement({\n            tagName: this.$_tagName,\n            attrs: {\n                id: this.id,\n                class: this.className,\n                style: this.style.cssText,\n                src: this.src,\n\n                ...dataset,\n                ...this.$$dealWithAttrsForCloneNode(),\n            },\n            nodeType: this.$_nodeType,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n\n        // 属性\n        if (this.$__attrs) {\n            const attrsMap = this.$_attrs.map\n            Object.keys(attrsMap).forEach(attrName => newNode.setAttribute(attrName, attrsMap[attrName]))\n        }\n\n        if (deep) {\n            // 深克隆\n            for (const child of this.$_children) {\n                newNode.appendChild(child.cloneNode(deep))\n            }\n        }\n\n        return newNode\n    }\n\n    appendChild(node) {\n        if (!(node instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = [].concat(node.childNodes)\n        } else {\n            nodes = [node]\n        }\n\n        if (!nodes.length) hasUpdate = true // 列表为空也要触发 update，因为可能走 innerHTML 强行置空\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            this.$_children.push(node)\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return this\n    }\n\n    removeChild(node) {\n        if (!(node instanceof Node)) return\n\n        const index = this.$_children.indexOf(node)\n\n        if (index >= 0) {\n            // 已经插入，需要删除\n            this.$_children.splice(index, 1)\n\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n\n            // 触发 webview 端更新\n            this.$_triggerMeUpdate()\n        }\n\n        return node\n    }\n\n    insertBefore(node, ref) {\n        if (!(node instanceof Node)) return\n        if (ref && !(ref instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = 0; i < node.childNodes.length; i++) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            const insertIndex = ref ? this.$_children.indexOf(ref) : -1\n\n            if (insertIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 插入到 ref 之前\n                this.$_children.splice(insertIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    replaceChild(node, old) {\n        if (!(node instanceof Node) || !(old instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        const replaceIndex = this.$_children.indexOf(old)\n        if (replaceIndex !== -1) this.$_children.splice(replaceIndex, 1)\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            if (replaceIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 替换到 old\n                this.$_children.splice(replaceIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n            this.$_updateChildrenExtra(old, true)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return old\n    }\n\n    hasChildNodes() {\n        return this.$_children.length > 0\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this)\n    }\n\n    setAttribute(name, value) {\n        if (typeof name !== 'string') return\n\n        // 保留对象/数组/布尔值/undefined 原始内容，方便处理小程序内置组件的使用\n        const valueType = typeof value\n        if (valueType !== 'object' && valueType !== 'boolean' && value !== undefined && !Array.isArray(value)) value = '' + value\n\n        if (name === 'kbone-attribute-map' || name === 'kbone-event-map') {\n            value = value || {}\n            if (typeof value === 'string') value = JSON.parse(value) // 确保存入的是对象\n            const oldValue = this.getAttribute(name)\n            const keys = Object.keys(value)\n            const oldKeys = oldValue ? Object.keys(oldValue) : null\n\n            if (name === 'kbone-attribute-map') {\n                // 特殊属性，用于批量设置属性\n                keys.forEach(key => this.setAttribute(key, value[key]))\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        if (!Object.prototype.hasOwnProperty.call(value, key)) this.removeAttribute(key)\n                    })\n                }\n            } else {\n                // 特殊属性，用于批量监听事件\n                const window = cache.getWindow(this.$_pageId)\n\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                    // 先删除所有旧的 handler\n                        let handler = oldValue[key]\n                        handler = typeof handler !== 'function' ? window[handler] : handler\n                        this.removeEventListener(key, handler)\n                    })\n                }\n                keys.forEach(key => {\n                    let handler = value[key]\n                    handler = typeof handler !== 'function' ? window[handler] : handler\n                    this.addEventListener(key, handler)\n                })\n            }\n        }\n\n        if (name === 'id') {\n            // id 要提前到此处特殊处理\n            this.id = value\n        } else {\n            this.$_attrs.set(name, value)\n        }\n    }\n\n    getAttribute(name) {\n        if (typeof name !== 'string') return ''\n        if (!this.$__attrs) return name === 'id' || name === 'style' || name === 'class' ? '' : undefined\n\n        return this.$_attrs.get(name)\n    }\n\n    hasAttribute(name) {\n        if (typeof name !== 'string') return false\n        if (!this.$__attrs) return false\n\n        return this.$_attrs.has(name)\n    }\n\n    removeAttribute(name) {\n        if (typeof name !== 'string') return false\n\n        return this.$_attrs.remove(name)\n    }\n\n    setAttributeNS(namespace, name, value) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        this.setAttribute(name, value)\n    }\n\n    getAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.getAttribute(name)\n    }\n\n    hasAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.hasAttribute(name)\n    }\n\n    removeAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.removeAttribute(name)\n    }\n\n    contains(otherElement) {\n        const stack = []\n        let checkElement = this\n\n        while (checkElement) {\n            if (checkElement === otherElement) return true\n\n            const childNodes = checkElement.childNodes\n            if (childNodes && childNodes.length) childNodes.forEach(child => stack.push(child))\n\n            checkElement = stack.pop()\n        }\n\n        return false\n    }\n\n    getBoundingClientRect() {\n        // 不作任何实现，只作兼容使用\n        console.warn('getBoundingClientRect is not supported, please use dom.$$getBoundingClientRect instead of it')\n        return {\n            left: 0,\n            top: 0,\n        }\n    }\n}\n\nmodule.exports = Element\n","const Event = require('./event')\nconst CustomEvent = require('./custom-event')\n\n/**\n * 比较 touch 列表\n */\nfunction compareTouchList(a, b) {\n    if (a.length !== b.length) return false\n\n    for (let i, len = a.length; i < len; i++) {\n        const aItem = a[i]\n        const bItem = b[i]\n\n        if (aItem.identifier !== bItem.identifier) return false\n        if (aItem.pageX !== bItem.pageX || aItem.pageY !== bItem.pageY || aItem.clientX !== bItem.clientX || aItem.clientY !== bItem.clientY) return false\n    }\n\n    return true\n}\n\nclass EventTarget {\n    constructor(...args) {\n        this.$$init(...args)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init() {\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.oninput = null\n        this.onfocus = null\n        this.onblur = null\n        this.onchange = null\n\n        this.$_miniprogramEvent = null // 记录已触发的小程序事件\n        this.$_eventHandlerMap = null\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        Object.keys(this).forEach(key => {\n            // 处理 on 开头的属性\n            if (key.indexOf('on') === 0) this[key] = null\n            // 处理外部挂进来的私有的属性\n            if (key[0] === '_') this[key] = null\n            if (key[0] === '$' && (key[1] !== '_' && key[1] !== '$')) this[key] = null\n        })\n\n        this.$_miniprogramEvent = null\n        this.$_eventHandlerMap = null\n    }\n\n    set $_eventHandlerMap(value) {\n        this.$__eventHandlerMap = value\n    }\n\n    get $_eventHandlerMap() {\n        if (!this.$__eventHandlerMap) this.$__eventHandlerMap = Object.create(null)\n        return this.$__eventHandlerMap\n    }\n\n    /**\n     * 触发事件捕获、冒泡流程\n     */\n    static $$process(target, eventName, miniprogramEvent, extra, callback) {\n        let event\n\n        if (eventName instanceof CustomEvent || eventName instanceof Event) {\n            // 传入的是事件对象\n            event = eventName\n            eventName = event.type\n        }\n\n        eventName = eventName.toLowerCase()\n\n        const path = [target]\n        let parentNode = target.parentNode\n\n        while (parentNode && parentNode.tagName !== 'HTML') {\n            path.push(parentNode)\n            parentNode = parentNode.parentNode\n        }\n\n        if (path[path.length - 1].tagName === 'BODY') {\n            // 如果最后一个节点是 document.body，则追加 document.documentElement\n            path.push(parentNode)\n        }\n\n        if (!event) {\n            // 此处特殊处理，不直接返回小程序的 event 对象\n            event = new Event({\n                name: eventName,\n                target,\n                timeStamp: miniprogramEvent.timeStamp,\n                touches: miniprogramEvent.touches,\n                changedTouches: miniprogramEvent.changedTouches,\n                bubbles: true, // 默认都可以冒泡\n                $$extra: extra,\n            })\n        }\n\n        // 捕获\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentTarget = path[i]\n\n            if (!event.$$canBubble) break // 判定冒泡是否结束\n            if (currentTarget === target) continue\n\n            // wx-capture 节点事件单独触发\n            if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n            event.$$setCurrentTarget(currentTarget)\n            event.$$setEventPhase(Event.CAPTURING_PHASE)\n\n            currentTarget.$$trigger(eventName, {\n                event,\n                isCapture: true,\n            })\n            if (callback) callback(currentTarget, event, true)\n        }\n\n        // 目标\n        if (event.$$canBubble) {\n            event.$$setCurrentTarget(target)\n            event.$$setEventPhase(Event.AT_TARGET)\n\n            // 捕获和冒泡阶段监听的事件都要触发\n            target.$$trigger(eventName, {\n                event,\n                isCapture: true,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, true)\n\n            target.$$trigger(eventName, {\n                event,\n                isCapture: false,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, false)\n        }\n\n        if (event.bubbles) {\n            // 冒泡\n            for (const currentTarget of path) {\n                if (!event.$$canBubble) break // 判定冒泡是否结束\n                if (currentTarget === target) continue\n\n                // wx-capture 节点事件单独触发\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n                event.$$setCurrentTarget(currentTarget)\n                event.$$setEventPhase(Event.BUBBLING_PHASE)\n\n                currentTarget.$$trigger(eventName, {\n                    event,\n                    isCapture: false,\n                })\n                if (callback) callback(currentTarget, event, false)\n\n                // wx-catch 节点事件要结束冒泡\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'catch') event.stopPropagation()\n            }\n        }\n\n        // 重置事件\n        event.$$setCurrentTarget(null)\n        event.$$setEventPhase(Event.NONE)\n\n        return event\n    }\n\n    /**\n     * 获取 handlers\n     */\n    $_getHandlers(eventName, isCapture, isInit) {\n        const handlerMap = this.$_eventHandlerMap\n\n        if (isInit) {\n            const handlerObj = handlerMap[eventName] = handlerMap[eventName] || {}\n\n            handlerObj.capture = handlerObj.capture || []\n            handlerObj.bubble = handlerObj.bubble || []\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        } else {\n            const handlerObj = handlerMap[eventName]\n\n            if (!handlerObj) return null\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        }\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, {\n        event, args = [], isCapture, isTarget\n    } = {}) {\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n        const onEventName = `on${eventName}`\n\n        if ((!isCapture || !isTarget) && typeof this[onEventName] === 'function') {\n            // 触发 onXXX 绑定的事件\n            if (event && event.$$immediateStop) return\n            try {\n                this[onEventName].call(this || null, event, ...args)\n            } catch (err) {\n                console.error(err)\n            }\n        }\n\n        if (!handlers) return\n\n        // 触发 addEventListener 绑定的事件\n        if (handlers.length) {\n            handlers.forEach(handler => {\n                if (event && event.$$immediateStop) return\n                try {\n                    handler.call(this || null, event, ...args)\n                } catch (err) {\n                    console.error(err)\n                }\n            })\n        }\n\n        // 触发 addEventListener 绑定到命名空间下的事件\n        if (handlers._namespace) {\n            Object.keys(handlers._namespace).forEach(namespace => {\n                const namespaceHandlers = handlers._namespace[namespace]\n                if (namespaceHandlers) {\n                    namespaceHandlers.forEach(handler => {\n                        if (event && event.$$immediateStop) return\n                        try {\n                            handler.call(this || null, event, ...args)\n                        } catch (err) {\n                            console.error(err)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    /**\n     * 检查该事件是否可以触发\n     */\n    $$checkEvent(miniprogramEvent) {\n        const last = this.$_miniprogramEvent\n        const now = miniprogramEvent\n\n        let flag = false\n\n        if (!last || last.timeStamp !== now.timeStamp) {\n            // 时间戳不同\n            flag = true\n        } else {\n            if (last.touches && now.touches && !compareTouchList(last.touches, now.touches)) {\n                // 存在不同的 touches\n                flag = true\n            } else if ((!last.touches && now.touches) || (last.touches && !now.touches)) {\n                // 存在一方没有 touches\n                flag = true\n            }\n\n            if (last.changedTouches && now.changedTouches && !compareTouchList(last.changedTouches, now.changedTouches)) {\n                // 存在不同的 changedTouches\n                flag = true\n            } else if ((!last.changedTouches && now.changedTouches) || (last.changedTouches && !now.changedTouches)) {\n                // 存在一方没有 changedTouches\n                flag = true\n            }\n        }\n\n        if (flag) this.$_miniprogramEvent = now\n        return flag\n    }\n\n    /**\n     * 清空某个事件的所有句柄\n     */\n    $$clearEvent(eventName, options) {\n        if (typeof eventName !== 'string') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n\n        if (!handlers) return\n\n        if (handlers.length) handlers.length = 0\n        if (handlers._namespace) handlers._namespace[namespace] = null\n    }\n\n    /**\n     * 是否存在事件句柄，只考虑通过 addEventListener 绑定的句柄\n     */\n    $$hasEventHandler(eventName) {\n        eventName = eventName.toLowerCase()\n        const bubbleHandlers = this.$_getHandlers(eventName, false)\n        const captureHandlers = this.$_getHandlers(eventName, true)\n        return (bubbleHandlers && bubbleHandlers.length) || (captureHandlers && captureHandlers.length)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    addEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, true)\n\n        if (namespace) {\n            // 存在命名空间\n            handlers._namespace = handlers._namespace || {}\n            handlers._namespace[namespace] = handlers._namespace[namespace] || []\n            handlers._namespace[namespace].push(handler)\n        } else {\n            handlers.push(handler)\n        }\n    }\n\n    removeEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, false)\n\n        if (!handlers) return\n\n        if (namespace) {\n            // 存在命名空间\n            if (!handlers._namespace || !handlers._namespace[namespace]) return\n\n            const index = handlers._namespace[namespace].indexOf(handler)\n            if (index >= 0) handlers._namespace[namespace].splice(index, 1)\n        } else {\n            const index = handlers.indexOf(handler)\n            if (index >= 0) handlers.splice(index, 1)\n        }\n    }\n\n    dispatchEvent(evt) {\n        if (evt instanceof CustomEvent) {\n            EventTarget.$$process(this, evt)\n        }\n\n        // 因为不支持 preventDefault，所以永远返回 true\n        return true\n    }\n}\n\nmodule.exports = EventTarget\n","/**\n * 检查节点间的关系\n */\nfunction checkRelation(node1, node2) {\n    if (node1 === node2) return true\n\n    while (node1) {\n        if (node1 === node2) return true\n\n        node1 = node1.parentNode\n    }\n\n    return false\n}\n\nclass Event {\n    constructor(options) {\n        this.$_name = options.name.toLowerCase()\n        this.$_target = options.target\n        this.$_timeStamp = options.timeStamp || Date.now()\n        this.$_currentTarget = options.currentTarget || options.target\n        this.$_eventPhase = options.eventPhase || Event.NONE\n        this.$_detail = options.detail || null\n        this.$_immediateStop = false\n        this.$_canBubble = true\n        this.$_bubbles = options.bubbles || false\n        this.$_touches = null\n        this.$_targetTouches = null\n        this.$_changedTouches = null\n        this.$_cancelable = false\n\n        // 补充字段\n        const extra = options.$$extra\n        if (extra) {\n            Object.keys(extra).forEach(key => {\n                this[key] = extra[key]\n            })\n        }\n\n        // 处理 touches\n        if (options.touches && options.touches.length) {\n            this.$_touches = options.touches.map(touch => ({...touch, target: options.target}))\n\n            this.$$checkTargetTouches()\n        } else if (options.touches) {\n            this.$_touches = []\n            this.$_targetTouches = []\n        }\n\n        // 处理 changedTouches\n        if (options.changedTouches && options.changedTouches.length) {\n            this.$_changedTouches = options.changedTouches.map(touch => ({...touch, target: options.target}))\n        } else if (options.changedTouches) {\n            this.$_changedTouches = []\n        }\n    }\n\n    /**\n     * 返回事件是否立即停止\n     */\n    get $$immediateStop() {\n        return this.$_immediateStop\n    }\n\n    /**\n     * 返回事件时否还可以冒泡\n     */\n    get $$canBubble() {\n        return this.$_canBubble\n    }\n\n    /**\n     * 设置 target\n     */\n    $$setTarget(target) {\n        this.$_target = target\n    }\n\n    /**\n     * 设置 currentTarget\n     */\n    $$setCurrentTarget(currentTarget) {\n        this.$_currentTarget = currentTarget\n        this.$$checkTargetTouches()\n    }\n\n    /**\n     * 设置事件所处阶段\n     */\n    $$setEventPhase(eventPhase) {\n        this.$_eventPhase = eventPhase\n    }\n\n    /**\n     * 检查 targetTouches\n     */\n    $$checkTargetTouches() {\n        if (this.$_touches && this.$_touches.length) {\n            this.$_targetTouches = this.$_touches.filter(touch => checkRelation(touch.target, this.$_currentTarget))\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get bubbles() {\n        return this.$_bubbles\n    }\n\n    get cancelable() {\n        return this.$_cancelable\n    }\n\n    get target() {\n        return this.$_target\n    }\n\n    get currentTarget() {\n        return this.$_currentTarget\n    }\n\n    get eventPhase() {\n        return this.$_eventPhase\n    }\n\n    get type() {\n        return this.$_name\n    }\n\n    get timeStamp() {\n        return this.$_timeStamp\n    }\n\n    get touches() {\n        return this.$_touches\n    }\n\n    get targetTouches() {\n        return this.$_targetTouches\n    }\n\n    get changedTouches() {\n        return this.$_changedTouches\n    }\n\n    set detail(value) {\n        this.$_detail = value\n    }\n\n    get detail() {\n        return this.$_detail\n    }\n\n    preventDefault() {\n        // 目前仅支持 a 标签的点击阻止\n        this.$_cancelable = true\n    }\n\n    stopPropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_canBubble = false\n    }\n\n    stopImmediatePropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_immediateStop = true\n        this.$_canBubble = false\n    }\n\n    initEvent(name = '', bubbles) {\n        if (typeof name !== 'string') return\n\n        this.$_name = name.toLowerCase()\n        this.$_bubbles = bubbles === undefined ? this.$_bubbles : !!bubbles\n    }\n}\n\n// 静态属性\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n\nmodule.exports = Event\n","const EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nclass Node extends EventTarget {\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init()\n\n        this.$_nodeId = options.nodeId // 唯一标识\n        this.$_type = options.type\n        this.$_parentNode = null\n        this.$_tree = tree\n        this.$_pageId = tree.pageId\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_nodeId = null\n        this.$_type = null\n        this.$_parentNode = null\n        this.$_tree = null\n        this.$_pageId = null\n    }\n\n    /**\n     * 内部 nodeId\n     */\n    get $$nodeId() {\n        return this.$_nodeId\n    }\n\n    /**\n     * 内部 pageId\n     */\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 更新 parentNode\n     */\n    $$updateParent(parentNode = null) {\n        this.$_parentNode = parentNode\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get parentNode() {\n        return this.$_parentNode\n    }\n\n    get nodeValue() {\n        return null\n    }\n\n    get previousSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            return childNodes[index - 1]\n        }\n\n        return null\n    }\n\n    get previousElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            for (let i = index - 1; i >= 0; i--) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get nextSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        return childNodes[index + 1] || null\n    }\n\n    get nextElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index < childNodes.length - 1) {\n            for (let i = index + 1, len = childNodes.length; i < len; i++) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get ownerDocument() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get childNodes() {\n        return []\n    }\n\n    hasChildNodes() {\n        return false\n    }\n\n    remove() {\n        if (!this.parentNode || !this.parentNode.removeChild) return this\n\n        return this.parentNode.removeChild(this)\n    }\n}\n\n// 静态属性\nNode.ELEMENT_NODE = 1\nNode.TEXT_NODE = 3\nNode.CDATA_SECTION_NODE = 4\nNode.PROCESSING_INSTRUCTION_NODE = 7\nNode.COMMENT_NODE = 8\nNode.DOCUMENT_NODE = 9\nNode.DOCUMENT_TYPE_NODE = 10\nNode.DOCUMENT_FRAGMENT_NODE = 11\n\nmodule.exports = Node\n","/**\n * 暂不对 ipv6 地址做支持\n */\nconst EventTarget = require('../event/event-target')\nconst tool = require('../util/tool')\nconst cache = require('../util/cache')\n\nclass Location extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_pageRoute = tool.getPageRoute(pageId) // 小程序页面路由\n\n        this.$_protocol = 'https:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n        this.$_allowCheck = true // 是否检查 url 和 hash 变化\n    }\n\n    /**\n     * 获取 url 中旧的需要进行检测的部分\n     */\n    $_getOldValues() {\n        return {\n            protocol: this.$_protocol,\n            hostname: this.$_hostname,\n            port: this.$_port,\n            pathname: this.$_pathname,\n            search: this.$_search,\n            hash: this.$_hash,\n        }\n    }\n\n    /**\n     * 设置 href，不进入 history\n     */\n    $_setHrefWithoutEnterHistory(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) {\n            // 没有带协议\n            if (value.indexOf('/') === 0) {\n                // 以 / 开头，直接替换整个 pathname、search、hash\n                value = `${this.origin}${value}`\n            } else if (value.indexOf('#') === 0) {\n                // 以 # 开头，直接替换整个 hash\n                value = `${this.origin}${this.$_pathname}${this.$_search}${value}`\n            } else {\n                // 非以 / 开头，则替换 pathname 的最后一段、search、hash\n                let pathname = this.$_pathname.split('/')\n                pathname.pop()\n                pathname = pathname.join('/')\n\n                value = `${this.origin}${pathname}/${value}`\n            }\n        }\n\n        const {\n            protocol, hostname, port, hash, search, pathname\n        } = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n\n        this.$$endCheckHash()\n        this.$_checkUrl(oldValues)\n    }\n\n    /**\n     * 进入 history\n     */\n    $_enterHistory() {\n        this.$$trigger('$_addToHistory', {\n            event: {\n                href: this.href,\n            }\n        })\n    }\n\n    /**\n     * 检查 url 变化是否需要跳转\n     */\n    $_checkUrl(oldValues) {\n        if (!this.$_allowCheck) return false\n\n        const window = cache.getWindow(this.$_pageId)\n\n        if (this.$_protocol !== oldValues.protocol || this.$_hostname !== oldValues.hostname || this.$_port !== oldValues.port) {\n            // 只能跳转相同 protocol、hostname 和 port 的 url\n            const jumpUrl = this.href\n\n            // 和 web 端不同，这里恢复成原状\n            this.$_protocol = oldValues.protocol\n            this.$_hostname = oldValues.hostname\n            this.$_port = oldValues.port\n            this.$_pathname = oldValues.pathname\n            this.$_search = oldValues.search\n            this.$_hash = oldValues.hash\n\n            window.$$trigger('pageaccessdenied', {\n                event: {\n                    url: jumpUrl,\n                    type: 'jump',\n                },\n            })\n\n            return false\n        }\n\n        if (this.$_pathname !== oldValues.pathname || this.$_search !== oldValues.search) {\n            const matchRoute = window.$$miniprogram.getMatchRoute(this.$_pathname)\n\n            if (matchRoute) {\n                let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n                if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n                if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n                param = '?' + param.join('&')\n\n                const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'redirectTo'\n                wx[callMethod]({\n                    url: `${matchRoute}${param}`,\n                })\n\n                if (callMethod === 'switchTab') {\n                    // switchTab 不会销毁页面实例，所以也需要恢复成原状\n                    this.$_protocol = oldValues.protocol\n                    this.$_hostname = oldValues.hostname\n                    this.$_port = oldValues.port\n                    this.$_pathname = oldValues.pathname\n                    this.$_search = oldValues.search\n                    this.$_hash = oldValues.hash\n                }\n\n                return true\n            } else {\n                const jumpUrl = this.href\n\n                // 和 web 端不同，这里恢复成原状\n                this.$_protocol = oldValues.protocol\n                this.$_hostname = oldValues.hostname\n                this.$_port = oldValues.port\n                this.$_pathname = oldValues.pathname\n                this.$_search = oldValues.search\n                this.$_hash = oldValues.hash\n\n                window.$$trigger('pagenotfound', {\n                    event: {\n                        url: jumpUrl,\n                        type: 'jump',\n                    },\n                })\n\n                return false\n            }\n        }\n\n        return true\n    }\n\n    /**\n     * 打开一个新页面\n     */\n    $$open(url) {\n        url = tool.completeURL(url, this.origin, true)\n\n        const window = cache.getWindow(this.$_pageId)\n        const parseRes = Location.$$parse(url)\n\n        if (parseRes.protocol !== this.$_protocol || parseRes.hostname !== this.$_hostname || parseRes.port !== this.$_port) {\n            // 只能打开相同 protocol、hostname 和 port 的 url\n            return window.$$trigger('pageaccessdenied', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n\n        const matchRoute = window.$$miniprogram.getMatchRoute(parseRes.pathname || '/')\n\n        if (matchRoute) {\n            let param = ['type=open', `targeturl=${encodeURIComponent(url)}`]\n            if (this.$_search) param.push(`search=${encodeURIComponent(parseRes.search || '')}`)\n            if (this.$_hash) param.push(`hash=${encodeURIComponent(parseRes.hash || '')}`)\n\n            param = '?' + param.join('&')\n\n            const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'navigateTo'\n            wx[callMethod]({\n                url: `${matchRoute}${param}`,\n            })\n        } else {\n            window.$$trigger('pagenotfound', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(url = '') {\n        const {\n            protocol, hostname, port, pathname, hash, search\n        } = Location.$$parse(url)\n\n        this.$_protocol = protocol || 'https:'\n        this.$_hostname = hostname || ''\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    /**\n     * 解析 href\n     */\n    static $$parse(href = '') {\n        href = href.trim()\n\n        // protocol\n        let protocol = /^[a-zA-Z0-9]+:/i.exec(href)\n        if (protocol) {\n            protocol = protocol[0].toLowerCase()\n            href = href.slice(protocol.length)\n        }\n\n        // 跳过 //\n        if (href.indexOf('//') === 0) {\n            href = href.slice(2)\n        }\n\n        let hostStart = 0\n        let hostEnd = -1\n        let isEnd = false\n        let host\n        for (let i = 0, len = href.length; i < len; i++) {\n            const char = href[i]\n            if ('\\t\\n\\r \"%\\';<>\\\\^`{|}'.indexOf(char) >= 0) {\n                // RFC 2396：不允许在 hostname 中使用的字符\n                if (hostEnd === -1) hostEnd = i\n            } else if ('#/?'.indexOf(char) >= 0) {\n                // host 结束符\n                if (hostEnd === -1) hostEnd = i\n                isEnd = true\n            } else if (char === '@') {\n                hostStart = i + 1\n                hostEnd = -1\n            }\n\n            if (isEnd) break\n        }\n\n        if (hostEnd === -1) {\n            host = href.slice(hostStart)\n            href = ''\n        } else {\n            host = href.slice(hostStart, hostEnd)\n            href = href.slice(hostEnd)\n        }\n\n\n        // port\n        let port = /:[0-9]*$/.exec(host)\n        if (port) {\n            port = port[0]\n            host = host.slice(0, host.length - port.length)\n\n            if (port !== ':') port = port.slice(1)\n        } else {\n            port = ''\n        }\n\n        // hostname\n        for (let i = 0, len = host.length; i < len; i++) {\n            const char = host[i]\n            const isValid = (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z') || (char >= '0' && char <= '9') || '.-+_'.indexOf(char) >= 0 || char.charCodeAt(0) > 127\n\n            // 不合法的 host 字符\n            if (!isValid) {\n                host = host.slice(0, i)\n\n                href = `/${host.slice(i)}${href}`\n            }\n        }\n        const hostname = host.length > 255 ? '' : host.toLowerCase()\n\n        // hash\n        let hash\n        let searchIndex = -1\n        let hashIndex = -1\n        for (let i = 0, len = href.length; i < len; i++) {\n            if (href[i] === '#') {\n                hash = href.slice(i)\n                hashIndex = i\n                break\n            } else if (href[i] === '?' && searchIndex === -1) {\n                searchIndex = i\n            }\n        }\n        hash = hash === '#' ? '' : hash\n\n        // search\n        let search\n        if (searchIndex !== -1) {\n            if (hashIndex === -1) {\n                search = href.slice(searchIndex)\n            } else {\n                search = href.slice(searchIndex, hashIndex)\n            }\n        }\n        search = search === '?' ? '' : search\n\n        // pathname\n        let pathname\n        const firstIndex = searchIndex !== -1 && (hashIndex === -1 || searchIndex < hashIndex) ? searchIndex : hashIndex\n        if (firstIndex > 0) {\n            pathname = href.slice(0, firstIndex)\n        } else if (firstIndex === -1 && href.length > 0) {\n            pathname = href\n        }\n        if (hostname && !pathname) {\n            pathname = '/'\n        }\n\n        return {\n            protocol,\n            hostname,\n            port,\n            pathname,\n            hash,\n            search,\n        }\n    }\n\n    /**\n     * 不触发检查的方式替换 href\n     */\n    $$setHrefWithoutCheck(value) {\n        this.$_allowCheck = false\n        this.replace(value)\n        this.$_allowCheck = true\n    }\n\n    /**\n     * 开始检查 hash 变化\n     */\n    $$startCheckHash() {\n        if (!this.$_allowCheck) return\n\n        this.$_lastHash = this.$_hash\n        this.$_lastPathname = this.$_pathname\n        this.$_lastSearch = this.$_search\n        this.$_lastHref = this.href\n    }\n\n    /**\n     * 检查 hash 变化\n     */\n    $$endCheckHash(needCheckUrlChange) {\n        if (!this.$_allowCheck) return\n\n        if ((needCheckUrlChange || (this.$_lastPathname === this.$_pathname && this.$_lastSearch === this.$_search)) && this.$_lastHash !== this.$_hash) {\n            this.$$trigger('hashchange', {\n                event: {\n                    oldURL: this.$_lastHref,\n                    newURL: this.href,\n                }\n            })\n        }\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get protocol() {\n        return this.$_protocol\n    }\n\n    set protocol(value) {\n        if (!value || typeof value !== 'string') return\n\n        const parseRes = /^([a-z0-9.+-]+)(:)?$/i.exec(value)\n        const oldValues = this.$_getOldValues()\n\n        if (parseRes) {\n            if (parseRes[2] === ':') {\n                this.$_protocol = value\n            } else {\n                this.$_protocol = `${parseRes[1]}:`\n            }\n\n            if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n        }\n    }\n\n    get host() {\n        return (this.$_hostname || '') + (this.$_port ? ':' + this.$_port : '')\n    }\n\n    set host(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname, port} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    set hostname(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    set port(value) {\n        value = +value\n\n        if (typeof value !== 'number' || !isFinite(value) || value <= 0) return\n\n        const port = value === 80 ? '' : value + ''\n        const oldValues = this.$_getOldValues()\n\n        this.$_port = port\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get origin() {\n        return `${this.$_protocol}//${this.host}`\n    }\n\n    set origin(value) {\n        if (!value || typeof value !== 'string') return\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) return // 没有带协议\n\n        const {protocol, hostname, port} = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    set pathname(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '/') {\n            this.$_pathname = '/'\n        } else {\n            if (value[0] !== '/') value = `/${value}`\n\n            const {pathname} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_pathname = pathname || '/'\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    set search(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '?') {\n            this.$_search = ''\n        } else {\n            if (value[0] !== '?') value = `?${value}`\n\n            const {search} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_search = search || ''\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    set hash(value) {\n        if (typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!value || value === '#') {\n            this.$_hash = ''\n        } else {\n            if (value[0] !== '#') value = `#${value}`\n\n            const {hash} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_hash = hash || ''\n        }\n\n        this.$$endCheckHash()\n        this.$_enterHistory()\n    }\n\n    get href() {\n        return `${this.$_protocol}//${this.host}${this.$_pathname}${this.$_search}${this.$_hash}`\n    }\n\n    set href(value) {\n        this.$_setHrefWithoutEnterHistory(value)\n        this.$_enterHistory()\n    }\n\n    reload() {\n        const window = cache.getWindow(this.$_pageId)\n        let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n        if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n        if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n        param = '?' + param.join('&')\n\n        const callMethod = window.$$miniprogram.isTabBarPage(this.$_pageRoute) ? 'switchTab' : 'redirectTo'\n        wx[callMethod]({\n            url: `${this.$_pageRoute}${param}`,\n        })\n    }\n\n    replace(value) {\n        // 和直接赋值 location.href 不同，不需要进入 history\n        this.$_setHrefWithoutEnterHistory(value)\n    }\n\n    toString() {\n        return this.href\n    }\n}\n\nmodule.exports = Location\n","const EventTarget = require('./event/event-target')\nconst Tree = require('./tree/tree')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst A = require('./node/element/a')\nconst Image = require('./node/element/image')\nconst Input = require('./node/element/input')\nconst Textarea = require('./node/element/textarea')\nconst Video = require('./node/element/video')\nconst Canvas = require('./node/element/canvas')\nconst Select = require('./node/element/select')\nconst Option = require('./node/element/option')\nconst NotSupport = require('./node/element/not-support')\nconst WxComponent = require('./node/element/wx-component')\nconst WxCustomComponent = require('./node/element/wx-custom-component')\nconst Cookie = require('./bom/cookie')\n\nconst CONSTRUCTOR_MAP = {\n    A,\n    IMG: Image,\n    INPUT: Input,\n    TEXTAREA: Textarea,\n    VIDEO: Video,\n    CANVAS: Canvas,\n    SELECT: Select,\n    OPTION: Option,\n    'WX-COMPONENT': WxComponent,\n}\nlet WX_CUSTOM_COMPONENT_MAP = {}\n\nclass Document extends EventTarget {\n    constructor(pageId, nodeIdMap) {\n        super()\n\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        const cookieStore = runtime.cookieStore\n        WX_CUSTOM_COMPONENT_MAP = runtime.usingComponents || {}\n\n        this.$_pageId = pageId\n        const pageRoute = tool.getPageRoute(pageId)\n        const pageName = tool.getPageName(pageRoute)\n\n        // 用于封装特殊标签和对应构造器\n        const that = this\n        this.$_imageConstructor = function HTMLImageElement(width, height) {\n            return Image.$$create({\n                tagName: 'img',\n                nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                attrs: {},\n                width,\n                height,\n            }, that.$_tree)\n        }\n\n        this.$_pageId = pageId\n        this.$_tree = new Tree(pageId, {\n            type: 'element',\n            tagName: 'body',\n            attrs: {},\n            unary: false,\n            nodeId: 'e-body',\n            children: [],\n        }, nodeIdMap, this)\n        this.$_cookie = new Cookie(pageName)\n        this.$_config = null\n\n        // documentElement\n        this.$_node = this.$$createElement({\n            tagName: 'html',\n            attrs: {},\n            nodeId: `a-${tool.getId()}`, // 运行前生成，使用 a- 前缀\n            type: Node.DOCUMENT_NODE,\n        })\n        this.$_node.$$updateParent(this) // documentElement 的 parentNode 是 document\n\n        // head 元素\n        this.$_head = this.createElement('head')\n\n        // 更新 body 的 parentNode\n        this.$_tree.root.$$updateParent(this.$_node)\n        this.$_node.$$children.push(this.$_tree.root)\n\n        // 持久化 cookie\n        if (cookieStore !== 'memory' && cookieStore !== 'globalmemory') {\n            try {\n                const key = cookieStore === 'storage' ? `PAGE_COOKIE_${pageName}` : 'PAGE_COOKIE'\n                const cookie = wx.getStorageSync(key)\n                if (cookie) this.$$cookieInstance.deserialize(cookie)\n            } catch (err) {\n                // ignore\n            }\n        }\n    }\n\n    /**\n     * Image 构造器\n     */\n    get $$imageConstructor() {\n        return this.$_imageConstructor\n    }\n\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 完整的 cookie，包括 httpOnly 也能获取到\n     */\n    get $$cookie() {\n        return this.$_cookie.getCookie(this.URL, true)\n    }\n\n    /**\n     * 获取 cookie 实例\n     */\n    get $$cookieInstance() {\n        return this.$_cookie\n    }\n\n    /**\n     * 创建内置组件的时候是否支持不用前缀写法\n     */\n    get $$notNeedPrefix() {\n        if (!this.$_config) this.$_config = cache.getConfig()\n        return this.$_config && this.$_config.runtime && this.$_config.runtime.wxComponent === 'noprefix'\n    }\n\n    /**\n     * 设置页面显示状态\n     */\n    set $$visibilityState(value) {\n        this.$_visibilityState = value\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options) {\n        this.documentElement.$$trigger(eventName, options)\n    }\n\n    /**\n     * 内部所有节点创建都走此接口，统一把控\n     */\n    $$createElement(options, tree) {\n        const originTagName = options.tagName\n        const tagName = originTagName.toUpperCase()\n        let wxComponentName = null\n        tree = tree || this.$_tree\n\n        const constructorClass = CONSTRUCTOR_MAP[tagName]\n        if (constructorClass) {\n            return constructorClass.$$create(options, tree)\n        // eslint-disable-next-line no-cond-assign\n        } else if (wxComponentName = tool.checkIsWxComponent(originTagName, this.$$notNeedPrefix)) {\n            // 内置组件的特殊写法，转成 wx-component 节点\n            options.tagName = 'wx-component'\n            options.attrs = options.attrs || {}\n            options.attrs.behavior = wxComponentName\n            return WxComponent.$$create(options, tree)\n        } else if (WX_CUSTOM_COMPONENT_MAP[originTagName]) {\n            // 自定义组件的特殊写法，转成 wx-custom-component 节点\n            options.tagName = 'wx-custom-component'\n            options.attrs = options.attrs || {}\n            options.componentName = originTagName\n            return WxCustomComponent.$$create(options, tree)\n        } else if (!tool.isTagNameSupport(tagName)) {\n            return NotSupport.$$create(options, tree)\n        } else {\n            return Element.$$create(options, tree)\n        }\n    }\n\n    /**\n     * 内部所有文本节点创建都走此接口，统一把控\n     */\n    $$createTextNode(options, tree) {\n        return TextNode.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 内部所有注释节点创建都走此接口，统一把控\n     */\n    $$createComment(options, tree) {\n        return Comment.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 处理 Set-Cookie 头串\n     */\n    $$setCookie(str) {\n        if (str && typeof str === 'string') {\n            let start = 0\n            let startSplit = 0\n            let nextSplit = str.indexOf(',', startSplit)\n            const cookies = []\n\n            while (nextSplit >= 0) {\n                const lastSplitStr = str.substring(start, nextSplit)\n                const splitStr = str.substr(nextSplit)\n\n                if (/^,\\s*([^,=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.test(splitStr)) {\n                // 分割成功，则上一片是完整 cookie\n                    cookies.push(lastSplitStr)\n                    start = nextSplit + 1\n                }\n\n                startSplit = nextSplit + 1\n                nextSplit = str.indexOf(',', startSplit)\n            }\n\n            // 塞入最后一片 cookie\n            cookies.push(str.substr(start))\n\n            cookies.forEach(cookie => this.cookie = cookie)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeType() {\n        return Node.DOCUMENT_NODE\n    }\n\n    get documentElement() {\n        return this.$_node\n    }\n\n    get body() {\n        return this.$_tree.root\n    }\n\n    get nodeName() {\n        return '#document'\n    }\n\n    get head() {\n        return this.$_head\n    }\n\n    get defaultView() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get URL() {\n        if (this.defaultView) return this.defaultView.location.href\n\n        return ''\n    }\n\n    get cookie() {\n        return this.$_cookie.getCookie(this.URL)\n    }\n\n    set cookie(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_cookie.setCookie(value, this.URL)\n    }\n\n    get visibilityState() {\n        return this.$_visibilityState\n    }\n\n    get hidden() {\n        return this.$_visibilityState === 'visible'\n    }\n\n    getElementById(id) {\n        if (typeof id !== 'string') return\n\n        return this.$_tree.getById(id) || null\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this.documentElement)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this.documentElement)\n    }\n\n    getElementsByName(name) {\n        if (typeof name !== 'string') return []\n\n        return this.$_tree.query(`*[name=${name}]`, this.documentElement)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this.documentElement)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this.documentElement)\n    }\n\n    createElement(tagName) {\n        if (typeof tagName !== 'string') return\n\n        tagName = tagName.trim()\n        if (!tagName) return\n\n        return this.$$createElement({\n            tagName,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createElementNS(ns, tagName) {\n        // 不支持真正意义上的 createElementNS，转成调用 createElement\n        return this.createElement(tagName)\n    }\n\n    createTextNode(content) {\n        content = '' + content\n\n        return this.$$createTextNode({\n            content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createComment() {\n        // 忽略注释内容的传入\n        return this.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createDocumentFragment() {\n        return Element.$$create({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        }, this.$_tree)\n    }\n\n    createEvent() {\n        const window = cache.getWindow(this.$_pageId)\n\n        return new window.CustomEvent()\n    }\n\n    addEventListener(eventName, handler, options) {\n        this.documentElement.addEventListener(eventName, handler, options)\n    }\n\n    removeEventListener(eventName, handler, isCapture) {\n        this.documentElement.removeEventListener(eventName, handler, isCapture)\n    }\n\n    dispatchEvent(evt) {\n        this.documentElement.dispatchEvent(evt)\n    }\n}\n\nmodule.exports = Document\n","const Event = require('./event')\n\nclass CustomEvent extends Event {\n    constructor(name = '', options = {}) {\n        super({\n            name,\n            ...options,\n        })\n    }\n}\n\nmodule.exports = CustomEvent\n","/**\n * babel extends 无法直接继承 Array，所以换种方法来继承：https://babeljs.io/docs/en/caveats/#classes\n */\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nfunction ClassList(onUpdate) {\n    this.$$init(onUpdate)\n}\n\n/**\n * 创建实例\n */\nClassList.$$create = function(onUpdate) {\n    const config = cache.getConfig()\n\n    if (config.optimization.domExtendMultiplexing) {\n    // 复用 dom 扩展对象\n        const instance = pool.get()\n\n        if (instance) {\n            instance.$$init(onUpdate)\n            return instance\n        }\n    }\n\n    return new ClassList(onUpdate)\n}\n\nClassList.prototype = Object.assign([], {\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate\n    },\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.length = 0\n    },\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    },\n\n    /**\n     * 解析 className\n     */\n    $$parse(className = '') {\n        this.length = 0 // 置空当前内容\n\n        className = className.trim()\n        className = className ? className.split(/\\s+/) : []\n\n        for (const item of className) {\n            this.push(item)\n        }\n\n        this.$_doUpdate()\n    },\n\n    /**\n     * 对外属性和方法\n     */\n    item(index) {\n        return this[index]\n    },\n\n    contains(className) {\n        if (typeof className !== 'string') return false\n\n        return this.indexOf(className) !== -1\n    },\n\n    add(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (className && this.indexOf(className) === -1) {\n                this.push(className)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    remove(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (!className) continue\n\n            const index = this.indexOf(className)\n            if (index >= 0) {\n                this.splice(index, 1)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    toggle(className, force) {\n        if (typeof className !== 'string') return false\n\n        className = className.trim()\n\n        if (!className) return false\n\n        const isNotContain = this.indexOf(className) === -1\n        let action = isNotContain ? 'add' : 'remove'\n        action = force === true ? 'add' : force === false ? 'remove' : action\n\n        if (action === 'add') {\n            this.add(className)\n        } else {\n            this.remove(className)\n        }\n\n        return force === true || force === false ? force : isNotContain\n    },\n\n    toString() {\n        return this.join(' ')\n    },\n})\n\nmodule.exports = ClassList\n","const styleList = require('./style-list')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\n/**\n * 解析样式串\n */\nfunction parse(styleText) {\n    const rules = {}\n\n    if (styleText) {\n        styleText = tool.decodeContent(styleText)\n        styleText = styleText.replace(/url\\([^)]+\\)/ig, all => all.replace(/;/ig, ':#||#:')) // 先处理值里面的分号\n        styleText.split(';').forEach(rule => {\n            rule = rule.trim()\n            if (!rule) return\n\n            const split = rule.indexOf(':')\n            if (split === -1) return\n\n            const name = tool.toCamel(rule.substr(0, split).trim())\n            rules[name] = rule.substr(split + 1).replace(/:#\\|\\|#:/ig, ';').trim()\n        })\n    }\n\n    return rules\n}\n\nclass Style {\n    constructor(onUpdate) {\n        this.$$init(onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(onUpdate)\n                return instance\n            }\n        }\n\n        return new Style(onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate || (() => {})\n        this.$_disableCheckUpdate = false // 是否禁止检查更新\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.$_disableCheckUpdate = false\n\n        styleList.forEach(name => {\n            this[`$_${name}`] = undefined\n        })\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 检查更新\n     */\n    $_checkUpdate() {\n        if (!this.$_disableCheckUpdate) {\n            this.$_doUpdate()\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get cssText() {\n        const joinText = styleList.filter(name => this[`$_${name}`]).map(name => `${tool.toDash(name)}:${this['$_' + name]}`).join(';').trim()\n        return joinText ? `${joinText};` : ''\n    }\n\n    set cssText(styleText) {\n        if (typeof styleText !== 'string') return\n\n        styleText = styleText.replace(/\"/g, '\\'')\n\n        // 解析样式\n        const rules = parse(styleText)\n\n        this.$_disableCheckUpdate = true // 将每条规则的设置合并为一次更新\n        for (const name of styleList) {\n            this[name] = rules[name]\n        }\n        this.$_disableCheckUpdate = false\n        this.$_checkUpdate()\n    }\n\n    getPropertyValue(name) {\n        if (typeof name !== 'string') return ''\n\n        name = tool.toCamel(name)\n        return this[name] || ''\n    }\n}\n\n/**\n * 设置各个属性的 getter、setter\n */\nconst properties = {}\nstyleList.forEach(name => {\n    properties[name] = {\n        get() {\n            return this[`$_${name}`] || ''\n        },\n        set(value) {\n            const config = cache.getConfig()\n            const oldValue = this[`$_${name}`]\n            value = value !== undefined ? '' + value : undefined\n\n            // 判断 value 是否需要删减\n            if (value && config.optimization.styleValueReduce && value.length > config.optimization.styleValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.styleValueReduce}`)\n                value = undefined\n            }\n\n            this[`$_${name}`] = value\n            if (oldValue !== value) this.$_checkUpdate()\n        },\n    }\n})\nObject.defineProperties(Style.prototype, properties)\n\nmodule.exports = Style\n","const Pool = require('../util/pool')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\n\nconst pool = new Pool()\n\nclass Attribute {\n    constructor(element, onUpdate) {\n        this.$$init(element, onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(element, onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(element, onUpdate)\n                return instance\n            }\n        }\n\n        return new Attribute(element, onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(element, onUpdate) {\n        this.$_element = element\n        this.$_doUpdate = onUpdate\n        this.$_map = {}\n        this.$_list = []\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_element = null\n        this.$_doUpdate = null\n        this.$_map = null\n        this.$_list = null\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 属性映射表\n     */\n    get map() {\n        return this.$_map\n    }\n\n    /**\n     * 属性列表，需要动态更新\n     */\n    get list() {\n        return this.$_list\n    }\n\n    /**\n     * 设置属性\n     */\n    set(name, value) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            map.id = value\n        } else if (name === 'class' || (element.tagName === 'WX-COMPONENT' && name === 'className')) {\n            element.className = value\n        } else if (name === 'style') {\n            element.style.cssText = value\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            element.dataset[datasetName] = value\n        } else {\n            const config = cache.getConfig()\n\n            // 判断 value 是否需要删减\n            if (typeof value === 'string' && config.optimization.attrValueReduce && value.length > config.optimization.attrValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.attrValueReduce}`)\n                value = ''\n            }\n\n            map[name] = value\n\n            // canvas 如果有 node 对象，需要将 width/height 设置进去\n            if ((name === 'width' || name === 'height') && element.tagName === 'CANVAS' && element.$$node) {\n                element.$$node[name] = value\n            }\n\n            // 其他字段的设置需要触发父组件更新\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 取属性\n     */\n    get(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return map.id || ''\n        } if (name === 'class') {\n            return element.className\n        } else if (name === 'style') {\n            return element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return undefined\n            return element.dataset[datasetName]\n        } else {\n            return map[name]\n        }\n    }\n\n    /**\n     * 判断属性是否存在\n     */\n    has(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return !!element.id\n        } else if (name === 'class') {\n            return !!element.className\n        } else if (name === 'style') {\n            return !!element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return false\n            return Object.prototype.hasOwnProperty.call(element.dataset, datasetName)\n        } else {\n            return Object.prototype.hasOwnProperty.call(map, name)\n        }\n    }\n\n    /**\n     * 删除属性\n     */\n    remove(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            element.id = ''\n        } else if (name === 'class' || name === 'style') {\n            this.set(name, '')\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (element.$__dataset) delete element.dataset[datasetName]\n        } else {\n            // 其他字段的设置需要触发父组件更新\n            delete map[name]\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 更新属性列表\n     */\n    triggerUpdate() {\n        const map = this.$_map\n        const list = this.$_list\n\n        // 清空旧的列表\n        list.forEach(item => {\n            delete list[item.name]\n        })\n        delete list.class\n        delete list.style\n        list.length = 0\n\n        // 添加新列表\n        Object.keys(map).forEach(name => {\n            if (name !== 'id') {\n                const item = {name, value: map[name]}\n\n                list.push(item)\n                list[name] = item\n            }\n        })\n\n        const idValue = this.get('id')\n        const classValue = this.get('class')\n        const styleValue = this.get('style')\n        if (idValue) {\n            const item = {name: 'id', value: idValue}\n            list.push(item)\n            list.id = item\n        }\n        if (classValue) {\n            const item = {name: 'class', value: classValue}\n            list.push(item)\n            list.class = item\n        }\n        if (styleValue) {\n            const item = {name: 'style', value: styleValue}\n            list.push(item)\n            list.style = item\n        }\n    }\n}\n\nmodule.exports = Attribute\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass TextNode extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new TextNode(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'text'\n\n        super.$$init(options, tree)\n\n        this.$_content = options.content || ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_content = ''\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode) this.parentNode.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n            content: this.$_content,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#text'\n    }\n\n    get nodeType() {\n        return Node.TEXT_NODE\n    }\n\n    get nodeValue() {\n        return this.textContent\n    }\n\n    set nodeValue(value) {\n        this.textContent = value\n    }\n\n    get textContent() {\n        return this.$_content\n    }\n\n    set textContent(value) {\n        value += ''\n\n        this.$_content = value\n        this.$_triggerParentUpdate()\n    }\n\n    get data() {\n        return this.textContent\n    }\n\n    set data(value) {\n        this.textContent = value\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createTextNode({\n            content: this.$_content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = TextNode\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass Comment extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Comment(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'comment'\n\n        super.$$init(options, tree)\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#comment'\n    }\n\n    get nodeType() {\n        return Node.COMMENT_NODE\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = Comment\n","const tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst Window = require('./window')\nconst Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\n\nmodule.exports = {\n    createPage(route, config) {\n        if (config) cache.setConfig(config)\n\n        const pageId = `p-${tool.getId()}-/${route}`\n        const window = new Window(pageId)\n        const nodeIdMap = {}\n        const document = new Document(pageId, nodeIdMap)\n\n        cache.init(pageId, {\n            window,\n            document,\n            nodeIdMap,\n        })\n\n        return {\n            pageId,\n            window,\n            document,\n        }\n    },\n\n    destroyPage(pageId) {\n        cache.destroy(pageId)\n    },\n\n    // 开放给 miniprogram-element\n    $$adapter: {\n        cache,\n        EventTarget,\n        Event,\n        tool,\n    },\n}\n","const Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst OriginalCustomEvent = require('./event/custom-event')\nconst Location = require('./bom/location')\nconst Navigator = require('./bom/navigator')\nconst Screen = require('./bom/screen')\nconst History = require('./bom/history')\nconst Miniprogram = require('./bom/miniprogram')\nconst {SessionStorage, LocalStorage} = require('./bom/storage')\nconst WorkerImpl = require('./bom/worker')\nconst Performance = require('./bom/performance')\nconst OriginalXMLHttpRequest = require('./bom/xml-http-request')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst ClassList = require('./node/class-list')\nconst Style = require('./node/style')\nconst Attribute = require('./node/attribute')\nconst cache = require('./util/cache')\nconst tool = require('./util/tool')\n\nlet lastRafTime = 0\nconst WINDOW_PROTOTYPE_MAP = {\n    location: Location.prototype,\n    navigator: Navigator.prototype,\n    performance: Performance.prototype,\n    screen: Screen.prototype,\n    history: History.prototype,\n    localStorage: LocalStorage.prototype,\n    sessionStorage: SessionStorage.prototype,\n    XMLHttpRequest: OriginalXMLHttpRequest.prototype,\n    event: Event.prototype,\n}\nconst ELEMENT_PROTOTYPE_MAP = {\n    attribute: Attribute.prototype,\n    classList: ClassList.prototype,\n    style: Style.prototype,\n}\nconst subscribeMap = {}\nconst globalObject = {}\n\nclass Window extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        const config = cache.getConfig()\n        const timeOrigin = +new Date()\n        const that = this\n\n        this.$_pageId = pageId\n\n        this.$_outerHeight = 0\n        this.$_outerWidth = 0\n        this.$_innerHeight = 0\n        this.$_innerWidth = 0\n\n        this.$_location = new Location(pageId)\n        this.$_navigator = new Navigator()\n        this.$_screen = new Screen()\n        this.$_history = new History(this.$_location)\n        this.$_miniprogram = new Miniprogram(pageId)\n        this.$_localStorage = new LocalStorage(this)\n        this.$_sessionStorage = new SessionStorage(this)\n        this.$_performance = new Performance(timeOrigin)\n\n        this.$_nowFetchingWebviewInfoPromise = null // 正在拉取 webview 端信息的 promise 实例\n\n        this.$_fetchDeviceInfo()\n        this.$_initInnerEvent()\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onhashchange = null\n\n        // HTMLElement 构造器\n        this.$_elementConstructor = function HTMLElement(...args) {\n            return Element.$$create(...args)\n        }\n\n        // CustomEvent 构造器\n        this.$_customEventConstructor = class CustomEvent extends OriginalCustomEvent {\n            constructor(name = '', options = {}) {\n                options.timeStamp = +new Date() - timeOrigin\n                super(name, options)\n            }\n        }\n\n        // XMLHttpRequest 构造器\n        this.$_xmlHttpRequestConstructor = class XMLHttpRequest extends OriginalXMLHttpRequest {constructor() { super(that) }}\n\n        // Worker/SharedWorker 构造器\n        if (config.generate && config.generate.worker) {\n            this.$_workerConstructor = class Worker extends WorkerImpl.Worker {constructor(url) { super(url, that) }}\n            this.$_sharedWorkerConstructor = class SharedWorker extends WorkerImpl.SharedWorker {constructor(url) { super(url, that) }}\n        }\n\n        // react 环境兼容\n        this.HTMLIFrameElement = function() {}\n    }\n\n    /**\n     * 初始化内部事件\n     */\n    $_initInnerEvent() {\n        // 监听 location 的事件\n        this.$_location.addEventListener('hashchange', ({oldURL, newURL}) => {\n            this.$$trigger('hashchange', {\n                event: new Event({\n                    name: 'hashchange',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {\n                        oldURL,\n                        newURL,\n                    },\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听 history 的事件\n        this.$_history.addEventListener('popstate', ({state}) => {\n            this.$$trigger('popstate', {\n                event: new Event({\n                    name: 'popstate',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {state},\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听滚动事件\n        this.addEventListener('scroll', () => {\n            const document = this.document\n            // 记录最近一次滚动事件触发的时间戳\n            if (document) document.documentElement.$$scrollTimeStamp = +new Date()\n        })\n    }\n\n    /**\n     * 拉取设备参数\n     */\n    $_fetchDeviceInfo() {\n        try {\n            const info = wx.getSystemInfoSync()\n\n            this.$_outerHeight = info.screenHeight\n            this.$_outerWidth = info.screenWidth\n            this.$_innerHeight = info.windowHeight\n            this.$_innerWidth = info.windowWidth\n\n            this.$_screen.$$reset(info)\n            this.$_navigator.$$reset(info)\n        } catch (err) {\n            // ignore\n        }\n    }\n\n    /**\n     * 拉取处理切面必要的信息\n     */\n    $_getAspectInfo(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n        let method = descriptor[1]\n        let type = descriptor[2]\n        let prototype\n\n        // 找出对象原型\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                prototype = WINDOW_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Window.prototype\n            }\n        } else if (main === 'document') {\n            prototype = Document.prototype\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                prototype = ELEMENT_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Element.prototype\n            }\n        } else if (main === 'textNode') {\n            prototype = TextNode.prototype\n        } else if (main === 'comment') {\n            prototype = Comment.prototype\n        }\n\n        return {prototype, method, type}\n    }\n\n    /**\n     * 暴露给小程序用的对象\n     */\n    get $$miniprogram() {\n        return this.$_miniprogram\n    }\n\n    /**\n     * 获取全局共享对象\n     */\n    get $$global() {\n        return globalObject\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        const pageId = this.$_pageId\n\n        WorkerImpl.destroy(pageId)\n        Object.keys(subscribeMap).forEach(name => {\n            const handlersMap = subscribeMap[name]\n            if (handlersMap[pageId]) handlersMap[pageId] = null\n        })\n    }\n\n    /**\n     * 小程序端的 getComputedStyle 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.fields.html\n     */\n    $$getComputedStyle(dom, computedStyle = []) {\n        tool.flushThrottleCache() // 先清空 setData\n        return new Promise((resolve, reject) => {\n            if (dom.tagName === 'BODY') {\n                this.$$createSelectorQuery().select('.miniprogram-root').fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            } else {\n                this.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${dom.$$nodeId}`).fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 强制清空 setData 缓存\n     */\n    $$forceRender() {\n        tool.flushThrottleCache()\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options = {}) {\n        if (eventName === 'error' && typeof options.event === 'string') {\n            // 此处触发自 App.onError 钩子\n            const errStack = options.event\n            const errLines = errStack.split('\\n')\n            let message = ''\n            for (let i = 0, len = errLines.length; i < len; i++) {\n                const line = errLines[i]\n                if (line.trim().indexOf('at') !== 0) {\n                    message += (line + '\\n')\n                } else {\n                    break\n                }\n            }\n\n            const error = new Error(message)\n            error.stack = errStack\n            options.event = new this.$_customEventConstructor('error', {\n                target: this,\n                $$extra: {\n                    message,\n                    filename: '',\n                    lineno: 0,\n                    colno: 0,\n                    error,\n                },\n            })\n            options.args = [message, error]\n\n            // window.onerror 比较特殊，需要调整参数\n            if (typeof this.onerror === 'function' && !this.onerror.$$isOfficial) {\n                const oldOnError = this.onerror\n                this.onerror = (event, message, error) => {\n                    oldOnError.call(this, message, '', 0, 0, error)\n                }\n                this.onerror.$$isOfficial = true // 标记为官方封装的方法\n            }\n        }\n\n        super.$$trigger(eventName, options)\n    }\n\n    /**\n     * 获取原型\n     */\n    $$getPrototype(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                return WINDOW_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Window.prototype\n            }\n        } else if (main === 'document') {\n            if (!sub) {\n                return Document.prototype\n            }\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                return ELEMENT_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Element.prototype\n            }\n        } else if (main === 'textNode') {\n            if (!sub) {\n                return TextNode.prototype\n            }\n        } else if (main === 'comment') {\n            if (!sub) {\n                return Comment.prototype\n            }\n        }\n    }\n\n    /**\n     * 扩展 dom/bom 对象\n     */\n    $$extend(descriptor, options) {\n        if (!descriptor || !options || typeof descriptor !== 'string' || typeof options !== 'object') return\n\n        const prototype = this.$$getPrototype(descriptor)\n        const keys = Object.keys(options)\n\n        if (prototype) keys.forEach(key => prototype[key] = options[key])\n    }\n\n    /**\n     * 对 dom/bom 对象方法追加切面方法\n     */\n    $$addAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function') return\n\n            // 重写原始方法\n            if (!methodInPrototype.$$isHook) {\n                prototype[method] = function(...args) {\n                    const beforeFuncs = prototype[method].$$before || []\n                    const afterFuncs = prototype[method].$$after || []\n\n                    if (beforeFuncs.length) {\n                        for (const beforeFunc of beforeFuncs) {\n                            const isStop = beforeFunc.apply(this, args)\n                            if (isStop) return\n                        }\n                    }\n\n                    const res = methodInPrototype.apply(this, args)\n\n                    if (afterFuncs.length) {\n                        for (const afterFunc of afterFuncs) {\n                            afterFunc.call(this, res)\n                        }\n                    }\n\n                    return res\n                }\n                prototype[method].$$isHook = true\n                prototype[method].$$originalMethod = methodInPrototype\n            }\n\n            // 追加切面方法\n            if (type === 'before') {\n                prototype[method].$$before = prototype[method].$$before || []\n                prototype[method].$$before.push(func)\n            } else if (type === 'after') {\n                prototype[method].$$after = prototype[method].$$after || []\n                prototype[method].$$after.push(func)\n            }\n        }\n    }\n\n    /**\n     * 删除对 dom/bom 对象方法追加前置/后置处理\n     */\n    $$removeAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function' || !methodInPrototype.$$isHook) return\n\n            // 移除切面方法\n            if (type === 'before' && methodInPrototype.$$before) {\n                methodInPrototype.$$before.splice(methodInPrototype.$$before.indexOf(func), 1)\n            } else if (type === 'after' && methodInPrototype.$$after) {\n                methodInPrototype.$$after.splice(methodInPrototype.$$after.indexOf(func), 1)\n            }\n\n            if ((!methodInPrototype.$$before || !methodInPrototype.$$before.length) && (!methodInPrototype.$$after || !methodInPrototype.$$after.length)) {\n                prototype[method] = methodInPrototype.$$originalMethod\n            }\n        }\n    }\n\n    /**\n     * 订阅广播事件\n     */\n    $$subscribe(name, handler) {\n        if (typeof name !== 'string' || typeof handler !== 'function') return\n\n        const pageId = this.$_pageId\n        subscribeMap[name] = subscribeMap[name] || {}\n        subscribeMap[name][pageId] = subscribeMap[name][pageId] || []\n        subscribeMap[name][pageId].push(handler)\n    }\n\n    /**\n     * 取消订阅广播事件\n     */\n    $$unsubscribe(name, handler) {\n        const pageId = this.$_pageId\n\n        if (typeof name !== 'string' || !subscribeMap[name] || !subscribeMap[name][pageId]) return\n\n        const handlers = subscribeMap[name][pageId]\n        if (!handler) {\n            // 取消所有 handler 的订阅\n            handlers.length = 0\n        } else if (typeof handler === 'function') {\n            const index = handlers.indexOf(handler)\n            if (index !== -1) handlers.splice(index, 1)\n        }\n    }\n\n    /**\n     * 发布广播事件\n     */\n    $$publish(name, data) {\n        if (typeof name !== 'string' || !subscribeMap[name]) return\n\n        Object.keys(subscribeMap[name]).forEach(pageId => {\n            const handlers = subscribeMap[name][pageId]\n            if (handlers && handlers.length) {\n                handlers.forEach(handler => {\n                    if (typeof handler !== 'function') return\n\n                    try {\n                        handler.call(null, data)\n                    } catch (err) {\n                        console.error(err)\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get location() {\n        return this.$_location\n    }\n\n    set location(href) {\n        this.$_location.href = href\n    }\n\n    get navigator() {\n        return this.$_navigator\n    }\n\n    get CustomEvent() {\n        return this.$_customEventConstructor\n    }\n\n    get Event() {\n        return Event\n    }\n\n    get self() {\n        return this\n    }\n\n    get localStorage() {\n        return this.$_localStorage\n    }\n\n    get sessionStorage() {\n        return this.$_sessionStorage\n    }\n\n    get screen() {\n        return this.$_screen\n    }\n\n    get history() {\n        return this.$_history\n    }\n\n    get outerHeight() {\n        return this.$_outerHeight\n    }\n\n    get outerWidth() {\n        return this.$_outerWidth\n    }\n\n    get innerHeight() {\n        return this.$_innerHeight\n    }\n\n    get innerWidth() {\n        return this.$_innerWidth\n    }\n\n    get Image() {\n        return this.document.$$imageConstructor\n    }\n\n    get setTimeout() {\n        return setTimeout.bind(null)\n    }\n\n    get clearTimeout() {\n        return clearTimeout.bind(null)\n    }\n\n    get setInterval() {\n        return setInterval.bind(null)\n    }\n\n    get clearInterval() {\n        return clearInterval.bind(null)\n    }\n\n    get HTMLElement() {\n        return this.$_elementConstructor\n    }\n\n    get Element() {\n        return Element\n    }\n\n    get Node() {\n        return Node\n    }\n\n    get RegExp() {\n        return RegExp\n    }\n\n    get Math() {\n        return Math\n    }\n\n    get Number() {\n        return Number\n    }\n\n    get Boolean() {\n        return Boolean\n    }\n\n    get String() {\n        return String\n    }\n\n    get Date() {\n        return Date\n    }\n\n    get Symbol() {\n        return Symbol\n    }\n\n    get parseInt() {\n        return parseInt\n    }\n\n    get parseFloat() {\n        return parseFloat\n    }\n\n    get performance() {\n        return this.$_performance\n    }\n\n    get SVGElement() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.SVGElement is not supported')\n        return function() {}\n    }\n\n    get XMLHttpRequest() {\n        return this.$_xmlHttpRequestConstructor\n    }\n\n    get Worker() {\n        return this.$_workerConstructor\n    }\n\n    get SharedWorker() {\n        return this.$_sharedWorkerConstructor\n    }\n\n    open(url) {\n        // 不支持 windowName 和 windowFeatures\n        this.location.$$open(url)\n    }\n\n    close() {\n        wx.navigateBack({\n            delta: 1,\n        })\n    }\n\n    getComputedStyle() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.getComputedStyle is not supported, please use window.$$getComputedStyle instead of it')\n        return {\n            // vue transition 组件使用\n            transitionDelay: '',\n            transitionDuration: '',\n            animationDelay: '',\n            animationDuration: '',\n        }\n    }\n\n    requestAnimationFrame(callback) {\n        if (typeof callback !== 'function') return\n\n        const now = new Date()\n        const nextRafTime = Math.max(lastRafTime + 16, now)\n        return setTimeout(() => {\n            callback(nextRafTime)\n            lastRafTime = nextRafTime\n        }, nextRafTime - now)\n    }\n\n    cancelAnimationFrame(timeId) {\n        return clearTimeout(timeId)\n    }\n}\n\nmodule.exports = Window\n","const QuerySelector = require('./query-selector')\nconst tool = require('../util/tool')\n\n/**\n * 遍历 dom 树，收集类和标签对应的节点列表\n */\nfunction walkDomTree(node, cache) {\n    const tagMap = cache.tagMap = cache.tagMap || {}\n    const classMap = cache.classMap = cache.classMap || {}\n    const {tagName, classList} = node\n\n    // 标签\n    tagMap[tagName] = tagMap[tagName] || []\n    tagMap[tagName].push(node)\n\n    // 类\n    for (const className of classList) {\n        classMap[className] = classMap[className] || []\n        classMap[className].push(node)\n    }\n\n    const children = node.children || []\n\n    for (const child of children) {\n        // 递归遍历\n        walkDomTree(child, cache)\n    }\n}\n\nclass Tree {\n    constructor(pageId, root, nodeIdMap, document) {\n        this.pageId = pageId\n        this.root = document.$$createElement(root, this)\n        this.nodeIdMap = nodeIdMap\n        this.idMap = {}\n        this.document = document\n\n        this.querySelector = new QuerySelector()\n        if (nodeIdMap) nodeIdMap[root.nodeId] = this.root\n\n        this.walk(root, this.root)\n    }\n\n    /**\n     * 遍历 ast\n     */\n    walk(ast, parentNode) {\n        const children = ast.children\n        const idMap = this.idMap\n        const nodeIdMap = this.nodeIdMap\n        const document = this.document\n\n        if (!children || !children.length) return\n\n        // 遍历子节点\n        for (const child of children) {\n            let childNode\n\n            if (child.type === 'element') {\n                childNode = document.$$createElement(child, this)\n            } else if (child.type === 'text') {\n                childNode = document.$$createTextNode(child, this)\n            }\n\n            // 处理 id 缓存\n            const id = childNode.id\n            if (id && !idMap[id]) {\n                idMap[id] = childNode\n            }\n\n            // 处理 nodeId 缓存\n            if (nodeIdMap) nodeIdMap[child.nodeId] = childNode\n\n            // 插入子节点\n            parentNode.appendChild(childNode)\n\n            // 遍历子节点的 ast\n            this.walk(child, childNode)\n        }\n    }\n\n    /**\n     * 更新 idMap\n     */\n    updateIdMap(id, node) {\n        this.idMap[id] = node\n    }\n\n    /**\n     * 根据 id 获取节点\n     */\n    getById(id) {\n        return this.idMap[id]\n    }\n\n    /**\n     * 根据标签名获取节点列表\n     */\n    getByTagName(tagName, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        if (tool.checkIsWxComponent(tagName.toLowerCase(), false)) {\n            // 内置组件\n            tagName = tagName.toLowerCase().slice(3)\n            return (cache.tagMap['WX-COMPONENT'] || []).filter(findNode => findNode.behavior === tagName)\n        }\n\n        return cache.tagMap[tagName.toUpperCase()] || []\n    }\n\n    /**\n     * 根据类名获取节点列表\n     */\n    getByClassName(className, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.classMap[className] || []\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    query(selector, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return this.querySelector.exec(selector, {\n            idMap: this.idMap,\n            tagMap: cache.tagMap,\n            classMap: cache.classMap,\n        })\n    }\n}\n\nmodule.exports = Tree\n","/**\n * 感谢 sizzle：https://github.com/jquery/sizzle/tree/master\n */\nconst tool = require('../util/tool')\n\nconst PSEUDO_CHECK = {\n    checked: node => node.checked || node.selected,\n    disabled: node => node.disabled,\n    enabled: node => !node.disabled,\n    'first-child': node => node.parentNode.children[0] === node,\n    'last-child': node => node.parentNode.children[node.parentNode.children.length - 1] === node,\n    'nth-child': (node, param) => {\n        const children = node.parentNode.children\n        const {a, b} = param\n        const index = children.indexOf(node) + 1\n\n        if (a) {\n            return (index - b) % a === 0\n        } else {\n            return index === b\n        }\n    },\n}\n\nconst ATTR_CHECK = {\n    '=': (nodeVal, val) => nodeVal === val,\n    '~=': (nodeVal, val) => nodeVal.split(/\\s+/).indexOf(val) !== -1,\n    '|=': (nodeVal, val) => nodeVal === val || nodeVal.indexOf(val + '-') === 0,\n    '^=': (nodeVal, val) => nodeVal.indexOf(val) === 0,\n    '$=': (nodeVal, val) => nodeVal.substr(nodeVal.length - val.length) === val,\n    '*=': (nodeVal, val) => nodeVal.indexOf(val) !== -1,\n}\n\nconst KINSHIP_CHECK = {\n    ' ': (node, kinshipRule) => {\n        let kinshipNode = node.parentNode\n\n        while (kinshipNode) {\n            if (checkHit(kinshipNode, kinshipRule)) return kinshipNode\n\n            kinshipNode = kinshipNode.parentNode\n        }\n\n        return null\n    },\n    '>': (node, kinshipRule) => {\n        const kinshipNode = node.parentNode\n\n        return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n    },\n    '+': (node, kinshipRule) => {\n        const children = node.parentNode\n\n        for (let i = 0, len = children.length; i < len; i++) {\n            const child = children[i]\n\n            if (child === node) {\n                const kinshipNode = children[i - 1]\n\n                return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n            }\n        }\n\n        return null\n    },\n    '~': (node, kinshipRule) => {\n        const children = node.parentNode\n        let foundCurrent = false\n\n        for (let i = children.length - 1; i >= 0; i--) {\n            const child = children[i]\n\n            if (foundCurrent && checkHit(child, kinshipRule)) return child\n            if (child === node) foundCurrent = true\n        }\n\n        return null\n    },\n}\n\n/**\n * 检查节点是否符合规则\n */\nfunction checkHit(node, rule) {\n    if (!node) return false\n\n    const {\n        id, class: classList, tag, pseudo, attr\n    } = rule\n\n    // id 选择器\n    if (id) {\n        if (node.id !== id) return false\n    }\n\n    // 类选择器\n    if (classList && classList.length) {\n        for (const className of classList) {\n            if (!node.classList || !node.classList.contains(className)) return false\n        }\n    }\n\n    // 标签选择器\n    if (tag && tag !== '*') {\n        if (tool.checkIsWxComponent(tag.toLowerCase(), false)) {\n            // 内置组件\n            if (node.tagName !== 'WX-COMPONENT' || node.behavior !== tag.slice(3).toLowerCase()) return false\n        } else if (node.tagName !== tag.toUpperCase()) {\n            return false\n        }\n    }\n\n    // 伪类选择器\n    if (pseudo) {\n        for (const {name, param} of pseudo) {\n            const checkPseudo = PSEUDO_CHECK[name]\n            if (!checkPseudo || !checkPseudo(node, param)) return false\n        }\n    }\n\n    // 属性选择器\n    if (attr) {\n        for (const {name, opr, val} of attr) {\n            const nodeVal = node[name] || node.getAttribute(name)\n\n            if (nodeVal === undefined) return false\n            if (opr) {\n                // 存在操作符\n                const checkAttr = ATTR_CHECK[opr]\n                if (!checkAttr || !checkAttr(nodeVal, val)) return false\n            }\n        }\n    }\n\n    return true\n}\n\n/**\n * 数组去重\n */\nfunction unique(list) {\n    for (let i = 0; i < list.length; i++) {\n        const a = list[i]\n\n        for (let j = i + 1; j < list.length; j++) {\n            const b = list[j]\n            if (a === b) list.splice(j, 1)\n        }\n    }\n\n    return list\n}\n\n/**\n * 将节点按照文档顺序排列\n */\nfunction sortNodes(list) {\n    list.sort((a, b) => {\n        const aList = [a]\n        const bList = [b]\n        let aParent = a.parentNode\n        let bParent = b.parentNode\n\n        if (aParent === bParent) {\n            // 检查顺序\n            const children = aParent.children\n            return children.indexOf(a) - children.indexOf(b)\n        }\n\n        // a 到根的列表\n        while (aParent) {\n            aList.unshift(aParent)\n            aParent = aParent.parentNode\n        }\n\n        // b 到根的列表\n        while (bParent) {\n            bList.unshift(bParent)\n            bParent = bParent.parentNode\n        }\n\n        // 找到最近共同祖先\n        let i = 0\n        while (aList[i] === bList[i]) i++\n\n        // 检查顺序\n        const children = aList[i - 1].children\n        return children.indexOf(aList[i]) - children.indexOf(bList[i])\n    })\n\n    return list\n}\n\nclass QuerySelector {\n    constructor() {\n        this.parseCache = {} // 解析查询串缓存\n        this.parseCacheKeys = []\n\n        const idReg = '#([\\\\\\\\\\\\w-]+)' // id 选择器\n        const tagReg = '\\\\*|wx-component|[a-zA-Z-]+\\\\w*' // 标签选择器\n        const classReg = '\\\\.([\\\\\\\\\\\\w-]+)' // 类选择器\n        const pseudoReg = ':([\\\\\\\\\\\\w-]+)(?:\\\\(([^\\\\(\\\\)]*|(?:\\\\([^\\\\)]+\\\\)|[^\\\\(\\\\)]*)+)\\\\))?' // 伪类选择器\n        const attrReg = '\\\\[\\\\s*([\\\\\\\\\\\\w-]+)(?:([*^$|~!]?=)[\\'\"]?([^\\'\"\\\\[]+)[\\'\"]?)?\\\\s*\\\\]' // 属性选择器\n        const kinshipReg = '\\\\s*([>\\\\s+~](?!=))\\\\s*' // 亲属选择器\n        this.regexp = new RegExp(`^(?:(${idReg})|(${tagReg})|(${classReg})|(${pseudoReg})|(${attrReg})|(${kinshipReg}))`)\n    }\n\n    /**\n     * 存入解析查询串缓存\n     */\n    setParseCache(key, value) {\n        if (this.parseCacheKeys.length > 50) {\n            delete this.parseCache[this.parseCacheKeys.shift()]\n        }\n\n        this.parseCacheKeys.push(key)\n        this.parseCache[key] = value\n\n        return value\n    }\n\n    /**\n     * 获取解析查询串缓存\n     */\n    getParseCache(key) {\n        return this.parseCache[key]\n    }\n\n    /**\n     * 解析查询串\n     */\n    parse(selector) {\n        const segment = [{tag: '*'}]\n        const regexp = this.regexp\n\n        const onProcess = (all, idAll, id, tagAll, classAll, className, pseudoAll, pseudoName, pseudoParam, attrAll, attrName, attrOpr, attrVal, kinshipAll, kinship) => {\n            if (idAll) {\n                // id 选择器\n                segment[segment.length - 1].id = id\n            } else if (tagAll) {\n                // 标签选择器\n                segment[segment.length - 1].tag = tagAll.toLowerCase()\n            } else if (classAll) {\n                // 类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.class = currentRule.class || []\n\n                currentRule.class.push(className)\n            } else if (pseudoAll) {\n                // 伪类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.pseudo = currentRule.pseudo || []\n                pseudoName = pseudoName.toLowerCase()\n\n                const pseudo = {name: pseudoName}\n\n                if (pseudoParam) pseudoParam = pseudoParam.trim()\n                if (pseudoName === 'nth-child') {\n                    // 处理 nth-child 伪类，参数统一处理成 an + b 的格式\n                    pseudoParam = pseudoParam.replace(/\\s+/g, '')\n\n                    if (pseudoParam === 'even') {\n                        // 偶数个\n                        pseudoParam = {a: 2, b: 2}\n                    } else if (pseudoParam === 'odd') {\n                        // 奇数个\n                        pseudoParam = {a: 2, b: 1}\n                    } else if (pseudoParam) {\n                        // 其他表达式\n                        const nthParsed = pseudoParam.match(/^(?:(\\d+)|(\\d*)?n([+-]\\d+)?)$/)\n\n                        if (!nthParsed) {\n                            // 解析失败\n                            pseudoParam = {a: 0, b: 1}\n                        } else if (nthParsed[1]) {\n                            // 纯数字\n                            pseudoParam = {a: 0, b: +nthParsed[1]}\n                        } else {\n                            // 表达式\n                            pseudoParam = {\n                                a: nthParsed[2] ? +nthParsed[2] : 1,\n                                b: nthParsed[3] ? +nthParsed[3] : 0,\n                            }\n                        }\n                    } else {\n                        // 默认取第一个\n                        pseudoParam = {a: 0, b: 1}\n                    }\n                }\n                if (pseudoParam) pseudo.param = pseudoParam\n\n                currentRule.pseudo.push(pseudo)\n            } else if (attrAll) {\n                // 属性选择器\n                const currentRule = segment[segment.length - 1]\n\n                currentRule.attr = currentRule.attr || []\n                currentRule.attr.push({\n                    name: attrName,\n                    opr: attrOpr,\n                    val: attrVal\n                })\n            } else if (kinshipAll) {\n                // 亲属选择器\n                segment[segment.length - 1].kinship = kinship\n                segment.push({tag: '*'}) // 插入新规则\n            }\n\n            return ''\n        }\n\n        // 逐个选择器解析\n        let lastParse\n        selector = selector.replace(regexp, onProcess)\n\n        while (lastParse !== selector) {\n            lastParse = selector\n            selector = selector.replace(regexp, onProcess)\n        }\n\n        return selector ? '' : segment\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    exec(selector, extra) {\n        selector = selector.trim().replace(/\\s+/g, ' ').replace(/\\s*(,|[>\\s+~](?!=)|[*^$|~!]?=)\\s*/g, '$1')\n        const {idMap, tagMap, classMap} = extra\n\n        // 查询缓存\n        let segment = this.getParseCache(selector)\n\n        // 无缓存，进行解析\n        if (!segment) {\n            segment = this.parse(selector)\n\n            // 无法正常解析\n            if (!segment) return []\n\n            this.setParseCache(selector, segment)\n        }\n\n        // 无解析结果\n        if (!segment[0]) return []\n\n        // 执行解析结果\n        const lastRule = segment[segment.length - 1] // 从右往左\n        const {id, class: classList, tag} = lastRule\n        let hitNodes = []\n\n        // 寻找可能符合要求的节点\n        if (id) {\n            // id 选择器\n            const node = idMap[id]\n            hitNodes = node ? [node] : []\n        } else if (classList && classList.length) {\n            // 类选择器\n            for (const className of classList) {\n                const classNodes = classMap[className]\n                if (classNodes) {\n                    for (const classNode of classNodes) {\n                        if (hitNodes.indexOf(classNode) === -1) hitNodes.push(classNode)\n                    }\n                }\n            }\n        } else if (tag && tag !== '*') {\n            // 标签选择器，查询指定标签，支持内置组件\n            const tagName = tool.checkIsWxComponent(tag.toLowerCase(), false) ? 'WX-COMPONENT' : tag.toUpperCase()\n            const tagNodes = tagMap[tagName]\n            if (tagNodes) hitNodes = tagNodes\n        } else {\n            // 标签选择器，查询全部节点\n            Object.keys(tagMap).forEach(key => {\n                const tagNodes = tagMap[key]\n                if (tagNodes) {\n                    for (const tagNode of tagNodes) hitNodes.push(tagNode)\n                }\n            })\n        }\n\n        // 从下往上过滤节点列表\n        if (hitNodes.length && segment.length) {\n            for (let i = hitNodes.length - 1; i >= 0; i--) {\n                let checkNode = hitNodes[i]\n                let isMatched = false\n\n                // 从右往左进行规则过滤\n                for (let j = segment.length - 1; j >= 0; j--) {\n                    const prevRule = segment[j - 1]\n\n                    // 检查待选节点，后续的亲属节点不需要再检查\n                    if (j === segment.length - 1) isMatched = checkHit(checkNode, lastRule)\n\n                    if (isMatched && prevRule) {\n                        // 检查亲属选择器\n                        const kinship = prevRule.kinship\n                        const checkKinship = KINSHIP_CHECK[kinship]\n\n                        if (checkKinship) checkNode = checkKinship(checkNode, prevRule)\n\n                        if (!checkNode) {\n                            // 亲属检查失败\n                            isMatched = false\n                            break\n                        }\n                    } else {\n                        break\n                    }\n                }\n\n                if (!isMatched) hitNodes.splice(i, 1) // 不符合，从待选节点列表中删除\n            }\n        }\n\n        if (hitNodes.length) {\n            // 去重、排序\n            hitNodes = unique(hitNodes)\n            hitNodes = sortNodes(hitNodes)\n        }\n\n        return hitNodes\n    }\n}\n\nmodule.exports = QuerySelector\n","/**\n * 支持的样式属性列表，默认只包含常用的样式属性\n */\n\nmodule.exports = [\n    'position', 'top', 'bottom', 'right', 'left', 'float', 'clear',\n    'display', 'width', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'flexDirection', 'flexWrap', 'justifyContent', 'alignItems', 'order',\n    'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n    'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop',\n\n    'background', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize',\n    'border', 'borderRadius', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth',\n    'borderTop', 'borderBottom', 'borderRight', 'borderLeft',\n    'outline', 'borderWidth', 'borderStyle', 'borderColor',\n\n    'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction',\n    'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction',\n    'transform', 'transformOrigin', 'perspective', 'perspectiveOrigin', 'backfaceVisibility',\n\n    'font', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight',\n    'color', 'textAlign', 'textDecoration', 'textIndent', 'textRendering', 'textShadow', 'textOverflow', 'textTransform',\n    'wordBreak', 'wordSpacing', 'wordWrap', 'lineHeight', 'letterSpacing', 'whiteSpace', 'userSelect',\n\n    'visibility', 'opacity', 'zIndex', 'zoom', 'overflow', 'overflowX', 'overflowY',\n    'boxShadow', 'boxSizing', 'content', 'cursor', 'direction', 'listStyle', 'objectFit', 'pointerEvents', 'resize', 'verticalAlign', 'willChange', 'clip', 'clipPath', 'fill',\n\n    'touchAction', 'WebkitAppearance'\n]\n","/**\n * 感谢 John Resig： https://johnresig.com/files/htmlparser.js\n */\n\n// 正则声明\nconst doctypeReg = /^<!\\s*doctype((?:\\s+[\\w:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst startTagReg = /^<([-A-Za-z0-9_]+)((?:\\s+[-A-Za-z0-9_:@.]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst endTagReg = /^<\\/([-A-Za-z0-9_]+)[^>]*>/i\nconst attrReg = /([-A-Za-z0-9_:@.]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g\n\n// 空元素 - https://www.w3.org/TR/html/syntax.html#void-elements\nconst voidMap = {};\n['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].forEach(n => voidMap[n] = true)\n\n// 块级元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements#Elements\nconst blockMap = {};\n['address', 'article', 'aside', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'li', 'main', 'nav', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tfoot', 'ul', 'video'].forEach(n => blockMap[n] = true)\n\n// 行内元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements#Elements\nconst inlineMap = {};\n['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'button', 'cite', 'code', 'dfn', 'em', 'i', 'img', 'input', 'kbd', 'label', 'map', 'object', 'q', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'textarea', 'time', 'tt', 'var'].forEach(n => inlineMap[n] = true)\n\n// 可能包含任意内容的元素 - https://www.w3.org/TR/html/syntax.html#raw-text\nconst rawTextMap = {};\n['script', 'style'].forEach(n => rawTextMap[n] = true)\n\nconst longAttributeCache = {}\nlet seed = 0\n\n/**\n * 分词\n */\nfunction tokenize(content, handler) {\n    const stack = []\n    let last = content\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    while (content) {\n        let isText = true\n\n        if (!stack.last() || !rawTextMap[stack.last()]) {\n            if (content.indexOf('<!--') === 0) {\n                // comment\n                const index = content.indexOf('-->')\n\n                if (index >= 0) {\n                    content = content.substring(index + 3)\n                    if (handler.comment) handler.comment(content)\n                    isText = false\n                }\n            } else if (content.indexOf('</') === 0) {\n                // end tag\n                const match = content.match(endTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(endTagReg, parseEndTag)\n                    isText = false\n                }\n            } else if (content.indexOf('<') === 0) {\n                // start tag\n                let match = content.match(startTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(startTagReg, parseStartTag)\n                    isText = false\n                } else {\n                    // 检测 doctype\n                    match = content.match(doctypeReg)\n\n                    if (match) {\n                        content = content.substring(match[0].length)\n                        isText = false\n                    }\n                }\n            }\n\n            if (isText) {\n                const indexStart = content.indexOf('<')\n                const indexEnd = content.indexOf('>')\n\n                // 简单自动纠错，只有 <、只有 >、> 在 < 前面、< 和 > 中间没有内容\n                let text = ''\n                if (indexStart === -1 || indexStart >= 0 && indexEnd === -1 || indexStart > indexEnd || (indexEnd > indexStart && !content.substring(indexStart + 1, indexEnd).trim())) {\n                    text = content.replace(/>/g, '&gt;').replace(/</g, '&lt;')\n                    content = ''\n                } else {\n                    text = content.substring(0, indexStart)\n                    content = content.substring(indexStart)\n                }\n\n                if (handler.text && text) handler.text(text)\n            }\n        } else {\n            const execRes = (new RegExp(`</${stack.last()}[^>]*>`)).exec(content)\n\n            if (execRes) {\n                const text = content.substring(0, execRes.index)\n                content = content.substring(execRes.index + execRes[0].length)\n\n                text.replace(/<!--(.*?)-->/g, '')\n                if (text && handler.text) handler.text(text)\n            }\n\n            parseEndTag('', stack.last())\n        }\n\n        if (content === last) throw new Error(`parse error: ${content}`)\n        last = content\n    }\n\n    // 关闭栈内的标签\n    parseEndTag()\n\n    function parseStartTag(tag, tagName, rest, unary) {\n        tagName = tagName.toLowerCase()\n        unary = !!unary\n\n        // 放宽规则，允许行内元素包含块级元素\n        // if (blockMap[tagName]) {\n        //     while (stack.last() && inlineMap[stack.last()]) {\n        //         // 自动关闭栈内的行内元素\n        //         parseEndTag('', stack.last())\n        //     }\n        // }\n\n        unary = voidMap[tagName] || !!unary\n\n        if (!unary) stack.push(tagName)\n\n        if (handler.start) {\n            const attrs = []\n\n            try {\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value,\n                    })\n                })\n            } catch (err) {\n                // 某些安卓机遇到过长的字符串执行属性正则替换会跪（主要是 base 64），这里就先临时过滤掉这种特殊情况\n                rest = rest.replace(/url\\([^)]+\\)/ig, all => {\n                    const id = `url(:#|${++seed}|#:)`\n                    longAttributeCache[id] = all\n                    return id\n                })\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value: value.replace(/url\\(:#\\|\\d+\\|#:\\)/ig, all => longAttributeCache[all] || 'url()'),\n                    })\n                })\n            }\n\n            handler.start(tagName, attrs, unary)\n        }\n    }\n\n    function parseEndTag(tag, tagName) {\n        let pos\n\n        if (!tagName) {\n            pos = 0\n        } else {\n            // 找到同名的开始标签\n            tagName = tagName.toLowerCase()\n\n            for (pos = stack.length - 1; pos >= 0; pos--) {\n                if (stack[pos] === tagName) break\n            }\n        }\n\n        if (pos >= 0) {\n            // 关闭开始标签和结束标签中的所有标签\n            for (let i = stack.length - 1; i >= pos; i--) {\n                if (handler.end) handler.end(stack[i])\n            }\n\n            stack.length = pos\n        }\n    }\n}\n\n/**\n * 解析\n */\nfunction parse(html) {\n    const r = {\n        children: [],\n    }\n    const stack = [r]\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    tokenize(html, {\n        start(tagName, attrs, unary) {\n            const node = {\n                type: 'element',\n                tagName,\n                attrs,\n                unary,\n                children: [],\n            }\n\n            stack.last().children.push(node)\n\n            if (!unary) {\n                stack.push(node)\n            }\n        },\n        // eslint-disable-next-line no-unused-vars\n        end(tagName) {\n            const node = stack.pop()\n\n            if (node.tagName === 'table') {\n                // 补充插入 tbody\n                let hasTbody = false\n\n                for (const child of node.children) {\n                    if (child.tagName === 'tbody') {\n                        hasTbody = true\n                        break\n                    }\n                }\n\n                if (!hasTbody) {\n                    node.children = [{\n                        type: 'element',\n                        tagName: 'tbody',\n                        attrs: [],\n                        unary: false,\n                        children: node.children,\n                    }]\n                }\n            }\n        },\n        text(content) {\n            content = content.trim()\n            if (!content) return\n\n            stack.last().children.push({\n                type: 'text',\n                content,\n            })\n        },\n        comment(content) {\n            content = content.trim()\n\n            stack.last().children.push({\n                type: 'comment',\n                content,\n            })\n        },\n    })\n\n    return r.children\n}\n\nmodule.exports = {\n    tokenize,\n    parse,\n    voidMap,\n    blockMap,\n    inlineMap,\n    rawTextMap,\n}\n","const Element = require('../element')\nconst Location = require('../../bom/location')\nconst cache = require('../../util/cache')\nconst Pool = require('../../util/pool')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLAnchorElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLAnchorElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        this.$_protocol = 'http:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_protocol = null\n        this.$_hostname = null\n        this.$_port = null\n        this.$_pathname = null\n        this.$_search = null\n        this.$_hash = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const href = node.href\n        if (href) html += ` href=\"${tool.escapeForHtmlGeneration(href)}\"`\n\n        const target = node.target\n        if (target) html += ` target=\"${tool.escapeForHtmlGeneration(target)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.href = node.href || ''\n        this.target = node.target || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            href: this.href,\n            target: this.target,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get href() {\n        return this.$_attrs.get('href')\n    }\n\n    set href(value) {\n        value = '' + value\n\n        if (value.indexOf('//') === -1) {\n            const {origin} = cache.getConfig()\n            value = origin + (value[0] === '/' ? value : `/${value}`)\n        }\n\n        this.$_attrs.set('href', value)\n        const {\n            protocol, hostname, port, pathname, search, hash\n        } = Location.$$parse(value)\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    get protocol() {\n        return this.$_protocol\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    get target() {\n        return this.$_attrs.get('target')\n    }\n\n    set target(value) {\n        value = '' + value\n        this.$_attrs.set('target', value)\n    }\n}\n\nmodule.exports = HTMLAnchorElement\n","const Element = require('../element')\nconst Event = require('../../event/event')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass Image extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Image(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_naturalWidth = 0\n        this.$_naturalHeight = 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_naturalWidth = null\n        this.$_naturalHeight = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\n    }\n\n    /**\n     * 重置长宽\n     */\n    $_resetRect(rect = {}) {\n        this.$_naturalWidth = rect.width || 0\n        this.$_naturalHeight = rect.height || 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get src() {\n        return this.$_attrs.get('src') || ''\n    }\n\n    set src(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_attrs.set('src', value)\n\n        setTimeout(() => {\n            wx.getImageInfo({\n                src: this.src,\n                success: res => {\n                    // 加载成功，调整图片的宽高\n                    this.$_resetRect(res)\n\n                    // 触发 load 事件\n                    this.$$trigger('load', {\n                        event: new Event({\n                            name: 'load',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n                fail: () => {\n                    // 加载失败，调整图片的宽高\n                    this.$_resetRect({width: 0, height: 0})\n\n                    // 触发 error 事件\n                    this.$$trigger('error', {\n                        event: new Event({\n                            name: 'error',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n            })\n        }, 0)\n    }\n\n    get width() {\n        return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('width', value)\n        this.$_initRect()\n    }\n\n    get height() {\n        return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('height', value)\n        this.$_initRect()\n    }\n\n    get naturalWidth() {\n        return this.$_naturalWidth\n    }\n\n    get naturalHeight() {\n        return this.$_naturalHeight\n    }\n}\n\nmodule.exports = Image\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLInputElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLInputElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const type = node.type\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\n\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        const maxlength = node.maxlength\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\n\n        const placeholder = node.placeholder\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.type = node.type || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.maxlength = node.maxlength\n        this.placeholder = node.placeholder || ''\n\n        // 特殊字段\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            type: this.type,\n            value: this.value,\n            disabled: this.disabled,\n            maxlength: this.maxlength,\n            placeholder: this.placeholder,\n\n            // 特殊字段\n            mpplaceholderclass: this.mpplaceholderclass,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        this.$_attrs.set('name', value)\n    }\n\n    get type() {\n        return this.$_attrs.get('type') || 'text'\n    }\n\n    set type(value) {\n        value = '' + value\n        this.$_attrs.set('type', value)\n    }\n\n    get value() {\n        const type = this.$_attrs.get('type')\n        const value = this.$_attrs.get('value')\n\n        if ((type === 'radio' || type === 'checkbox') && value === undefined) return 'on'\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get maxlength() {\n        return this.$_attrs.get('maxlength')\n    }\n\n    set maxlength(value) {\n        this.$_attrs.set('maxlength', value)\n    }\n\n    get placeholder() {\n        return this.$_attrs.get('placeholder') || ''\n    }\n\n    set placeholder(value) {\n        value = '' + value\n        this.$_attrs.set('placeholder', value)\n    }\n\n    get autofocus() {\n        return !!this.$_attrs.get('autofocus')\n    }\n\n    set autofocus(value) {\n        value = !!value\n        this.$_attrs.set('autofocus', value)\n    }\n\n    set checked(value) {\n        this.$_attrs.set('checked', value)\n    }\n\n    get checked() {\n        return this.$_attrs.get('checked') || ''\n    }\n\n    focus() {\n        this.$_attrs.set('focus', true)\n    }\n\n    blur() {\n        this.$_attrs.set('focus', false)\n    }\n}\n\nmodule.exports = HTMLInputElement\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLTextAreaElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLTextAreaElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\r\n     */\r\n    $$dealWithAttrsForGenerateHtml(html, node) {\r\n        const type = node.type\r\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\r\n\r\n        const value = node.value\r\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\r\n\r\n        const disabled = node.disabled\r\n        if (disabled) html += ' disabled'\r\n\r\n        const maxlength = node.maxlength\r\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\r\n\r\n        const placeholder = node.placeholder\r\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder.replace(/\"/g, '\\\\\"'))}\"`\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForOuterHTML(node) {\r\n        this.name = node.name || ''\r\n        this.type = node.type || ''\r\n        this.value = node.value || ''\r\n        this.disabled = !!node.disabled\r\n        this.maxlength = node.maxlength\r\n        this.placeholder = node.placeholder || ''\r\n\r\n        // 特殊字段\r\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\r\n    }\r\n\r\n    /**\r\n     * 调用 cloneNode 接口时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForCloneNode() {\r\n        return {\r\n            type: this.type,\r\n            value: this.value,\r\n            disabled: this.disabled,\r\n            maxlength: this.maxlength,\r\n            placeholder: this.placeholder,\r\n\r\n            // 特殊字段\r\n            mpplaceholderclass: this.mpplaceholderclass,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get type() {\r\n        return this.$_attrs.get('type') || 'textarea'\r\n    }\r\n\r\n    set type(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('type', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get disabled() {\r\n        return !!this.$_attrs.get('disabled')\r\n    }\r\n\r\n    set disabled(value) {\r\n        value = !!value\r\n        this.$_attrs.set('disabled', value)\r\n    }\r\n\r\n    get maxlength() {\r\n        return this.$_attrs.get('maxlength')\r\n    }\r\n\r\n    set maxlength(value) {\r\n        this.$_attrs.set('maxlength', value)\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.$_attrs.get('placeholder') || ''\r\n    }\r\n\r\n    set placeholder(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('placeholder', value)\r\n    }\r\n\r\n    get autofocus() {\r\n        return !!this.$_attrs.get('autofocus')\r\n    }\r\n\r\n    set autofocus(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autofocus', value)\r\n    }\r\n\r\n    get selectionStart() {\r\n        const value = +this.$_attrs.get('selection-start')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionStart(value) {\r\n        this.$_attrs.set('selection-start', value)\r\n    }\r\n\r\n    get selectionEnd() {\r\n        const value = +this.$_attrs.get('selection-end')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionEnd(value) {\r\n        this.$_attrs.set('selection-end', value)\r\n    }\r\n\r\n    focus() {\r\n        this.$_attrs.set('focus', true)\r\n    }\r\n\r\n    blur() {\r\n        this.$_attrs.set('focus', false)\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLTextAreaElement\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLVideoElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLVideoElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        const width = options.width\r\n        const height = options.height\r\n\r\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\r\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\r\n\r\n        super.$$init(options, tree)\r\n\r\n        this.$_initRect()\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新父组件树\r\n     */\r\n    $_triggerParentUpdate() {\r\n        this.$_initRect()\r\n        super.$_triggerParentUpdate()\r\n    }\r\n\r\n    /**\r\n     * 初始化长宽\r\n     */\r\n    $_initRect() {\r\n        const width = parseInt(this.$_attrs.get('width'), 10)\r\n        const height = parseInt(this.$_attrs.get('height'), 10)\r\n\r\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\r\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get src() {\r\n        return this.$_attrs.get('src') || ''\r\n    }\r\n\r\n    set src(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('src', value)\r\n    }\r\n\r\n    get width() {\r\n        return +this.$_attrs.get('width') || 0\r\n    }\r\n\r\n    set width(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('width', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get height() {\r\n        return +this.$_attrs.get('height') || 0\r\n    }\r\n\r\n    set height(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('height', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get autoplay() {\r\n        return !!this.$_attrs.get('autoplay')\r\n    }\r\n\r\n    set autoplay(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autoplay', value)\r\n    }\r\n\r\n    get loop() {\r\n        return !!this.$_attrs.get('loop')\r\n    }\r\n\r\n    set loop(value) {\r\n        value = !!value\r\n        this.$_attrs.set('loop', value)\r\n    }\r\n\r\n    get muted() {\r\n        return !!this.$_attrs.get('muted')\r\n    }\r\n\r\n    set muted(value) {\r\n        value = !!value\r\n        this.$_attrs.set('muted', value)\r\n    }\r\n\r\n    get controls() {\r\n        const value = this.$_attrs.get('controls')\r\n        return value !== undefined ? !!value : true\r\n    }\r\n\r\n    set controls(value) {\r\n        this.$_attrs.set('controls', value)\r\n    }\r\n\r\n    get poster() {\r\n        return this.$_attrs.get('poster')\r\n    }\r\n\r\n    set poster(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('poster', value)\r\n    }\r\n\r\n    get currentTime() {\r\n        return +this.$_attrs.get('currentTime') || 0\r\n    }\r\n\r\n    get buffered() {\r\n        return this.$_attrs.get('buffered')\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLVideoElement\r\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass HTMLCanvasElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLCanvasElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_node = null\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 准备 canvas 节点\n     */\n    $$prepare() {\n        return new Promise((resolve, reject) => {\n            this.$$getNodesRef().then(nodesRef => nodesRef.node(res => {\n                const {width, height} = this\n                this.$_node = res.node\n\n                // 设置 canvas 宽高\n                this.$_node.width = width\n                this.$_node.height = height\n\n                resolve(this)\n            }).exec()).catch(reject)\n        })\n    }\n\n    get $$node() {\n        return this.$_node\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) {\n            this.$_style.width = `${width}px`\n        }\n        if (typeof height === 'number' && height >= 0) {\n            this.$_style.height = `${height}px`\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        if (this.$_node) return this.$_node.width\n        else return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.width = value\n        else this.$_attrs.set('width', value)\n    }\n\n    get height() {\n        if (this.$_node) return this.$_node.height\n        else return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.height = value\n        else this.$_attrs.set('height', value)\n    }\n\n    getContext(type) {\n        if (!this.$_node) {\n            console.warn('canvas is not prepared, please call $$prepare method first')\n            return\n        }\n        return this.$_node.getContext(type)\n    }\n}\n\nmodule.exports = HTMLCanvasElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLSelectElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLSelectElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n        this.$$resetOptions()\n    }\n\n    /**\n     * 重置 options 显示\n     */\n    $$resetOptions() {\n        const value = this.value\n\n        if (value !== undefined) {\n            this.options.forEach(child => child.$$updateSelected(child.value === value))\n        } else {\n            this.options.forEach((child, index) => child.$$updateSelected(index === 0))\n        }\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selectedIndex = node.selectedIndex || 0\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            value: this.value,\n            disabled: this.disabled,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        return this.$_attrs.set('name', value)\n    }\n\n    get value() {\n        let value = this.$_attrs.get('value')\n        if (value === undefined) {\n            // 没有设置 value 的时候，取 options 中被选中那项的 value\n            const option = this.options.find(option => !!option.selected)\n            if (option) {\n                value = option.value\n                this.$$setAttributeWithoutUpdate('value', value)\n            }\n        }\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n\n        this.$_attrs.set('value', value)\n\n        // 同步更新 selectedIndex 属性\n        this.$_attrs.set('selectedIndex', this.options.findIndex(option => option.value === value))\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get selectedIndex() {\n        return +this.$_attrs.get('selectedIndex')\n    }\n\n    set selectedIndex(value) {\n        value = +value\n\n        this.$_attrs.set('selectedIndex', value)\n\n        // 同步更新 value 属性\n        this.$_attrs.set('value', this.options[value] && this.options[value].value || '')\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get options() {\n        // 只考虑儿子节点中的 option\n        return this.$_children.filter(child => child.tagName === 'OPTION' && !child.disabled)\n    }\n}\n\nmodule.exports = HTMLSelectElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLOptionElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLOptionElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.tool.escapeForHtmlGeneration(value)}\"`\n\n        const label = node.label\n        if (label) html += ` label=\"${tool.tool.escapeForHtmlGeneration(label)}\"`\n\n        const selected = node.selected\n        if (selected) html += ' selected'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.label = node.label || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selected = !!node.selected\n    }\n\n    /**\n     * 更新 selected，不触发 select 的更新\n     */\n    $$updateSelected(value) {\n        value = !!value\n        this.$_attrs.set('selected', value)\n    }\n\n    get label() {\n        return this.$_attrs.get('label') || this.textContent\n    }\n\n    set label(value) {\n        value = '' + value\n        this.$_attrs.set('label', value)\n    }\n\n    get value() {\n        const value = this.$_attrs.get('value')\n        return value !== undefined ? value : this.label\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    set selected(value) {\n        this.$$updateSelected(value)\n\n        // 同步更新 select 的 selectedIndex 和 value，只考虑父亲节点中 select\n        const parentNode = this.parentNode\n        if (parentNode && parentNode.tagName === 'SELECT') {\n            parentNode.value = this.value\n        }\n    }\n\n    get selected() {\n        return !!this.$_attrs.get('selected')\n    }\n}\n\nmodule.exports = HTMLOptionElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass NotSupport extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new NotSupport(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        // 处理特殊节点\n        const window = cache.getWindow(this.$_pageId)\n        if (window.onDealWithNotSupportDom) window.onDealWithNotSupportDom(this)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    get behavior() {\n        return 'not-support'\n    }\n}\n\nmodule.exports = NotSupport\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_attrs.get('behavior') || ''\r\n    }\r\n\r\n    set behavior(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('behavior', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get scrollTop() {\r\n        return this.$_attrs.get('scroll-top') || 0\r\n    }\r\n\r\n    set scrollTop(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-top', value)\r\n        }\r\n    }\r\n\r\n    get scrollLeft() {\r\n        return this.$_attrs.get('scroll-left') || 0\r\n    }\r\n\r\n    set scrollLeft(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-left', value)\r\n        }\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        super.setAttribute(name, value)\r\n\r\n        if (name === 'scroll-into-view') {\r\n            // TODO：scroll-into-view 先转成 scroll-top 来处理，等基础库支持\r\n            tool.flushThrottleCache() // 先清空 setData\r\n            Promise.resolve().then(() => {\r\n                const scrollItem = this.ownerDocument.getElementById(value)\r\n                if (!scrollItem) return\r\n\r\n                const propName = this.getAttribute('scroll-x') ? 'scroll-left' : this.getAttribute('scroll-y') ? 'scroll-top' : ''\r\n                if (!propName) return\r\n\r\n                const window = cache.getWindow(this.$_pageId)\r\n                Promise.all([\r\n                    new Promise(resolve => window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).fields({rect: true, scrollOffset: true}).exec(resolve)),\r\n                    scrollItem.$$getBoundingClientRect()\r\n                ]).then(res => {\r\n                    const rectName = propName === 'scroll-left' ? 'left' : 'top'\r\n                    const scrollRect = res[0][0]\r\n                    const itemRect = res[1]\r\n\r\n                    super.setAttribute(propName, itemRect[rectName] - scrollRect[rectName] + scrollRect[tool.toCamel(propName)])\r\n                }).catch(console.error)\r\n            }).catch(console.error)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxComponent\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxCustomComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxCustomComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        this.$_behavior = options.componentName\r\n\r\n        super.$$init(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$destroy 方法\r\n     */\r\n    $$destroy() {\r\n        super.$$destroy()\r\n\r\n        this.$_behavior = null\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_behavior\r\n    }\r\n}\r\n\r\nmodule.exports = WxCustomComponent\r\n","const Location = require('./location')\nconst cache = require('../util/cache')\n\nclass Cookie {\n    constructor(pageName) {\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        this.cookieStore = runtime.cookieStore\n        this.$_pageName = pageName\n\n        if (this.cookieStore !== 'storage' && this.cookieStore !== 'memory') {\n            // 需要全局共享\n            this.$_map = cache.getCookie()\n        } else {\n            this.$_map = {} // 三维数组，domain - path - key\n        }\n    }\n\n    static parse(cookieStr) {\n        if (!cookieStr && typeof cookieStr !== 'string') return null\n\n        cookieStr = cookieStr.trim().split(';')\n\n        // key-value\n        const parseKeyValue = /^([^=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.exec(cookieStr.shift())\n        if (!parseKeyValue) return null\n\n        const key = (parseKeyValue[1] || '').trim()\n        const value = (parseKeyValue[2] || '').trim()\n\n        // 其他字段\n        let path = null\n        let domain = null\n        let expires = null\n        let maxAge = null\n        let secure = false\n        let httpOnly = false\n\n        for (let item of cookieStr) {\n            item = item.trim()\n            if (!item) continue\n\n            let [key, value] = item.split('=')\n            key = (key || '').trim().toLowerCase()\n            value = (value || '').trim()\n\n            if (!key) continue\n\n            switch (key) {\n            case 'path':\n                if (value[0] === '/') path = value\n                break\n            case 'domain':\n                value = value.replace(/^\\./, '').toLowerCase()\n                if (value) domain = value\n                break\n            case 'expires':\n                if (value) {\n                    const timeStamp = Date.parse(value)\n                    if (timeStamp) expires = timeStamp\n                }\n                break\n            case 'max-age':\n                if (/^-?[0-9]+$/.test(value)) maxAge = +value * 1000\n                break\n            case 'secure':\n                secure = true\n                break\n            case 'httponly':\n                httpOnly = true\n                break\n            default:\n                // ignore\n                break\n            }\n        }\n\n        return {\n            key, value, path, domain, expires, maxAge, secure, httpOnly\n        }\n    }\n\n    /**\n     * 判断 domain\n     */\n    $_checkDomain(host, cookieDomain) {\n        if (host === cookieDomain) return true\n\n        const index = host.indexOf(`.${cookieDomain}`)\n\n        return index > 0 && cookieDomain.length + index + 1 === host.length\n    }\n\n    /**\n     * 判断 path\n     */\n    $_checkPath(path, cookiePath) {\n        if (path === cookiePath) return true\n\n        cookiePath = cookiePath === '/' ? '' : cookiePath\n        return path.indexOf(`${cookiePath}/`) === 0\n    }\n\n    /**\n     * 判断过期\n     */\n    $_checkExpires(cookie) {\n        const now = Date.now()\n\n        // maxAge 优先\n        if (cookie.maxAge !== null) return cookie.createTime + cookie.maxAge > now\n\n        // 判断 expires\n        if (cookie.expires !== null) return cookie.expires > now\n\n        return true\n    }\n\n    /**\n     * 设置 cookie\n     */\n    setCookie(cookie, url) {\n        cookie = Cookie.parse(cookie)\n\n        if (!cookie) return\n\n        const {hostname, port, pathname} = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n\n        if (cookie.domain) {\n            // 判断 domain\n            if (!this.$_checkDomain(host, cookie.domain)) return\n        } else {\n            // 使用 host 作为默认的 domain\n            cookie.domain = host\n        }\n\n        // 需要设置 path 字段的情况，取 url 中除去最后一节的 path\n        if (!cookie.path || cookie.path[0] !== '/') {\n            const lastIndex = path.lastIndexOf('/')\n\n            cookie.path = lastIndex === 0 ? path : path.substr(0, lastIndex)\n        }\n\n        // 存入 cookie\n        const map = this.$_map\n        const cookieDomain = cookie.domain\n        const cookiePath = cookie.path\n        const cookieKey = cookie.key\n\n        if (!map[cookieDomain]) map[cookieDomain] = {}\n        if (!map[cookieDomain][cookiePath]) map[cookieDomain][cookiePath] = {}\n\n        const oldCookie = map[cookieDomain][cookiePath][cookieKey]\n        cookie.createTime = oldCookie && oldCookie.createTime || Date.now()\n\n        if (this.$_checkExpires(cookie)) {\n            // 未过期\n            map[cookieDomain][cookiePath][cookieKey] = cookie\n        } else if (oldCookie) {\n            // 存在旧 cookie，且被设置为已过期\n            delete map[cookieDomain][cookiePath][cookieKey]\n        }\n\n        // 持久化 cookie\n        if (this.cookieStore !== 'memory' && this.cookieStore !== 'globalmemory') {\n            const key = this.cookieStore === 'storage' ? `PAGE_COOKIE_${this.$_pageName}` : 'PAGE_COOKIE'\n            wx.setStorage({\n                key,\n                data: this.serialize(),\n            })\n        }\n    }\n\n    /**\n     * 拉取 cookie\n     */\n    getCookie(url, includeHttpOnly) {\n        const {\n            protocol, hostname, port, pathname\n        } = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n        const res = []\n\n        const map = this.$_map\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            // 判断 domain\n            if (this.$_checkDomain(host, domainItem)) {\n                const domainMap = map[domainItem] || {}\n                const pathList = Object.keys(domainMap)\n\n                for (const pathItem of pathList) {\n                    // 判断 path\n                    if (this.$_checkPath(path, pathItem)) {\n                        const pathMap = map[domainItem][pathItem] || {}\n\n                        Object.keys(pathMap).forEach(key => {\n                            const cookie = pathMap[key]\n\n                            if (!cookie) return\n\n                            // 判断协议\n                            if (cookie.secure && protocol !== 'https:' && protocol !== 'wss:') return\n                            if (!includeHttpOnly && cookie.httpOnly && protocol && protocol !== 'http:') return\n\n                            // 判断过期\n                            if (this.$_checkExpires(cookie)) {\n                                res.push(cookie)\n                            } else {\n                                // 过期，删掉\n                                delete map[domainItem][pathItem][key]\n                            }\n                        })\n                    }\n                }\n            }\n        }\n\n        return res\n            .sort((a, b) => {\n                const gap = a.createTime - b.createTime\n\n                if (!gap) {\n                    return a.key < b.key ? -1 : 1\n                } else {\n                    return gap\n                }\n            })\n            .map(cookie => `${cookie.key}=${cookie.value}`)\n            .join('; ')\n    }\n\n    /**\n     * 序列化\n     */\n    serialize() {\n        try {\n            return JSON.stringify(this.$_map)\n        } catch (err) {\n            console.log('cannot serialize the cookie')\n            return ''\n        }\n    }\n\n    /**\n     * 反序列化\n     */\n    deserialize(str) {\n        let map = {}\n        try {\n            map = JSON.parse(str)\n        } catch (err) {\n            console.log('cannot deserialize the cookie')\n            map = {}\n        }\n\n        // 合并 cookie\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            const domainMap = map[domainItem] || {}\n            const pathList = Object.keys(domainMap)\n\n            for (const pathItem of pathList) {\n                const pathMap = map[domainItem][pathItem] || {}\n\n                Object.keys(pathMap).forEach(key => {\n                    const cookie = pathMap[key]\n\n                    if (!cookie) return\n\n                    // 已存在则不覆盖\n                    if (!this.$_map[domainItem]) this.$_map[domainItem] = {}\n                    if (!this.$_map[domainItem][pathItem]) this.$_map[domainItem][pathItem] = {}\n                    if (!this.$_map[domainItem][pathItem][key]) this.$_map[domainItem][pathItem][key] = cookie\n                })\n            }\n        }\n    }\n}\n\nmodule.exports = Cookie\n","class Navigator {\n    constructor() {\n        this.$_language = ''\n        this.$_wxVersion = ''\n        this.$_brand = '' // 手机品牌\n        this.$_model = '' // 手机型号\n        this.$_platform = ''\n        this.$_system = '' // 操作系统版本\n\n        this.$_userAgent = ''\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_language = info.language\n        this.$_wxVersion = info.version\n        this.$_brand = info.brand\n        this.$_model = info.model\n        this.$_platform = info.platform\n        this.$_system = info.system\n\n        // 拼装 userAgent\n        const appVersion = '5.0'\n        const appleWebKitVersion = '602.3.12'\n        let platformContext\n        if (this.$_platform === 'ios') {\n            // 拆分系统版本号\n            let systemVersion = this.$_system.split(' ')\n            if (systemVersion.length >= 2) {\n                systemVersion = systemVersion[1].split('.').join('_')\n            } else {\n                systemVersion = ''\n            }\n\n            platformContext = `${this.$_brand}; CPU ${this.$_brand} OS ${systemVersion} like Mac OS X`\n        } else if (this.$_platform === 'android') {\n            platformContext = `Linux; ${this.$_system}; ${this.$_model}`\n        } else {\n            // 在开发者工具上，默认在 windows x64 上运行\n            platformContext = 'Windows NT 6.1; win64; x64'\n        }\n\n        this.$_userAgent = `${this.appCodeName}/${appVersion} (${platformContext}) AppleWebKit/${appleWebKitVersion} (KHTML, like Gecko) Mobile MicroMessenger/${this.$_wxVersion} Language/${this.language}`\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get userAgent() {\n        return this.$_userAgent\n    }\n\n    get appCodeName() {\n        return 'Mozilla'\n    }\n\n    get appName() {\n        return 'Netscape'\n    }\n\n    get language() {\n        return this.$_language\n    }\n\n    get languages() {\n        return [this.$_language]\n    }\n\n    get platform() {\n        return this.$_platform\n    }\n\n    get product() {\n        return 'Gecko'\n    }\n}\n\nmodule.exports = Navigator\n","const EventTarget = require('../event/event-target')\n\nclass Screen extends EventTarget {\n    constructor() {\n        super()\n\n        this.$_width = 0\n        this.$_height = 0\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_width = info.screenWidth\n        this.$_height = info.screenHeight\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        return this.$_width\n    }\n\n    get height() {\n        return this.$_height\n    }\n}\n\nmodule.exports = Screen\n","/**\n * 暂不维护跳转后页面的历史，不做页面刷新的操作\n */\nconst Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nclass History extends EventTarget {\n    constructor(location) {\n        super()\n\n        this.$_location = location\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: location.href,\n        }]\n        this.$_currentIndex = 0\n\n        this.$_location.addEventListener('$_addToHistory', evt => {\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n            this.$_stack.push({\n                state: null,\n                title: '',\n                url: evt.href\n            })\n        })\n    }\n\n    /**\n     * 检查是否同源\n     */\n    $_checkOrigin(url) {\n        const {protocol, hostname, port} = Location.$$parse(url)\n\n        return (!protocol || this.$_location.protocol === protocol) && (!hostname || this.$_location.hostname === hostname) && ((!hostname && !port) || this.$_location.port === port)\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset() {\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: this.$_location.href,\n        }]\n        this.$_currentIndex = 0\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get state() {\n        const current = this.$_stack[this.$_currentIndex]\n        return current && current.state || null\n    }\n\n    get length() {\n        return this.$_stack.length\n    }\n\n    back() {\n        this.go(-1)\n    }\n\n    forward() {\n        this.go(1)\n    }\n\n    go(delta) {\n        if (typeof delta === 'number') {\n            const next = this.$_currentIndex + delta\n\n            if (next >= 0 && next < this.$_stack.length && this.$_currentIndex !== next) {\n                this.$_currentIndex = next\n                // 替换 href，但不做跳转（理论上此处应该做跳转，但是在小程序环境里不适合）\n                this.$_location.$$startCheckHash()\n                this.$_location.$$setHrefWithoutCheck(this.$_stack[this.$_currentIndex].url)\n                this.$_location.$$endCheckHash(true) // 因为不跳转，所以要强制触发 hashchange 检测\n\n                this.$$trigger('popstate', {\n                    event: {\n                        state: this.state\n                    }\n                })\n            }\n        } else {\n            // 刷新当前页面\n            this.$_location.reload()\n        }\n    }\n\n    pushState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.push({state, title, url: this.$_location.href})\n        }\n    }\n\n    replaceState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.splice(this.$_currentIndex, 1, {state, title, url: this.$_location.href})\n        }\n    }\n}\n\nmodule.exports = History\n","const cache = require('../util/cache')\n\nlet pageUrlRouteMap = null\n\nclass Miniprogram {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_pageUrl = '' // 页面真实 url\n        this.$_subpackagesMap = {} // 分包名映射表\n    }\n\n    get window() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get config() {\n        return cache.getConfig()\n    }\n\n    get subpackagesMap() {\n        return this.$_subpackagesMap\n    }\n\n    /**\n     * 初始化\n     */\n    init(url) {\n        if (typeof url === 'string') this.$_pageUrl = url // 设置真实 url\n        const {\n            origin, entry, router, runtime = {}\n        } = cache.getConfig()\n        const subpackagesMap = runtime.subpackagesMap || {}\n\n        this.$_pageUrl = this.$_pageUrl || (origin + entry)\n        this.$_subpackagesMap = subpackagesMap\n        this.window.location.$$reset(this.$_pageUrl)\n        this.window.history.$$reset()\n\n        if (!pageUrlRouteMap) {\n            // 需要初始化页面 url - 小程序页面路由映射表\n            pageUrlRouteMap = {}\n\n            Object.keys(router).forEach(pageName => {\n                const regexpList = []\n\n                router[pageName].forEach(pathObj => {\n                    // 构造正则表达式\n                    const regexp = new RegExp(pathObj.regexp, pathObj.options)\n                    regexpList.push(regexp)\n                })\n\n                // 将每个页面的路由改造成函数，方便后续做匹配用\n                pageUrlRouteMap[pageName] = pathname => {\n                    for (const regexp of regexpList) {\n                        const parseRes = regexp.exec(pathname)\n                        regexp.lastIndex = 0\n\n                        if (parseRes) {\n                            // 匹配成功\n                            const packageName = subpackagesMap[pageName]\n                            return `/${packageName ? packageName + '/' : ''}pages/${pageName}/index`\n                        }\n                    }\n\n                    return null\n                }\n            })\n        }\n    }\n\n    /**\n     * 需要匹配对应路由的 route\n     */\n    getMatchRoute(pathname) {\n        const keys = Object.keys(pageUrlRouteMap)\n        for (const key of keys) {\n            const matchRes = pageUrlRouteMap[key](pathname)\n\n            if (matchRes) return matchRes // 匹配成功\n        }\n\n        return null\n    }\n\n    /**\n     * 判断是否 tabBar 页面\n     */\n    isTabBarPage(pageRoute) {\n        const {\n            runtime = {}\n        } = cache.getConfig()\n        const tabBarMap = runtime.tabBarMap || {}\n        return !!tabBarMap[pageRoute]\n    }\n}\n\nmodule.exports = Miniprogram\n","const Event = require('../event/event')\nconst cache = require('../util/cache')\n\nclass Storage {\n    constructor(window) {\n        this.$_window = window\n        this.$_keys = []\n    }\n\n    /**\n     * 触发 window 的 storage 事件\n     */\n    $_triggerStorage(key, newValue, oldValue, force) {\n        if (!force && newValue === oldValue) return\n\n        const windowList = cache.getWindowList() || []\n        windowList.forEach(window => {\n            if (window && window !== this.$_window) {\n                window.$$trigger('storage', {\n                    event: new Event({\n                        name: 'storage',\n                        target: window,\n                        $$extra: {\n                            key,\n                            newValue,\n                            oldValue,\n                            storageArea: this,\n                            url: this.$_window.location.href,\n                        }\n                    })\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get length() {\n        return this.$_keys && this.$_keys.length || 0\n    }\n\n    key(num) {\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\n        return this.$_keys[num] || null\n    }\n}\n\nclass SessionStorage extends Storage {\n    constructor(window) {\n        super(window)\n        this.$_map = {}\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n        return this.$_map[key] || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = this.$_map[key] || null\n        this.$_map[key] = data\n\n        // 调整顺序\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n        this.$_keys.push(key)\n\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = this.$_map[key] || null\n        delete this.$_map[key]\n\n        // 删除 key\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        this.$_map = {}\n        this.$_keys.length = 0\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nclass LocalStorage extends Storage {\n    /**\n     * 更新 storage 信息\n     */\n    $_updateInfo() {\n        try {\n            const info = wx.getStorageInfoSync()\n            const windowList = cache.getWindowList() || []\n            windowList.forEach(window => {\n                if (window) {\n                    window.localStorage.$$keys = info.keys\n                }\n            })\n        } catch (err) {\n            console.warn('getStorageInfoSync fail')\n        }\n    }\n\n    set $$keys(keys) {\n        this.$_keys = keys\n    }\n\n    /**\n     * 对外属性和方法\n     */\n\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n\n        return wx.getStorageSync(key) || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.setStorageSync(key, data)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.removeStorageSync(key)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        wx.clearStorageSync()\n        this.$_updateInfo()\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nmodule.exports = {\n    SessionStorage,\n    LocalStorage,\n}\n","/**\n * 受限于小程序环境，不支持 data url 和 options 参数\n */\nconst Event = require('../event/event')\nconst EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nlet wxWorker = null\nlet wxWorkerPath = null\nlet callbackList = []\nlet sharedWorkerInstCount = 0\nconst workerMap = {}\nconst sharedWorkerMap = {}\n\n/**\n * 获取 worker 所在目录\n */\nfunction getWorkersDir() {\n    const config = cache.getConfig()\n    const generate = config.generate\n    return generate && generate.worker\n}\n\n/**\n * 获取 worker 路径\n */\nfunction getWorkerUrl(url) {\n    const fileName = url.split('/').pop()\n    return getWorkersDir() + '/' + fileName\n}\n\n/**\n * 监听 worker 消息回调\n */\nfunction onWorkerMessage(worker, callback) {\n    callbackList.push(callback)\n    if (!worker._hasRegisterCb) {\n        worker.onMessage(res => {\n            callbackList.forEach(func => func(res))\n        })\n        worker._hasRegisterCb = true\n    }\n}\n\nclass Worker extends EventTarget {\n    constructor(url, window, isSharedWorker) {\n        super()\n\n        const filePath = getWorkerUrl(url)\n\n        if (wxWorker) {\n            // 小程序只允许创建一个 worker 实例\n            if (!isSharedWorker || (filePath !== wxWorkerPath)) throw new Error('exceed max concurrent workers limit')\n        }\n\n        this.$_pageId = window.$_pageId\n        this.isSharedWorker = isSharedWorker\n        wxWorkerPath = filePath\n        wxWorker = wxWorker || this.$_tryCatch(() => wx.createWorker(wxWorkerPath))\n\n        if (wxWorker) {\n            this.$_onMessage = res => {\n                if (res.type === 'message' && res.pageId === this.$_pageId) {\n                    this.$$trigger('message', {\n                        event: new Event({\n                            name: 'message',\n                            target: this,\n                            $$extra: {\n                                data: res.data,\n                            },\n                        })\n                    })\n                }\n            }\n            onWorkerMessage(wxWorker, this.$_onMessage)\n\n            const navigator = {}\n            const location = {}\n            if (window && !isSharedWorker) {\n                ['userAgent', 'appCodeName', 'appName', 'language', 'languages', 'platform', 'product'].forEach(key => navigator[key] = window.navigator[key]);\n                ['protocol', 'host', 'hostname', 'port', 'origin', 'pathname', 'search', 'hash', 'href'].forEach(key => location[key] = window.location[key])\n            }\n            this.$_tryCatch(() => wxWorker.postMessage({\n                type: 'connect', pageId: this.$_pageId, navigator, location\n            }))\n        }\n\n        if (!this.isSharedWorker) workerMap[this.$_pageId] = this\n    }\n\n    /**\n     * 处理方法的 try catch 调用\n     */\n    $_tryCatch(func) {\n        try {\n            return func.call(this)\n        } catch (error) {\n            console.error(error)\n            this.$$trigger('error', {\n                event: new Event({\n                    name: 'error',\n                    target: this,\n                    $$extra: {\n                        error,\n                        message: error.message || '',\n                        filename: wxWorkerPath,\n                    }\n                })\n            })\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    postMessage(data) {\n        if (this.$_pageId && wxWorker) this.$_tryCatch(() => wxWorker.postMessage({type: 'message', pageId: this.$_pageId, data}))\n    }\n\n    terminate() {\n        if (this.$_pageId && wxWorker) {\n            this.$_pageId = null\n            if (!this.isSharedWorker) delete workerMap[this.$_pageId]\n            this.$_tryCatch(() => wxWorker.terminate())\n            wxWorker = null\n            wxWorkerPath = null\n            callbackList = []\n        }\n    }\n}\n\nclass SharedWorker extends EventTarget {\n    constructor(url, window) {\n        super()\n\n        const pageId = window.$_pageId\n        this.$_worker = new Worker(url, window, true)\n        this.$_worker.close = () => {\n            sharedWorkerInstCount--\n            callbackList.splice(callbackList.indexOf(this.$_worker.$_onMessage), 1)\n            if (!sharedWorkerInstCount) this.$_worker.terminate()\n            if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].splice(sharedWorkerMap[pageId].indexOf(this), 1)\n        }\n        this.$_worker.start = () => {}\n        sharedWorkerInstCount++\n        sharedWorkerMap[pageId] = sharedWorkerMap[pageId] || []\n        sharedWorkerMap[pageId].push(this)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get port() {\n        return this.$_worker\n    }\n}\n\n/**\n * 页面删除\n */\nfunction destroy(pageId) {\n    if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].forEach(sharedWorker => sharedWorker.port.close())\n    sharedWorkerMap[pageId] = null\n    if (workerMap[pageId]) workerMap[pageId].terminate()\n    workerMap[pageId] = null\n}\n\n\nmodule.exports = {\n    Worker,\n    SharedWorker,\n    destroy,\n}\n","class Performance {\n    constructor(timeOrigin) {\n        this.$_timeOrigin = timeOrigin\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get navigation() {\n        console.warn('performance.navigation is not supported')\n        return null\n    }\n\n    get timing() {\n        console.warn('performance.timing is not supported')\n        return null\n    }\n\n    get timeOrigin() {\n        return this.$_timeOrigin\n    }\n\n    now() {\n        return +new Date() - this.$_timeOrigin\n    }\n}\n\nmodule.exports = Performance\n","const Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nconst SUPPORT_METHOD = ['OPTIONS', 'GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'TRACE', 'CONNECT']\nconst STATUS_TEXT_MAP = {\n    100: 'Continue',\n    101: 'Switching protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Suitable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\nclass XMLHttpRequest extends EventTarget {\n    constructor(window) {\n        super()\n\n        this.$_window = window\n        this.$_method = ''\n        this.$_url = ''\n        this.$_data = null\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.UNSENT\n        this.$_header = {\n            Accept: '*/*'\n        }\n        this.$_responseType = ''\n        this.$_resHeader = null\n        this.$_response = null\n        this.$_timeout = 0\n        this.$_startTime = null\n        this.$_withCredentials = true // 向前兼容，默认为 true\n\n        this.$_requestTask = null\n        this.$_requestSuccess = this.$_requestSuccess.bind(this)\n        this.$_requestFail = this.$_requestFail.bind(this)\n        this.$_requestComplete = this.$_requestComplete.bind(this)\n    }\n\n    /**\n     * readyState 变化\n     */\n    $_callReadyStateChange(readyState) {\n        const hasChange = readyState !== this.$_readyState\n        this.$_readyState = readyState\n\n        if (hasChange) this.$$trigger('readystatechange')\n    }\n\n    /**\n     * 执行请求\n     */\n    $_callRequest() {\n        if (!this.$_window || !this.$_window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        if (this.$_timeout) {\n            this.$_startTime = +new Date()\n\n            setTimeout(() => {\n                if (!this.$_status && this.$_readyState !== XMLHttpRequest.DONE) {\n                    // 超时\n                    if (this.$_requestTask) this.$_requestTask.abort()\n                    this.$_callReadyStateChange(XMLHttpRequest.DONE)\n                    this.$$trigger('timeout')\n                }\n            }, this.$_timeout)\n        }\n\n        // 重置各种状态\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.OPENED\n        this.$_resHeader = null\n        this.$_response = null\n\n        // 补完 url\n        let url = this.$_url\n        url = url.indexOf('//') === -1 ? this.$_window.location.origin + url : url\n\n        // 头信息\n        const header = Object.assign({}, this.$_header)\n        header.cookie = this.$_window.document.$$cookie\n        if (!this.withCredentials) {\n            // 不同源，要求 withCredentials 为 true 才携带 cookie\n            const {origin} = Location.$$parse(url)\n            if (origin !== this.$_window.location.origin) delete header.cookie\n        }\n\n        this.$_requestTask = wx.request({\n            url,\n            data: this.$_data || {},\n            header,\n            method: this.$_method,\n            dataType: this.$_responseType === 'json' ? 'json' : 'text',\n            responseType: this.$_responseType === 'arraybuffer' ? 'arraybuffer' : 'text',\n            success: this.$_requestSuccess,\n            fail: this.$_requestFail,\n            complete: this.$_requestComplete,\n        })\n    }\n\n    /**\n     * 请求成功\n     */\n    $_requestSuccess({data, statusCode, header}) {\n        if (!this.$_window || !this.$_window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        this.$_status = statusCode\n        this.$_resHeader = header\n\n        this.$_callReadyStateChange(XMLHttpRequest.HEADERS_RECEIVED)\n\n        // 处理 set-cookie\n        if (this.$_window) {\n            const setCookie = header['Set-Cookie']\n\n            if (setCookie && typeof setCookie === 'string') {\n                this.$_window.document.$$setCookie(setCookie)\n            }\n        }\n\n        // 处理返回数据\n        if (data) {\n            this.$_callReadyStateChange(XMLHttpRequest.LOADING)\n            this.$$trigger('loadstart')\n            this.$_response = data\n            this.$$trigger('loadend')\n        }\n    }\n\n    /**\n     * 请求失败\n     */\n    $_requestFail({errMsg}) {\n        this.$_status = 0\n        this.$_statusText = errMsg\n\n        this.$$trigger('error')\n    }\n\n    /**\n     * 请求完成\n     */\n    $_requestComplete() {\n        this.$_startTime = null\n        this.$_requestTask = null\n        this.$_callReadyStateChange(XMLHttpRequest.DONE)\n\n        if (this.$_status) {\n            this.$$trigger('load')\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get timeout() {\n        return this.$_timeout\n    }\n\n    set timeout(timeout) {\n        if (typeof timeout !== 'number' || !isFinite(timeout) || timeout <= 0) return\n\n        this.$_timeout = timeout\n    }\n\n    get status() {\n        return this.$_status\n    }\n\n    get statusText() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED) return ''\n\n        return STATUS_TEXT_MAP[this.$_status + ''] || this.$_statusText || ''\n    }\n\n    get readyState() {\n        return this.$_readyState\n    }\n\n    get responseType() {\n        return this.$_responseType\n    }\n\n    set responseType(value) {\n        if (typeof value !== 'string') return\n\n        this.$_responseType = value\n    }\n\n    get responseText() {\n        if (!this.$_responseType || this.$_responseType === 'text') {\n            return this.$_response\n        }\n\n        return null\n    }\n\n    get response() {\n        return this.$_response\n    }\n\n    get withCredentials() {\n        return this.$_withCredentials\n    }\n\n    set withCredentials(value) {\n        this.$_withCredentials = !!value\n    }\n\n    abort() {\n        if (this.$_requestTask) {\n            this.$_requestTask.abort()\n            this.$$trigger('abort')\n        }\n    }\n\n    getAllResponseHeaders() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return ''\n\n        return Object.keys(this.$_resHeader)\n            .map(key => `${key}: ${this.$_resHeader[key]}`)\n            .join('\\r\\n')\n    }\n\n    getResponseHeader(name) {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return null\n\n        // 处理大小写不敏感\n        const key = Object.keys(this.$_resHeader).find(item => item.toLowerCase() === name.toLowerCase())\n        const value = key ? this.$_resHeader[key] : null\n\n        return typeof value === 'string' ? value : null\n    }\n\n    open(method, url) {\n        if (typeof method === 'string') method = method.toUpperCase()\n\n        if (SUPPORT_METHOD.indexOf(method) < 0) return\n        if (!url || typeof url !== 'string') return\n\n        this.$_method = method\n        this.$_url = url\n\n        this.$_callReadyStateChange(XMLHttpRequest.OPENED)\n    }\n\n    setRequestHeader(header, value) {\n        if (typeof header === 'string' && typeof value === 'string') {\n            this.$_header[header] = value\n        }\n    }\n\n    send(data) {\n        if (this.$_readyState !== XMLHttpRequest.OPENED) return\n\n        this.$_data = data\n        this.$_callRequest()\n    }\n}\n\nXMLHttpRequest.UNSENT = 0\nXMLHttpRequest.OPENED = 1\nXMLHttpRequest.HEADERS_RECEIVED = 2\nXMLHttpRequest.LOADING = 3\nXMLHttpRequest.DONE = 4\n\nmodule.exports = XMLHttpRequest\n"],"sourceRoot":""}