{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/util/cache.js","webpack:///./src/util/tool.js","webpack:///./src/util/pool.js","webpack:///./src/node/element.js","webpack:///./src/event/event-target.js","webpack:///./src/event/event.js","webpack:///./src/node/node.js","webpack:///./src/bom/location.js","webpack:///./src/document.js","webpack:///./src/event/custom-event.js","webpack:///./src/node/class-list.js","webpack:///./src/node/style.js","webpack:///./src/node/attribute.js","webpack:///./src/node/text-node.js","webpack:///./src/node/comment.js","webpack:///./src/index.js","webpack:///./src/window.js","webpack:///./src/tree/tree.js","webpack:///./src/tree/query-selector.js","webpack:///./src/node/style-list.js","webpack:///./src/tree/parser.js","webpack:///./src/node/element/a.js","webpack:///./src/node/element/image.js","webpack:///./src/node/element/input.js","webpack:///./src/node/element/textarea.js","webpack:///./src/node/element/video.js","webpack:///./src/node/element/canvas.js","webpack:///./src/node/element/select.js","webpack:///./src/node/element/option.js","webpack:///./src/node/element/not-support.js","webpack:///./src/node/element/wx-component.js","webpack:///./src/node/element/wx-custom-component.js","webpack:///./src/bom/cookie.js","webpack:///./src/bom/navigator.js","webpack:///./src/bom/screen.js","webpack:///./src/bom/history.js","webpack:///./src/bom/miniprogram.js","webpack:///./src/bom/storage.js","webpack:///./src/bom/worker.js","webpack:///./src/bom/performance.js","webpack:///./src/bom/xml-http-request.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pageMap","configCache","cookieCache","init","pageId","options","window","document","nodeIdMap","destroy","getDocument","getWindow","getWindowList","keys","map","setNode","nodeId","domNode","parentNode","body","getNode","setConfig","config","getConfig","getCookie","cache","WX_COMPONENT_MAP","forEach","seed","Date","waitFuncSet","Set","NOT_SUPPORT_TAG_NAME_LIST","checkIsWxComponent","tagName","notNeedPrefix","hasPrefix","indexOf","slice","toDash","str","replace","all","toLowerCase","toCamel","$1","toUpperCase","getId","getPageRoute","split","getPageName","pageRoute","pluginMatchRes","match","splitPageRoute","throttle","func","has","add","Promise","resolve","then","delete","catch","console","error","flushThrottleCache","waitFunc","clear","completeURL","url","defaultOrigin","notTransHttps","origin","decodeContent","content","isTagNameSupport","escapeForHtmlGeneration","size","this","$_size","$_cache","length","push","pop","Node","ClassList","Style","Attribute","parser","tool","pool","Element","tree","optimization","elementMultiplexing","instance","$$init","type","super","$_tagName","$_children","$_nodeType","nodeType","ELEMENT_NODE","$_unary","voidMap","$_notTriggerUpdate","$_dataset","$_classList","$_style","$_attrs","$$scrollTop","$$scrollTimeStamp","$_initAttrs","attrs","onclick","ontouchstart","ontouchmove","ontouchend","ontouchcancel","onload","onerror","$$destroy","_wxComponent","_wxCustomComponent","child","$$recycle","$__dataset","$__classList","$$create","$_onClassOrStyleUpdate","$__style","$__attrs","$_triggerParentUpdate","attrKeys","datasetName","substr","setAttribute","triggerUpdate","$$trigger","$_triggerWindowUpdate","$_pageId","node","isRemove","id","$$nodeId","$_tree","updateIdMap","childNodes","$_updateChildrenExtra","TEXT_NODE","textContent","html","behavior","className","styleText","style","cssText","src","dataset","$$dealWithAttrsForGenerateHtml","$$isUnary","childrenHtml","$_generateHtml","join","children","attrsMap","attr","element","ownerDocument","$$createElement","$_generateDomTree","appendChild","$$createTextNode","createComment","$$pageId","$_type","slot","getAttribute","reject","$$createSelectorQuery","selectViewport","scrollOffset","res","Error","exec","select","$_nodeId","boundingClientRect","wx","createSelectorQuery","in","$$wxComponent","context","set","args","wxComponent","$$wxCustomComponent","scrollSource","animate","clearAnimation","trim","oldId","getById","toString","$$parse","filter","fragment","DOCUMENT_FRAGMENT_NODE","ast","parse","err","item","$$updateParent","hasTbody","tbody","concat","assign","$$dealWithAttrsForOuterHTML","text","list","parseInt","pageScrollTo","scrollTop","duration","deep","newNode","class","$$dealWithAttrsForCloneNode","attrName","cloneNode","nodes","hasUpdate","removeChild","$_triggerMeUpdate","index","splice","ref","insertIndex","old","replaceIndex","getByTagName","getByClassName","selector","query","valueType","undefined","Array","isArray","JSON","oldValue","oldKeys","removeAttribute","handler","removeEventListener","addEventListener","remove","namespace","warn","hasAttribute","otherElement","stack","checkElement","left","top","Event","CustomEvent","compareTouchList","a","b","len","aItem","bItem","identifier","pageX","pageY","clientX","clientY","EventTarget","oninput","onfocus","onblur","onchange","$_miniprogramEvent","$_eventHandlerMap","$__eventHandlerMap","target","eventName","miniprogramEvent","extra","callback","event","$$setTarget","path","timeStamp","touches","changedTouches","bubbles","$$extra","detail","currentTarget","$$canBubble","$$setCurrentTarget","$$setEventPhase","CAPTURING_PHASE","isCapture","AT_TARGET","isTarget","BUBBLING_PHASE","stopPropagation","NONE","isInit","handlerMap","handlerObj","capture","bubble","handlers","$_getHandlers","onEventName","$$immediateStop","_namespace","namespaceHandlers","last","now","flag","$$namespace","bubbleHandlers","captureHandlers","evt","$$process","$_name","$_target","$_timeStamp","$_currentTarget","$_eventPhase","eventPhase","$_detail","$_immediateStop","$_canBubble","$_bubbles","$_touches","$_targetTouches","$_changedTouches","$_cancelable","touch","$$checkTargetTouches","node1","node2","checkRelation","$_parentNode","CDATA_SECTION_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","Location","$_pageRoute","$_protocol","$_hostname","$_port","$_pathname","$_search","$_hash","$_lastHash","$_lastPathname","$_lastSearch","$_lastHref","$_allowCheck","protocol","hostname","port","pathname","search","hash","$$startCheckHash","test","oldValues","$_getOldValues","$$endCheckHash","$_checkUrl","href","jumpUrl","matchRoute","$$miniprogram","getMatchRoute","param","encodeURIComponent","callMethod","isTabBarPage","parseRes","host","hostStart","hostEnd","isEnd","char","charCodeAt","searchIndex","hashIndex","firstIndex","needCheckUrlChange","oldURL","newURL","$_enterHistory","isFinite","$_setHrefWithoutEnterHistory","Tree","TextNode","Comment","A","Image","Input","Textarea","Video","Canvas","Select","Option","NotSupport","WxComponent","WxCustomComponent","Cookie","CONSTRUCTOR_MAP","IMG","INPUT","TEXTAREA","VIDEO","CANVAS","SELECT","OPTION","WX_COMPONENT_TRANSFORM_LIST","WX_CUSTOM_COMPONENT_MAP","transformWxComponent2Dom","wxComponentName","groupEvent","$$isGroup","stopImmediatePropagation","querySelectorAll","checked","runtime","cookieStore","usingComponents","pageName","that","$_imageConstructor","width","height","unary","$_cookie","$_config","$_node","$_head","createElement","root","$$children","cookie","getStorageSync","$$cookieInstance","deserialize","URL","$_visibilityState","documentElement","originTagName","constructorClass","$$notNeedPrefix","componentName","start","startSplit","nextSplit","cookies","lastSplitStr","substring","splitStr","defaultView","location","setCookie","$$createComment","dispatchEvent","Pool","onUpdate","domExtendMultiplexing","$_doUpdate","isUpdate","force","isNotContain","action","styleList","$_disableCheckUpdate","joinText","rules","rule","$_checkUpdate","properties","styleValueReduce","defineProperties","$_element","$_map","$_list","attrValueReduce","$$node","idValue","classValue","styleValue","textMultiplexing","$_content","commentMultiplexing","Window","Document","route","$$adapter","OriginalCustomEvent","Navigator","Screen","History","Miniprogram","SessionStorage","LocalStorage","WorkerImpl","Performance","OriginalXMLHttpRequest","lastRafTime","WINDOW_PROTOTYPE_MAP","navigator","performance","screen","history","localStorage","sessionStorage","XMLHttpRequest","ELEMENT_PROTOTYPE_MAP","attribute","classList","subscribeMap","globalObject","timeOrigin","$_outerHeight","$_outerWidth","$_innerHeight","$_innerWidth","$_location","$_navigator","$_screen","$_history","$_miniprogram","$_localStorage","$_sessionStorage","$_performance","$_nowFetchingWebviewInfoPromise","$_fetchDeviceInfo","$_initInnerEvent","onhashchange","$_elementConstructor","$_customEventConstructor","$_xmlHttpRequestConstructor","generate","worker","$_workerConstructor","Worker","$_sharedWorkerConstructor","SharedWorker","HTMLIFrameElement","state","info","getSystemInfoSync","screenHeight","screenWidth","windowHeight","windowWidth","$$reset","descriptor","main","sub","method","handlersMap","dom","computedStyle","fields","errStack","errLines","message","line","filename","lineno","colno","$$isOfficial","oldOnError","$$getPrototype","$_getAspectInfo","methodInPrototype","$$isHook","beforeFuncs","$$before","afterFuncs","$$after","beforeFunc","apply","afterFunc","$$originalMethod","data","$$imageConstructor","setTimeout","clearTimeout","setInterval","clearInterval","RegExp","Math","Number","Boolean","String","parseFloat","pixelRatio","$$open","navigateBack","delta","transitionDelay","transitionDuration","animationDelay","animationDuration","nextRafTime","max","timeId","QuerySelector","walkDomTree","tagMap","classMap","idMap","querySelector","walk","childNode","findNode","PSEUDO_CHECK","selected","disabled","enabled","ATTR_CHECK","nodeVal","val","KINSHIP_CHECK","kinshipRule","kinshipNode","checkHit","foundCurrent","tag","pseudo","contains","checkPseudo","opr","checkAttr","parseCache","parseCacheKeys","regexp","shift","segment","onProcess","idAll","tagAll","classAll","pseudoAll","pseudoName","pseudoParam","attrAll","attrOpr","attrVal","kinshipAll","kinship","currentRule","nthParsed","lastParse","getParseCache","setParseCache","lastRule","hitNodes","classNodes","classNode","tagNodes","tagNode","checkNode","isMatched","j","prevRule","checkKinship","unique","sort","aList","bList","aParent","bParent","unshift","doctypeReg","startTagReg","endTagReg","attrReg","blockMap","inlineMap","rawTextMap","longAttributeCache","tokenize","isText","execRes","parseEndTag","comment","parseStartTag","indexStart","indexEnd","rest","$2","$3","$4","pos","end","HTMLAnchorElement","$_naturalWidth","$_naturalHeight","$_initRect","rect","getImageInfo","success","$_resetRect","fail","HTMLInputElement","maxlength","placeholder","mpplaceholderclass","HTMLTextAreaElement","HTMLVideoElement","HTMLCanvasElement","$$getNodesRef","nodesRef","getContext","createPath2D","createImage","createImageData","requestAnimationFrame","cancelAnimationFrame","toDataURL","HTMLSelectElement","$$resetOptions","$$updateSelected","selectedIndex","option","find","$$setAttributeWithoutUpdate","findIndex","HTMLOptionElement","label","onDealWithNotSupportDom","isNaN","scrollItem","getElementById","propName","$$getBoundingClientRect","rectName","scrollRect","itemRect","$_behavior","realName","$_pageName","cookieStr","parseKeyValue","domain","expires","maxAge","secure","httpOnly","cookieDomain","cookiePath","createTime","$_checkDomain","lastIndex","lastIndexOf","cookieKey","oldCookie","$_checkExpires","setStorage","serialize","includeHttpOnly","domainList","domainItem","domainMap","pathList","pathItem","$_checkPath","pathMap","gap","stringify","log","$_language","$_wxVersion","$_brand","$_model","$_platform","$_system","$_userAgent","language","version","brand","model","platform","system","platformContext","systemVersion","appCodeName","$_width","$_height","$_stack","title","$_currentIndex","current","go","next","$$setHrefWithoutCheck","reload","$_checkOrigin","setNavigationBarTitle","pageUrlRouteMap","$_pageUrl","$_subpackagesMap","entry","router","subpackagesMap","regexpList","pathObj","packageName","matchRes","tabBarMap","Storage","$_window","$_keys","newValue","storageArea","num","$_triggerStorage","getStorageInfoSync","$$keys","setStorageSync","$_updateInfo","removeStorageSync","clearStorageSync","wxWorker","wxWorkerPath","callbackList","sharedWorkerInstCount","workerMap","sharedWorkerMap","getWorkerUrl","fileName","getWorkersDir","isSharedWorker","filePath","$_tryCatch","createWorker","$_onMessage","_hasRegisterCb","onMessage","postMessage","terminate","$_worker","close","sharedWorker","$_timeOrigin","SUPPORT_METHOD","STATUS_TEXT_MAP","100","101","200","201","202","203","204","205","206","300","301","302","303","304","305","307","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","500","501","502","503","504","505","$_method","$_url","$_data","$_status","$_statusText","$_readyState","UNSENT","$_header","Accept","$_responseType","$_resHeader","$_response","$_timeout","$_startTime","$_withCredentials","$_requestTask","$_requestSuccess","$_requestFail","$_requestComplete","readyState","hasChange","DONE","abort","$_callReadyStateChange","OPENED","header","$$cookie","withCredentials","request","dataType","responseType","complete","statusCode","HEADERS_RECEIVED","$$setCookie","LOADING","errMsg","timeout","$_callRequest"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 15);\n","const pageMap = {}\nlet configCache = {}\nconst cookieCache = {}\n\n/**\n * 初始化\n */\nfunction init(pageId, options) {\n    pageMap[pageId] = {\n        window: options.window,\n        document: options.document,\n        nodeIdMap: options.nodeIdMap,\n    }\n}\n\n/**\n * 销毁\n */\nfunction destroy(pageId) {\n    delete pageMap[pageId]\n}\n\n/**\n * 获取 document\n */\nfunction getDocument(pageId) {\n    return pageMap[pageId] && pageMap[pageId].document\n}\n\n/**\n * 获取 window\n */\nfunction getWindow(pageId) {\n    return pageMap[pageId] && pageMap[pageId].window\n}\n\n/**\n * 获取 window 列表\n */\nfunction getWindowList() {\n    return Object.keys(pageMap).map(pageId => pageMap[pageId].window)\n}\n\n/**\n * 存储 domNode 映射\n */\nfunction setNode(pageId, nodeId, domNode = null) {\n    const document = pageMap[pageId] && pageMap[pageId].document\n\n    // 运行前调用，不做任何操作\n    if (!document) return\n    // 相当于删除映射\n    if (!domNode) return pageMap[pageId].nodeIdMap[nodeId] = domNode\n\n    let parentNode = domNode.parentNode\n\n    while (parentNode && parentNode !== document.body) {\n        parentNode = parentNode.parentNode\n    }\n\n    pageMap[pageId].nodeIdMap[nodeId] = parentNode === document.body ? domNode : null\n}\n\n/**\n * 根据 nodeId 获取 domNode\n */\nfunction getNode(pageId, nodeId) {\n    return pageMap[pageId] && pageMap[pageId].nodeIdMap[nodeId]\n}\n\n/**\n * 存储全局 config\n */\nfunction setConfig(config) {\n    configCache = config\n}\n\n/**\n * 获取全局 config\n */\nfunction getConfig() {\n    return configCache\n}\n\n/**\n * 获取全局 cookie\n */\nfunction getCookie() {\n    return cookieCache\n}\n\nmodule.exports = {\n    init,\n    destroy,\n    getDocument,\n    getWindow,\n    getWindowList,\n    setNode,\n    getNode,\n    setConfig,\n    getConfig,\n    getCookie,\n}\n","const cache = require('./cache')\n\n/**\n * 判断是否是内置组件\n */\nconst WX_COMPONENT_MAP = {}\nconst WX_COMPONENT_LIST = [\n    'cover-image', 'cover-view', 'match-media', 'movable-area', 'movable-view', 'scroll-view', 'swiper', 'swiper-item', 'view',\n    'icon', 'progress', 'rich-text', 'text',\n    'button', 'checkbox', 'checkbox-group', 'editor', 'form', 'input', 'label', 'picker', 'picker-view', 'picker-view-column', 'radio', 'radio-group', 'slider', 'switch', 'textarea',\n    'functional-page-navigator', 'navigator',\n    'audio', 'camera', 'image', 'live-player', 'live-pusher', 'video', 'voip-room',\n    'map',\n    'canvas',\n    'ad', 'ad-custom', 'official-account', 'open-data', 'web-view',\n    // 特殊补充\n    'capture', 'catch', 'animation'\n]\nWX_COMPONENT_LIST.forEach(name => WX_COMPONENT_MAP[name] = name)\nfunction checkIsWxComponent(tagName, notNeedPrefix) {\n    const hasPrefix = tagName.indexOf('wx-') === 0\n    if (notNeedPrefix) {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : WX_COMPONENT_MAP[tagName]\n    } else {\n        return hasPrefix ? WX_COMPONENT_MAP[tagName.slice(3)] : false\n    }\n}\n\n/**\n * 驼峰转连字符\n */\nfunction toDash(str) {\n    return str.replace(/[A-Z]/g, all => `-${all.toLowerCase()}`)\n}\n\n/**\n * 连字符转驼峰\n */\nfunction toCamel(str) {\n    return str.replace(/-([a-zA-Z])/g, (all, $1) => $1.toUpperCase())\n}\n\n/**\n * 获取唯一 id\n */\nlet seed = +new Date()\nfunction getId() {\n    return seed++\n}\n\n/**\n * 从 pageId 中获取小程序页面 route\n */\nfunction getPageRoute(pageId) {\n    return pageId.split('-')[2]\n}\n\n/**\n * 从 pageRoute 中获取小程序页面名称\n */\nfunction getPageName(pageRoute) {\n    const pluginMatchRes = pageRoute.match(/(?:^|\\/)__plugin__\\/(?:.*?)(\\/.*)/)\n    if (pluginMatchRes && pluginMatchRes[1]) {\n        // 插件页面的 route 需要特殊处理\n        pageRoute = pluginMatchRes[1]\n    }\n    const splitPageRoute = pageRoute.split('/')\n    return splitPageRoute[1] === 'pages' ? splitPageRoute[2] : splitPageRoute[1]\n}\n\n/**\n * 节流，一个同步流中只调用一次该函数\n */\nconst waitFuncSet = new Set()\nfunction throttle(func) {\n    return () => {\n        if (waitFuncSet.has(func)) return\n\n        waitFuncSet.add(func)\n\n        Promise.resolve().then(() => {\n            if (waitFuncSet.has(func)) {\n                waitFuncSet.delete(func)\n                func()\n            }\n        }).catch(console.error)\n    }\n}\n\n/**\n * 清空节流缓存\n */\nfunction flushThrottleCache() {\n    waitFuncSet.forEach(waitFunc => waitFunc && waitFunc())\n    waitFuncSet.clear()\n}\n\n/**\n * 补全 url\n */\nfunction completeURL(url, defaultOrigin, notTransHttps) {\n    const config = cache.getConfig()\n\n    // 处理 url 前缀\n    if (url.indexOf('//') === 0) {\n        url = 'https:' + url\n    } else if (url[0] === '/') {\n        url = (config.origin || defaultOrigin) + url\n    }\n\n    if (!notTransHttps && url.indexOf('http:') === 0) {\n        url = url.replace(/^http:/ig, 'https:')\n    }\n\n    return url\n}\n\n/**\n * 解码特殊字符\n */\nfunction decodeContent(content) {\n    return content\n        .replace(/&nbsp;/g, '\\u00A0')\n        .replace(/&ensp;/g, '\\u2002')\n        .replace(/&emsp;/g, '\\u2003')\n        .replace(/&lt;/g, '<')\n        .replace(/&gt;/g, '>')\n        .replace(/&quot;/g, '\"')\n        .replace(/&apos;/g, '\\'')\n        .replace(/&amp;/g, '&')\n}\n\n/**\n * 判断该标签在小程序中是否支持\n */\nconst NOT_SUPPORT_TAG_NAME_LIST = ['IFRAME']\nfunction isTagNameSupport(tagName) {\n    return NOT_SUPPORT_TAG_NAME_LIST.indexOf(tagName) === -1\n}\n\n/**\n * 处理 innerHTML/outerHTML 的属性值过滤\n */\nfunction escapeForHtmlGeneration(value) {\n    return value.replace(/\"/g, '&quot;')\n}\n\nmodule.exports = {\n    checkIsWxComponent,\n    toDash,\n    toCamel,\n    getId,\n    getPageRoute,\n    getPageName,\n    throttle,\n    flushThrottleCache,\n    completeURL,\n    decodeContent,\n    isTagNameSupport,\n    escapeForHtmlGeneration,\n}\n","class Pool {\r\n    constructor(size) {\r\n        this.$_size = size || 3000\r\n        this.$_cache = []\r\n    }\r\n\r\n    /**\r\n     * 添加一个对象\r\n     */\r\n    add(object) {\r\n        if (this.$_cache.length >= this.$_size) return\r\n\r\n        this.$_cache.push(object)\r\n    }\r\n\r\n    /**\r\n     * 取出一个对象\r\n     */\r\n    get() {\r\n        return this.$_cache.pop()\r\n    }\r\n}\r\n\r\nmodule.exports = Pool\r\n","const Node = require('./node')\nconst ClassList = require('./class-list')\nconst Style = require('./style')\nconst Attribute = require('./attribute')\nconst cache = require('../util/cache')\nconst parser = require('../tree/parser')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\n\nconst pool = new Pool()\n\nclass Element extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Element(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'element'\n\n        super.$$init(options, tree)\n\n        this.$_tagName = options.tagName || ''\n        this.$_children = []\n        this.$_nodeType = options.nodeType || Node.ELEMENT_NODE\n        this.$_unary = !!parser.voidMap[this.$_tagName.toLowerCase()]\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0 // 最近一次滚动事件触发的时间戳\n\n        this.$_initAttrs(options.attrs)\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onclick = null\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.onload = null\n        this.onerror = null\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_tagName = ''\n        this.$_children.length = 0\n        this.$_nodeType = Node.ELEMENT_NODE\n        this.$_unary = null\n        this.$_notTriggerUpdate = false\n        this.$_dataset = null\n        this.$_classList = null\n        this.$_style = null\n        this.$_attrs = null\n\n        this._wxComponent = null\n        this._wxCustomComponent = null\n\n        this.$$scrollTop = 0\n        this.$$scrollTimeStamp = 0\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 延迟创建内部属性对象\n     */\n    set $_dataset(value) {\n        this.$__dataset = value\n    }\n\n    get $_dataset() {\n        if (!this.$__dataset) this.$__dataset = Object.create(null)\n        return this.$__dataset\n    }\n\n    set $_classList(value) {\n        if (!value && this.$__classList) this.$__classList.$$recycle()\n        this.$__classList = value\n    }\n\n    get $_classList() {\n        if (!this.$__classList) this.$__classList = ClassList.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__classList\n    }\n\n    set $_style(value) {\n        if (!value && this.$__style) this.$__style.$$recycle()\n        this.$__style = value\n    }\n\n    get $_style() {\n        if (!this.$__style) this.$__style = Style.$$create(this.$_onClassOrStyleUpdate.bind(this))\n        return this.$__style\n    }\n\n    set $_attrs(value) {\n        if (!value && this.$__attrs) this.$__attrs.$$recycle()\n        this.$__attrs = value\n    }\n\n    get $_attrs() {\n        if (!this.$__attrs) this.$__attrs = Attribute.$$create(this, this.$_triggerParentUpdate.bind(this))\n        return this.$__attrs\n    }\n\n    /**\n     * 初始化属性\n     */\n    $_initAttrs(attrs = {}) {\n        // 防止一开始就创建 $_attrs\n        const attrKeys = Object.keys(attrs)\n        if (!attrKeys.length) return\n\n        this.$_notTriggerUpdate = true // 初始化不触发更新\n\n        attrKeys.forEach(name => {\n            if (name.indexOf('data-') === 0) {\n                // dataset\n                const datasetName = tool.toCamel(name.substr(5))\n                this.$_dataset[datasetName] = attrs[name]\n            } else {\n                // 其他属性\n                this.setAttribute(name, attrs[name])\n            }\n        })\n\n        this.$_notTriggerUpdate = false // 重启触发更新\n    }\n\n    /**\n     * 监听 class 或 style 属性值变化\n     */\n    $_onClassOrStyleUpdate() {\n        if (this.$__attrs) this.$_attrs.triggerUpdate()\n        this.$_triggerParentUpdate()\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode && !this.$_notTriggerUpdate) {\n            this.parentNode.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n        if (!this.$_notTriggerUpdate) this.$$trigger('$$domNodeUpdate')\n    }\n\n    /**\n     * 更新子组件树\n     */\n    $_triggerMeUpdate() {\n        if (!this.$_notTriggerUpdate) {\n            this.$$trigger('$$childNodesUpdate')\n            this.$_triggerWindowUpdate()\n        }\n    }\n\n    /**\n     * 触发全局更新事件\n     */\n    $_triggerWindowUpdate() {\n        const window = cache.getWindow(this.$_pageId)\n        window.$$trigger('$$domTreeUpdate')\n    }\n\n    /**\n     * 更新子节点变动引起的映射表修改\n     */\n    $_updateChildrenExtra(node, isRemove) {\n        const id = node.id\n\n        // 更新 nodeId - dom 映射表\n        if (isRemove) {\n            cache.setNode(this.$_pageId, node.$$nodeId, null)\n        } else {\n            cache.setNode(this.$_pageId, node.$$nodeId, node)\n        }\n\n        // 更新 id - dom 映射表\n        if (id) {\n            if (isRemove) {\n                this.$_tree.updateIdMap(id, null)\n            } else {\n                this.$_tree.updateIdMap(id, node)\n            }\n        }\n\n        if (node.childNodes && node.childNodes.length) {\n            for (const child of node.childNodes) {\n                this.$_updateChildrenExtra(child, isRemove)\n            }\n        }\n    }\n\n    /**\n     * 遍历 dom 树，生成 html\n     */\n    $_generateHtml(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            // 文本节点\n            return node.textContent\n        } else if (node.nodeType === Node.ELEMENT_NODE) {\n            // 元素\n            const tagName = node.tagName.toLowerCase()\n            let html = `<${tagName}`\n\n            // 属性\n            if (node.behavior) html += ` behavior=\"${tool.escapeForHtmlGeneration(node.behavior)}\"`\n            if (node.id) html += ` id=\"${tool.escapeForHtmlGeneration(node.id)}\"`\n            if (node.className) html += ` class=\"${tool.escapeForHtmlGeneration(node.className)}\"`\n\n            const styleText = node.style.cssText\n            if (styleText) html += ` style=\"${tool.escapeForHtmlGeneration(styleText)}\"`\n\n            const src = node.src\n            if (src) html += ` src=${tool.escapeForHtmlGeneration(src)}`\n\n            const dataset = node.dataset\n            Object.keys(dataset).forEach(name => {\n                html += ` data-${tool.toDash(name)}=\"${tool.escapeForHtmlGeneration(dataset[name])}\"`\n            })\n\n            html = this.$$dealWithAttrsForGenerateHtml(html, node)\n\n            if (node.$$isUnary) {\n                // 空标签\n                return `${html} />`\n            } else {\n                const childrenHtml = node.childNodes.map(child => this.$_generateHtml(child)).join('')\n                return `${html}>${childrenHtml}</${tagName}>`\n            }\n        }\n    }\n\n    /**\n     * 遍历 ast，生成 dom 树\n     */\n    $_generateDomTree(node) {\n        const {\n            type,\n            tagName = '',\n            attrs = [],\n            children = [],\n            content = '',\n        } = node\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n\n        if (type === 'element') {\n            // 元素\n            const attrsMap = {}\n\n            // 属性列表转化成 map\n            for (const attr of attrs) {\n                const name = attr.name\n                let value = attr.value\n\n                if (name === 'style') value = value && value.replace('\"', '\\'') || ''\n\n                attrsMap[name] = value\n            }\n\n            const element = this.ownerDocument.$$createElement({\n                tagName, attrs: attrsMap, nodeId\n            })\n\n            for (let child of children) {\n                child = this.$_generateDomTree(child)\n\n                if (child) element.appendChild(child)\n            }\n\n            return element\n        } else if (type === 'text') {\n            // 文本\n            return this.ownerDocument.$$createTextNode({\n                content: tool.decodeContent(content), nodeId\n            })\n        } else if (type === 'comment') {\n            // 注释\n            return this.ownerDocument.createComment()\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$$nodeId,\n            pageId: this.$$pageId,\n            type: this.$_type,\n            tagName: this.$_tagName,\n            id: this.id,\n            className: this.className,\n            style: this.$__style ? this.style.cssText : '',\n            slot: this.getAttribute('slot'),\n        }\n    }\n\n    /**\n     * 是否空标签\n     */\n    get $$isUnary() {\n        return this.$_unary\n    }\n\n    /**\n     * 所属小程序自定义组件实例\n     */\n    get $$wxComponent() {\n        return this._wxComponent\n    }\n\n    /**\n     * 如果该节点是第三方自定义组件，返回对应的实例\n     */\n    get $$wxCustomComponent() {\n        return this._wxCustomComponent\n    }\n\n    /**\n     * 获取子节点列表\n     */\n    get $$children() {\n        return this.$_children\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForGenerateHtml(html) {\n        // 具体实现逻辑由子类实现\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML() {\n        // ignore，具体实现逻辑由子类实现\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        // 具体实现逻辑由子类实现\n        return {}\n    }\n\n    /**\n     * 小程序端的 getBoundingClientRect 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.scrollOffset.html\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.boundingClientRect.html\n     */\n    $$getBoundingClientRect() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'BODY') {\n                window.$$createSelectorQuery().selectViewport().scrollOffset(res => (res ? resolve(res) : reject(new Error('body not found in webview')))).exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).boundingClientRect(res => (res ? resolve(res) : reject(new Error('element not found in webview')))).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应小程序组件的 context 对象\n     */\n    $$getContext() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject()))\n                    .exec()\n            } else {\n                window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).context(res => (res && res.context ? resolve(res.context) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 获取对应节点的 NodesRef 对象\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.html\n     */\n    $$getNodesRef() {\n        tool.flushThrottleCache() // 先清空 setData\n        const window = cache.getWindow(this.$_pageId)\n        return new Promise((resolve, reject) => {\n            if (!window) reject()\n\n            if (this.tagName === 'CANVAS') {\n                // TODO，为了兼容基础库的一个 bug，暂且如此实现\n                resolve(wx.createSelectorQuery().in(this.$$wxComponent).select(`.node-${this.$_nodeId}`))\n            } else {\n                resolve(window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`))\n            }\n        })\n    }\n\n    /**\n     * 设置属性，但不触发更新\n     */\n    $$setAttributeWithoutUpdate(name, value) {\n        if (typeof name !== 'string') return\n\n        this.$_notTriggerUpdate = true\n        this.$_attrs.set(name, value)\n        this.$_notTriggerUpdate = false\n    }\n\n    /**\n     * 关键帧/滚动驱动动画接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$animate(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.animate(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 关键帧/滚动驱动动画清除接口\n     * https://developers.weixin.qq.com/miniprogram/dev/framework/view/animation.html\n     */\n    $$clearAnimation(...args) {\n        const wxComponent = this.$$wxCustomComponent || this.$$wxComponent\n        if (!wxComponent) {\n            console.error('this element has not been attached yet')\n        } else {\n            if (typeof args[2] === 'object' && args[2].scrollSource) {\n                args[2].scrollSource = `.miniprogram-root >>> ${args[2].scrollSource}`\n            }\n            wxComponent.clearAnimation(`.node-${this.$_nodeId}`, ...args)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get id() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('id')\n    }\n\n    set id(id) {\n        if (typeof id !== 'string') return\n\n        id = id.trim()\n        const oldId = this.$_attrs.get('id')\n        this.$_attrs.set('id', id)\n\n        if (id === oldId) return\n\n        // 更新 tree\n        if (this.$_tree.getById(oldId) === this) this.$_tree.updateIdMap(oldId, null)\n        if (id) this.$_tree.updateIdMap(id, this)\n        this.$_triggerParentUpdate()\n    }\n\n    get tagName() {\n        return this.$_tagName.toUpperCase()\n    }\n\n    get className() {\n        if (!this.$__classList) return ''\n\n        return this.$_classList.toString()\n    }\n\n    set className(className) {\n        if (typeof className !== 'string') return\n\n        this.$_classList.$$parse(className)\n    }\n\n    get classList() {\n        return this.$_classList\n    }\n\n    get nodeName() {\n        return this.tagName\n    }\n\n    get nodeType() {\n        return this.$_nodeType\n    }\n\n    get childNodes() {\n        return this.$_children\n    }\n\n    get children() {\n        return this.$_children.filter(child => child.nodeType === Node.ELEMENT_NODE)\n    }\n\n    get firstChild() {\n        return this.$_children[0]\n    }\n\n    get lastChild() {\n        return this.$_children[this.$_children.length - 1]\n    }\n\n    get innerHTML() {\n        return this.$_children.map(child => this.$_generateHtml(child)).join('')\n    }\n\n    set innerHTML(html) {\n        if (typeof html !== 'string') return\n\n        const fragment = this.ownerDocument.$$createElement({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        })\n\n        // 解析成 ast\n        let ast = null\n        try {\n            ast = parser.parse(html)\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (!ast) return\n\n        // 生成 dom 树\n        ast.forEach(item => {\n            const node = this.$_generateDomTree(item)\n            if (node) fragment.appendChild(node)\n        })\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 追加新子节点\n        if (this.$_tagName === 'table') {\n            // table 节点需要判断是否存在 tbody\n            let hasTbody = false\n\n            for (const child of fragment.childNodes) {\n                if (child.tagName === 'TBODY') {\n                    hasTbody = true\n                    break\n                }\n            }\n\n            if (!hasTbody) {\n                const tbody = this.ownerDocument.$$createElement({\n                    tagName: 'tbody',\n                    attrs: {},\n                    nodeType: Node.ELEMENT_NODE,\n                    nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                })\n\n                tbody.appendChild(fragment)\n                this.appendChild(tbody)\n            }\n        } else {\n            this.appendChild(fragment)\n        }\n    }\n\n    get outerHTML() {\n        return this.$_generateHtml(this)\n    }\n\n    set outerHTML(html) {\n        if (typeof html !== 'string') return\n\n        // 解析成 ast，只取第一个作为当前节点\n        let ast = null\n        try {\n            ast = parser.parse(html)[0]\n        } catch (err) {\n            console.error(err)\n        }\n\n        if (ast) {\n            // 生成 dom 树\n            const node = this.$_generateDomTree(ast)\n\n            // 删除所有子节点\n            this.$_children.forEach(node => {\n                node.$$updateParent(null)\n\n                // 更新映射表\n                this.$_updateChildrenExtra(node, true)\n            })\n            this.$_children.length = 0\n\n            this.$_notTriggerUpdate = true // 先不触发更新\n\n            // 追加新子节点\n            const children = [].concat(node.childNodes)\n            for (const child of children) {\n                this.appendChild(child)\n            }\n\n            this.$_tagName = node.tagName.toLowerCase()\n            this.id = node.id || ''\n            this.className = node.className || ''\n            this.style.cssText = node.style.cssText || ''\n            this.src = node.src || ''\n            this.$_dataset = Object.assign({}, node.dataset)\n\n            this.$$dealWithAttrsForOuterHTML(node)\n\n            this.$_notTriggerUpdate = false // 重启触发更新\n            this.$_triggerParentUpdate()\n        }\n    }\n\n    get innerText() {\n        // WARN：此处处理成和 textContent 一致，不去判断是否会渲染出来的情况\n        return this.textContent\n    }\n\n    set innerText(text) {\n        this.textContent = text\n    }\n\n    get textContent() {\n        return this.$_children.map(child => child.textContent).join('')\n    }\n\n    set textContent(text) {\n        text = '' + text\n\n        // 删除所有子节点\n        this.$_children.forEach(node => {\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n        })\n        this.$_children.length = 0\n\n        // 空串不新增 textNode 节点\n        if (!text) return\n\n        const nodeId = `b-${tool.getId()}` // 运行时生成，使用 b- 前缀\n        const child = this.ownerDocument.$$createTextNode({content: text, nodeId})\n\n        this.appendChild(child)\n    }\n\n    get style() {\n        return this.$_style\n    }\n\n    set style(value) {\n        this.$_style.cssText = value\n    }\n\n    get dataset() {\n        return this.$_dataset\n    }\n\n    get attributes() {\n        return this.$_attrs.list\n    }\n\n    get src() {\n        if (!this.$__attrs) return ''\n\n        return this.$_attrs.get('src')\n    }\n\n    set src(value) {\n        value = '' + value\n        this.$_attrs.set('src', value)\n    }\n\n    get scrollTop() {\n        // 只有配置了 windowScroll 才能拿到准确值；如果没有配置，则需要通过 document.body.$$getBoundingClientRect 来获取准确值\n        return this.$$scrollTop\n    }\n\n    set scrollTop(value) {\n        if (this.$_tagName !== 'html') return // 只有 document.documentElement 支持设置 scrollTop\n        if (+new Date() - this.$$scrollTimeStamp < 500) return // 为了兼容 mp-webpack-plugin@0.9.14 及以前的版本，在滚动事件触发后的 500ms 内，设置 scrollTop 不予处理\n\n        value = parseInt(value, 10)\n        wx.pageScrollTo({scrollTop: value, duration: 0})\n        this.$$scrollTop = value\n    }\n\n    cloneNode(deep) {\n        const dataset = {}\n        Object.keys(this.$_dataset).forEach(name => {\n            dataset[`data-${tool.toDash(name)}`] = this.$_dataset[name]\n        })\n\n        const newNode = this.ownerDocument.$$createElement({\n            tagName: this.$_tagName,\n            attrs: {\n                id: this.id,\n                class: this.className,\n                style: this.style.cssText,\n                src: this.src,\n\n                ...dataset,\n                ...this.$$dealWithAttrsForCloneNode(),\n            },\n            nodeType: this.$_nodeType,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n\n        // 属性\n        if (this.$__attrs) {\n            const attrsMap = this.$_attrs.map\n            Object.keys(attrsMap).forEach(attrName => newNode.setAttribute(attrName, attrsMap[attrName]))\n        }\n\n        if (deep) {\n            // 深克隆\n            for (const child of this.$_children) {\n                newNode.appendChild(child.cloneNode(deep))\n            }\n        }\n\n        return newNode\n    }\n\n    appendChild(node) {\n        if (!(node instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = [].concat(node.childNodes)\n        } else {\n            nodes = [node]\n        }\n\n        if (!nodes.length) hasUpdate = true // 列表为空也要触发 update，因为可能走 innerHTML 强行置空\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            this.$_children.push(node)\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return this\n    }\n\n    removeChild(node) {\n        if (!(node instanceof Node)) return\n\n        const index = this.$_children.indexOf(node)\n\n        if (index >= 0) {\n            // 已经插入，需要删除\n            this.$_children.splice(index, 1)\n\n            node.$$updateParent(null)\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node, true)\n\n            // 触发 webview 端更新\n            this.$_triggerMeUpdate()\n        }\n\n        return node\n    }\n\n    insertBefore(node, ref) {\n        if (!(node instanceof Node)) return\n        if (ref && !(ref instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = 0; i < node.childNodes.length; i++) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            const insertIndex = ref ? this.$_children.indexOf(ref) : -1\n\n            if (insertIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 插入到 ref 之前\n                this.$_children.splice(insertIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n\n            hasUpdate = true\n        }\n\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return node\n    }\n\n    replaceChild(node, old) {\n        if (!(node instanceof Node) || !(old instanceof Node)) return\n\n        let nodes\n        let hasUpdate = false\n\n        if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            // documentFragment\n            nodes = []\n            for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                // 因为是逐个插入，所以需要逆序\n                nodes.push(node.childNodes[i])\n            }\n        } else {\n            nodes = [node]\n        }\n\n        const replaceIndex = this.$_children.indexOf(old)\n        if (replaceIndex !== -1) this.$_children.splice(replaceIndex, 1)\n\n        for (const node of nodes) {\n            if (node === this) continue\n            if (node.parentNode) node.parentNode.removeChild(node)\n\n            if (replaceIndex === -1) {\n                // 插入到末尾\n                this.$_children.push(node)\n            } else {\n                // 替换到 old\n                this.$_children.splice(replaceIndex, 0, node)\n            }\n\n            node.$$updateParent(this) // 设置 parentNode\n\n            // 更新映射表\n            this.$_updateChildrenExtra(node)\n            this.$_updateChildrenExtra(old, true)\n\n            hasUpdate = true\n        }\n\n        // 触发 webview 端更新\n        if (hasUpdate) this.$_triggerMeUpdate()\n\n        return old\n    }\n\n    hasChildNodes() {\n        return this.$_children.length > 0\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this)\n    }\n\n    setAttribute(name, value) {\n        if (typeof name !== 'string') return\n\n        // 保留对象/数组/布尔值/undefined 原始内容，方便处理小程序内置组件的使用\n        const valueType = typeof value\n        if (valueType !== 'object' && valueType !== 'boolean' && valueType !== 'function' && value !== undefined && !Array.isArray(value)) value = '' + value\n\n        if (name === 'kbone-attribute-map' || name === 'kbone-event-map') {\n            value = value || {}\n            if (typeof value === 'string') value = JSON.parse(value) // 确保存入的是对象\n            const oldValue = this.getAttribute(name)\n            const keys = Object.keys(value)\n            const oldKeys = oldValue ? Object.keys(oldValue) : null\n\n            if (name === 'kbone-attribute-map') {\n                // 特殊属性，用于批量设置属性\n                keys.forEach(key => this.setAttribute(key, value[key]))\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        if (!Object.prototype.hasOwnProperty.call(value, key)) this.removeAttribute(key)\n                    })\n                }\n            } else {\n                // 特殊属性，用于批量监听事件\n                const window = cache.getWindow(this.$_pageId)\n\n                if (oldKeys) {\n                    oldKeys.forEach(key => {\n                        // 先删除所有旧的 handler\n                        let handler = oldValue[key]\n                        handler = typeof handler !== 'function' ? window[handler] : handler\n                        this.removeEventListener(key, handler)\n                    })\n                }\n                keys.forEach(key => {\n                    let handler = value[key]\n                    handler = typeof handler !== 'function' ? window[handler] : handler\n                    this.addEventListener(key, handler)\n                })\n            }\n        }\n\n        if (name === 'id') {\n            // id 要提前到此处特殊处理\n            this.id = value\n        } else {\n            this.$_attrs.set(name, value)\n        }\n    }\n\n    getAttribute(name) {\n        if (typeof name !== 'string') return ''\n        if (name.indexOf('data-') === 0) {\n            // dataset 属性\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!this.$__dataset) return undefined\n\n            return this.dataset[datasetName]\n        } else {\n            if (!this.$__attrs) return name === 'id' || name === 'style' || name === 'class' ? '' : undefined\n\n            return this.$_attrs.get(name)\n        }\n    }\n\n    hasAttribute(name) {\n        if (typeof name !== 'string') return false\n        if (!this.$__attrs) return false\n\n        return this.$_attrs.has(name)\n    }\n\n    removeAttribute(name) {\n        if (typeof name !== 'string') return false\n\n        return this.$_attrs.remove(name)\n    }\n\n    setAttributeNS(namespace, name, value) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        this.setAttribute(name, value)\n    }\n\n    getAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.getAttribute(name)\n    }\n\n    hasAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.hasAttribute(name)\n    }\n\n    removeAttributeNS(namespace, name) {\n        // 不支持 namespace，使用 setAttribute 来兼容\n        console.warn(`namespace ${namespace} is not supported`)\n        return this.removeAttribute(name)\n    }\n\n    contains(otherElement) {\n        const stack = []\n        let checkElement = this\n\n        while (checkElement) {\n            if (checkElement === otherElement) return true\n\n            const childNodes = checkElement.childNodes\n            if (childNodes && childNodes.length) childNodes.forEach(child => stack.push(child))\n\n            checkElement = stack.pop()\n        }\n\n        return false\n    }\n\n    getBoundingClientRect() {\n        // 不作任何实现，只作兼容使用\n        console.warn('getBoundingClientRect is not supported, please use dom.$$getBoundingClientRect instead of it')\n        return {\n            left: 0,\n            top: 0,\n        }\n    }\n}\n\nmodule.exports = Element\n","const Event = require('./event')\nconst CustomEvent = require('./custom-event')\n\n/**\n * 比较 touch 列表\n */\nfunction compareTouchList(a, b) {\n    if (a.length !== b.length) return false\n\n    for (let i, len = a.length; i < len; i++) {\n        const aItem = a[i]\n        const bItem = b[i]\n\n        if (aItem.identifier !== bItem.identifier) return false\n        if (aItem.pageX !== bItem.pageX || aItem.pageY !== bItem.pageY || aItem.clientX !== bItem.clientX || aItem.clientY !== bItem.clientY) return false\n    }\n\n    return true\n}\n\nclass EventTarget {\n    constructor(...args) {\n        this.$$init(...args)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init() {\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.ontouchstart = null\n        this.ontouchmove = null\n        this.ontouchend = null\n        this.ontouchcancel = null\n        this.oninput = null\n        this.onfocus = null\n        this.onblur = null\n        this.onchange = null\n\n        this.$_miniprogramEvent = null // 记录已触发的小程序事件\n        this.$_eventHandlerMap = null\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        Object.keys(this).forEach(key => {\n            // 处理 on 开头的属性\n            if (key.indexOf('on') === 0) this[key] = null\n            // 处理外部挂进来的私有的属性\n            if (key[0] === '_') this[key] = null\n            if (key[0] === '$' && (key[1] !== '_' && key[1] !== '$')) this[key] = null\n        })\n\n        this.$_miniprogramEvent = null\n        this.$_eventHandlerMap = null\n    }\n\n    set $_eventHandlerMap(value) {\n        this.$__eventHandlerMap = value\n    }\n\n    get $_eventHandlerMap() {\n        if (!this.$__eventHandlerMap) this.$__eventHandlerMap = Object.create(null)\n        return this.$__eventHandlerMap\n    }\n\n    /**\n     * 触发事件捕获、冒泡流程\n     */\n    static $$process(target, eventName, miniprogramEvent, extra, callback) {\n        let event\n\n        if (eventName instanceof CustomEvent || eventName instanceof Event) {\n            // 传入的是事件对象\n            event = eventName\n            eventName = event.type\n            event.$$setTarget(target)\n        }\n\n        eventName = eventName.toLowerCase()\n\n        const path = [target]\n        let parentNode = target.parentNode\n\n        while (parentNode && parentNode.tagName !== 'HTML') {\n            path.push(parentNode)\n            parentNode = parentNode.parentNode\n        }\n\n        if (path[path.length - 1].tagName === 'BODY') {\n            // 如果最后一个节点是 document.body，则追加 document.documentElement\n            path.push(parentNode)\n        }\n\n        if (!event) {\n            // 此处特殊处理，不直接返回小程序的 event 对象\n            event = new Event({\n                name: eventName,\n                target,\n                timeStamp: miniprogramEvent.timeStamp,\n                touches: miniprogramEvent.touches,\n                changedTouches: miniprogramEvent.changedTouches,\n                bubbles: true, // 默认都可以冒泡\n                $$extra: extra,\n            })\n            // 保留原始事件的 detail\n            if (miniprogramEvent.detail) event.detail = Object.assign({}, miniprogramEvent.detail, event.detail || {})\n        }\n\n        // 捕获\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentTarget = path[i]\n\n            if (!event.$$canBubble) break // 判定冒泡是否结束\n            if (currentTarget === target) continue\n\n            // wx-capture 节点事件单独触发\n            if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n            event.$$setCurrentTarget(currentTarget)\n            event.$$setEventPhase(Event.CAPTURING_PHASE)\n\n            currentTarget.$$trigger(eventName, {\n                event,\n                isCapture: true,\n            })\n            if (callback) callback(currentTarget, event, true)\n        }\n\n        // 目标\n        if (event.$$canBubble) {\n            event.$$setCurrentTarget(target)\n            event.$$setEventPhase(Event.AT_TARGET)\n\n            // 捕获和冒泡阶段监听的事件都要触发\n            target.$$trigger(eventName, {\n                event,\n                isCapture: true,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, true)\n\n            target.$$trigger(eventName, {\n                event,\n                isCapture: false,\n                isTarget: true,\n            })\n            if (callback) callback(target, event, false)\n        }\n\n        if (event.bubbles) {\n            // 冒泡\n            for (const currentTarget of path) {\n                if (!event.$$canBubble) break // 判定冒泡是否结束\n                if (currentTarget === target) continue\n\n                // wx-capture 节点事件单独触发\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'capture') continue\n\n                event.$$setCurrentTarget(currentTarget)\n                event.$$setEventPhase(Event.BUBBLING_PHASE)\n\n                currentTarget.$$trigger(eventName, {\n                    event,\n                    isCapture: false,\n                })\n                if (callback) callback(currentTarget, event, false)\n\n                // wx-catch 节点事件要结束冒泡\n                if (currentTarget.tagName === 'WX-COMPONENT' && currentTarget.behavior === 'catch') event.stopPropagation()\n            }\n        }\n\n        // 重置事件\n        event.$$setCurrentTarget(null)\n        event.$$setEventPhase(Event.NONE)\n\n        return event\n    }\n\n    /**\n     * 获取 handlers\n     */\n    $_getHandlers(eventName, isCapture, isInit) {\n        const handlerMap = this.$_eventHandlerMap\n\n        if (isInit) {\n            const handlerObj = handlerMap[eventName] = handlerMap[eventName] || {}\n\n            handlerObj.capture = handlerObj.capture || []\n            handlerObj.bubble = handlerObj.bubble || []\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        } else {\n            const handlerObj = handlerMap[eventName]\n\n            if (!handlerObj) return null\n\n            return isCapture ? handlerObj.capture : handlerObj.bubble\n        }\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, {\n        event, args = [], isCapture, isTarget\n    } = {}) {\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n        const onEventName = `on${eventName}`\n\n        if ((!isCapture || !isTarget) && typeof this[onEventName] === 'function') {\n            // 触发 onXXX 绑定的事件\n            if (event && event.$$immediateStop) return\n            try {\n                this[onEventName].call(this || null, event, ...args)\n            } catch (err) {\n                console.error(err)\n            }\n        }\n\n        if (!handlers) return\n\n        // 触发 addEventListener 绑定的事件\n        if (handlers.length) {\n            handlers.forEach(handler => {\n                if (event && event.$$immediateStop) return\n                try {\n                    handler.call(this || null, event, ...args)\n                } catch (err) {\n                    console.error(err)\n                }\n            })\n        }\n\n        // 触发 addEventListener 绑定到命名空间下的事件\n        if (handlers._namespace) {\n            Object.keys(handlers._namespace).forEach(namespace => {\n                const namespaceHandlers = handlers._namespace[namespace]\n                if (namespaceHandlers) {\n                    namespaceHandlers.forEach(handler => {\n                        if (event && event.$$immediateStop) return\n                        try {\n                            handler.call(this || null, event, ...args)\n                        } catch (err) {\n                            console.error(err)\n                        }\n                    })\n                }\n            })\n        }\n    }\n\n    /**\n     * 检查该事件是否可以触发\n     */\n    $$checkEvent(miniprogramEvent) {\n        const last = this.$_miniprogramEvent\n        const now = miniprogramEvent\n\n        let flag = false\n\n        if (!last || last.timeStamp !== now.timeStamp) {\n            // 时间戳不同\n            flag = true\n        } else {\n            if (last.touches && now.touches && !compareTouchList(last.touches, now.touches)) {\n                // 存在不同的 touches\n                flag = true\n            } else if ((!last.touches && now.touches) || (last.touches && !now.touches)) {\n                // 存在一方没有 touches\n                flag = true\n            }\n\n            if (last.changedTouches && now.changedTouches && !compareTouchList(last.changedTouches, now.changedTouches)) {\n                // 存在不同的 changedTouches\n                flag = true\n            } else if ((!last.changedTouches && now.changedTouches) || (last.changedTouches && !now.changedTouches)) {\n                // 存在一方没有 changedTouches\n                flag = true\n            }\n        }\n\n        if (flag) this.$_miniprogramEvent = now\n        return flag\n    }\n\n    /**\n     * 清空某个事件的所有句柄\n     */\n    $$clearEvent(eventName, options) {\n        if (typeof eventName !== 'string') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture)\n\n        if (!handlers) return\n\n        if (handlers.length) handlers.length = 0\n        if (handlers._namespace) handlers._namespace[namespace] = null\n    }\n\n    /**\n     * 是否存在事件句柄，只考虑通过 addEventListener 绑定的句柄\n     */\n    $$hasEventHandler(eventName) {\n        eventName = eventName.toLowerCase()\n        const bubbleHandlers = this.$_getHandlers(eventName, false)\n        const captureHandlers = this.$_getHandlers(eventName, true)\n        return (bubbleHandlers && bubbleHandlers.length) || (captureHandlers && captureHandlers.length)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    addEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, true)\n\n        if (namespace) {\n            // 存在命名空间\n            handlers._namespace = handlers._namespace || {}\n            handlers._namespace[namespace] = handlers._namespace[namespace] || []\n            handlers._namespace[namespace].push(handler)\n        } else {\n            handlers.push(handler)\n        }\n    }\n\n    removeEventListener(eventName, handler, options) {\n        if (typeof eventName !== 'string' || typeof handler !== 'function') return\n\n        let isCapture = false\n        let namespace = null\n\n        if (typeof options === 'boolean') isCapture = options\n        else if (typeof options === 'object') {\n            isCapture = !!options.capture\n            namespace = options.$$namespace\n        }\n\n        eventName = eventName.toLowerCase()\n        const handlers = this.$_getHandlers(eventName, isCapture, false)\n\n        if (!handlers) return\n\n        if (namespace) {\n            // 存在命名空间\n            if (!handlers._namespace || !handlers._namespace[namespace]) return\n\n            const index = handlers._namespace[namespace].indexOf(handler)\n            if (index >= 0) handlers._namespace[namespace].splice(index, 1)\n        } else {\n            const index = handlers.indexOf(handler)\n            if (index >= 0) handlers.splice(index, 1)\n        }\n    }\n\n    dispatchEvent(evt) {\n        if (evt instanceof CustomEvent) {\n            EventTarget.$$process(this, evt)\n        }\n\n        // 因为不支持 preventDefault，所以永远返回 true\n        return true\n    }\n}\n\nmodule.exports = EventTarget\n","/**\n * 检查节点间的关系\n */\nfunction checkRelation(node1, node2) {\n    if (node1 === node2) return true\n\n    while (node1) {\n        if (node1 === node2) return true\n\n        node1 = node1.parentNode\n    }\n\n    return false\n}\n\nclass Event {\n    constructor(options) {\n        this.$_name = options.name.toLowerCase()\n        this.$_target = options.target\n        this.$_timeStamp = options.timeStamp || Date.now()\n        this.$_currentTarget = options.currentTarget || options.target\n        this.$_eventPhase = options.eventPhase || Event.NONE\n        this.$_detail = options.detail || null\n        this.$_immediateStop = false\n        this.$_canBubble = true\n        this.$_bubbles = options.bubbles || false\n        this.$_touches = null\n        this.$_targetTouches = null\n        this.$_changedTouches = null\n        this.$_cancelable = false\n\n        // 补充字段\n        const extra = options.$$extra\n        if (extra) {\n            Object.keys(extra).forEach(key => {\n                this[key] = extra[key]\n            })\n        }\n\n        // 处理 touches\n        if (options.touches && options.touches.length) {\n            this.$_touches = options.touches.map(touch => ({...touch, target: options.target}))\n\n            this.$$checkTargetTouches()\n        } else if (options.touches) {\n            this.$_touches = []\n            this.$_targetTouches = []\n        }\n\n        // 处理 changedTouches\n        if (options.changedTouches && options.changedTouches.length) {\n            this.$_changedTouches = options.changedTouches.map(touch => ({...touch, target: options.target}))\n        } else if (options.changedTouches) {\n            this.$_changedTouches = []\n        }\n    }\n\n    /**\n     * 返回事件是否立即停止\n     */\n    get $$immediateStop() {\n        return this.$_immediateStop\n    }\n\n    /**\n     * 返回事件时否还可以冒泡\n     */\n    get $$canBubble() {\n        return this.$_canBubble\n    }\n\n    /**\n     * 设置 target\n     */\n    $$setTarget(target) {\n        this.$_target = target\n    }\n\n    /**\n     * 设置 currentTarget\n     */\n    $$setCurrentTarget(currentTarget) {\n        this.$_currentTarget = currentTarget\n        this.$$checkTargetTouches()\n    }\n\n    /**\n     * 设置事件所处阶段\n     */\n    $$setEventPhase(eventPhase) {\n        this.$_eventPhase = eventPhase\n    }\n\n    /**\n     * 检查 targetTouches\n     */\n    $$checkTargetTouches() {\n        if (this.$_touches && this.$_touches.length) {\n            this.$_targetTouches = this.$_touches.filter(touch => checkRelation(touch.target, this.$_currentTarget))\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get bubbles() {\n        return this.$_bubbles\n    }\n\n    get cancelable() {\n        return this.$_cancelable\n    }\n\n    get target() {\n        return this.$_target\n    }\n\n    get currentTarget() {\n        return this.$_currentTarget\n    }\n\n    get eventPhase() {\n        return this.$_eventPhase\n    }\n\n    get type() {\n        return this.$_name\n    }\n\n    get timeStamp() {\n        return this.$_timeStamp\n    }\n\n    get touches() {\n        return this.$_touches\n    }\n\n    get targetTouches() {\n        return this.$_targetTouches\n    }\n\n    get changedTouches() {\n        return this.$_changedTouches\n    }\n\n    set detail(value) {\n        this.$_detail = value\n    }\n\n    get detail() {\n        return this.$_detail\n    }\n\n    preventDefault() {\n        // 目前仅支持 a 标签的点击阻止\n        this.$_cancelable = true\n    }\n\n    stopPropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_canBubble = false\n    }\n\n    stopImmediatePropagation() {\n        if (this.eventPhase === Event.NONE) return\n\n        this.$_immediateStop = true\n        this.$_canBubble = false\n    }\n\n    initEvent(name = '', bubbles) {\n        if (typeof name !== 'string') return\n\n        this.$_name = name.toLowerCase()\n        this.$_bubbles = bubbles === undefined ? this.$_bubbles : !!bubbles\n    }\n}\n\n// 静态属性\nEvent.NONE = 0\nEvent.CAPTURING_PHASE = 1\nEvent.AT_TARGET = 2\nEvent.BUBBLING_PHASE = 3\n\nmodule.exports = Event\n","const EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nclass Node extends EventTarget {\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init()\n\n        this.$_nodeId = options.nodeId // 唯一标识\n        this.$_type = options.type\n        this.$_parentNode = null\n        this.$_tree = tree\n        this.$_pageId = tree.pageId\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_nodeId = null\n        this.$_type = null\n        this.$_parentNode = null\n        this.$_tree = null\n        this.$_pageId = null\n    }\n\n    /**\n     * 内部 nodeId\n     */\n    get $$nodeId() {\n        return this.$_nodeId\n    }\n\n    /**\n     * 内部 pageId\n     */\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 更新 parentNode\n     */\n    $$updateParent(parentNode = null) {\n        this.$_parentNode = parentNode\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get parentNode() {\n        return this.$_parentNode\n    }\n\n    get nodeValue() {\n        return null\n    }\n\n    get previousSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            return childNodes[index - 1]\n        }\n\n        return null\n    }\n\n    get previousElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index > 0) {\n            for (let i = index - 1; i >= 0; i--) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get nextSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        return childNodes[index + 1] || null\n    }\n\n    get nextElementSibling() {\n        const childNodes = this.parentNode && this.parentNode.childNodes || []\n        const index = childNodes.indexOf(this)\n\n        if (index < childNodes.length - 1) {\n            for (let i = index + 1, len = childNodes.length; i < len; i++) {\n                if (childNodes[i].nodeType === Node.ELEMENT_NODE) {\n                    return childNodes[i]\n                }\n            }\n        }\n\n        return null\n    }\n\n    get ownerDocument() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get childNodes() {\n        return []\n    }\n\n    hasChildNodes() {\n        return false\n    }\n\n    remove() {\n        if (!this.parentNode || !this.parentNode.removeChild) return this\n\n        return this.parentNode.removeChild(this)\n    }\n}\n\n// 静态属性\nNode.ELEMENT_NODE = 1\nNode.TEXT_NODE = 3\nNode.CDATA_SECTION_NODE = 4\nNode.PROCESSING_INSTRUCTION_NODE = 7\nNode.COMMENT_NODE = 8\nNode.DOCUMENT_NODE = 9\nNode.DOCUMENT_TYPE_NODE = 10\nNode.DOCUMENT_FRAGMENT_NODE = 11\n\nmodule.exports = Node\n","/**\n * 暂不对 ipv6 地址做支持\n */\nconst EventTarget = require('../event/event-target')\nconst tool = require('../util/tool')\nconst cache = require('../util/cache')\n\nclass Location extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        this.$_pageId = pageId\n        this.$_pageRoute = tool.getPageRoute(pageId) // 小程序页面路由\n\n        this.$_protocol = 'https:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n        this.$_allowCheck = true // 是否检查 url 和 hash 变化\n    }\n\n    /**\n     * 获取 url 中旧的需要进行检测的部分\n     */\n    $_getOldValues() {\n        return {\n            protocol: this.$_protocol,\n            hostname: this.$_hostname,\n            port: this.$_port,\n            pathname: this.$_pathname,\n            search: this.$_search,\n            hash: this.$_hash,\n        }\n    }\n\n    /**\n     * 设置 href，不进入 history\n     */\n    $_setHrefWithoutEnterHistory(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) {\n            // 没有带协议\n            if (value.indexOf('/') === 0) {\n                // 以 / 开头，直接替换整个 pathname、search、hash\n                value = `${this.origin}${value}`\n            } else if (value.indexOf('#') === 0) {\n                // 以 # 开头，直接替换整个 hash\n                value = `${this.origin}${this.$_pathname}${this.$_search}${value}`\n            } else {\n                // 非以 / 开头，则替换 pathname 的最后一段、search、hash\n                let pathname = this.$_pathname.split('/')\n                pathname.pop()\n                pathname = pathname.join('/')\n\n                value = `${this.origin}${pathname}/${value}`\n            }\n        }\n\n        const {\n            protocol, hostname, port, hash, search, pathname\n        } = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n\n        this.$$endCheckHash()\n        this.$_checkUrl(oldValues)\n    }\n\n    /**\n     * 进入 history\n     */\n    $_enterHistory() {\n        this.$$trigger('$_addToHistory', {\n            event: {\n                href: this.href,\n            }\n        })\n    }\n\n    /**\n     * 检查 url 变化是否需要跳转\n     */\n    $_checkUrl(oldValues) {\n        if (!this.$_allowCheck) return false\n\n        const window = cache.getWindow(this.$_pageId)\n\n        if (this.$_protocol !== oldValues.protocol || this.$_hostname !== oldValues.hostname || this.$_port !== oldValues.port) {\n            // 只能跳转相同 protocol、hostname 和 port 的 url\n            const jumpUrl = this.href\n\n            // 和 web 端不同，这里恢复成原状\n            this.$_protocol = oldValues.protocol\n            this.$_hostname = oldValues.hostname\n            this.$_port = oldValues.port\n            this.$_pathname = oldValues.pathname\n            this.$_search = oldValues.search\n            this.$_hash = oldValues.hash\n\n            window.$$trigger('pageaccessdenied', {\n                event: {\n                    url: jumpUrl,\n                    type: 'jump',\n                },\n            })\n\n            return false\n        }\n\n        if (this.$_pathname !== oldValues.pathname || this.$_search !== oldValues.search) {\n            const matchRoute = window.$$miniprogram.getMatchRoute(this.$_pathname)\n\n            if (matchRoute) {\n                let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n                if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n                if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n                param = '?' + param.join('&')\n\n                const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'redirectTo'\n                wx[callMethod]({\n                    url: `${matchRoute}${param}`,\n                })\n\n                if (callMethod === 'switchTab') {\n                    // switchTab 不会销毁页面实例，所以也需要恢复成原状\n                    this.$_protocol = oldValues.protocol\n                    this.$_hostname = oldValues.hostname\n                    this.$_port = oldValues.port\n                    this.$_pathname = oldValues.pathname\n                    this.$_search = oldValues.search\n                    this.$_hash = oldValues.hash\n                }\n\n                return true\n            } else {\n                const jumpUrl = this.href\n\n                // 和 web 端不同，这里恢复成原状\n                this.$_protocol = oldValues.protocol\n                this.$_hostname = oldValues.hostname\n                this.$_port = oldValues.port\n                this.$_pathname = oldValues.pathname\n                this.$_search = oldValues.search\n                this.$_hash = oldValues.hash\n\n                window.$$trigger('pagenotfound', {\n                    event: {\n                        url: jumpUrl,\n                        type: 'jump',\n                    },\n                })\n\n                return false\n            }\n        }\n\n        return true\n    }\n\n    /**\n     * 打开一个新页面\n     */\n    $$open(url) {\n        url = tool.completeURL(url, this.origin, true)\n\n        const window = cache.getWindow(this.$_pageId)\n        const parseRes = Location.$$parse(url)\n\n        if (parseRes.protocol !== this.$_protocol || parseRes.hostname !== this.$_hostname || parseRes.port !== this.$_port) {\n            // 只能打开相同 protocol、hostname 和 port 的 url\n            return window.$$trigger('pageaccessdenied', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n\n        const matchRoute = window.$$miniprogram.getMatchRoute(parseRes.pathname || '/')\n\n        if (matchRoute) {\n            let param = ['type=open', `targeturl=${encodeURIComponent(url)}`]\n            if (this.$_search) param.push(`search=${encodeURIComponent(parseRes.search || '')}`)\n            if (this.$_hash) param.push(`hash=${encodeURIComponent(parseRes.hash || '')}`)\n\n            param = '?' + param.join('&')\n\n            const callMethod = window.$$miniprogram.isTabBarPage(matchRoute) ? 'switchTab' : 'navigateTo'\n            wx[callMethod]({\n                url: `${matchRoute}${param}`,\n            })\n        } else {\n            window.$$trigger('pagenotfound', {\n                event: {\n                    url,\n                    type: 'open',\n                },\n            })\n        }\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(url = '') {\n        const {\n            protocol, hostname, port, pathname, hash, search\n        } = Location.$$parse(url)\n\n        this.$_protocol = protocol || 'https:'\n        this.$_hostname = hostname || ''\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    /**\n     * 解析 href\n     */\n    static $$parse(href = '') {\n        href = href.trim()\n\n        // protocol\n        let protocol = /^[a-zA-Z0-9]+:/i.exec(href)\n        if (protocol) {\n            protocol = protocol[0].toLowerCase()\n            href = href.slice(protocol.length)\n        }\n\n        // 跳过 //\n        if (href.indexOf('//') === 0) {\n            href = href.slice(2)\n        }\n\n        let hostStart = 0\n        let hostEnd = -1\n        let isEnd = false\n        let host\n        for (let i = 0, len = href.length; i < len; i++) {\n            const char = href[i]\n            if ('\\t\\n\\r \"%\\';<>\\\\^`{|}'.indexOf(char) >= 0) {\n                // RFC 2396：不允许在 hostname 中使用的字符\n                if (hostEnd === -1) hostEnd = i\n            } else if ('#/?'.indexOf(char) >= 0) {\n                // host 结束符\n                if (hostEnd === -1) hostEnd = i\n                isEnd = true\n            } else if (char === '@') {\n                hostStart = i + 1\n                hostEnd = -1\n            }\n\n            if (isEnd) break\n        }\n\n        if (hostEnd === -1) {\n            host = href.slice(hostStart)\n            href = ''\n        } else {\n            host = href.slice(hostStart, hostEnd)\n            href = href.slice(hostEnd)\n        }\n\n\n        // port\n        let port = /:[0-9]*$/.exec(host)\n        if (port) {\n            port = port[0]\n            host = host.slice(0, host.length - port.length)\n\n            if (port !== ':') port = port.slice(1)\n        } else {\n            port = ''\n        }\n\n        // hostname\n        for (let i = 0, len = host.length; i < len; i++) {\n            const char = host[i]\n            const isValid = (char >= 'a' && char <= 'z') || (char >= 'A' && char <= 'Z') || (char >= '0' && char <= '9') || '.-+_'.indexOf(char) >= 0 || char.charCodeAt(0) > 127\n\n            // 不合法的 host 字符\n            if (!isValid) {\n                host = host.slice(0, i)\n\n                href = `/${host.slice(i)}${href}`\n            }\n        }\n        const hostname = host.length > 255 ? '' : host.toLowerCase()\n\n        // hash\n        let hash\n        let searchIndex = -1\n        let hashIndex = -1\n        for (let i = 0, len = href.length; i < len; i++) {\n            if (href[i] === '#') {\n                hash = href.slice(i)\n                hashIndex = i\n                break\n            } else if (href[i] === '?' && searchIndex === -1) {\n                searchIndex = i\n            }\n        }\n        hash = hash === '#' ? '' : hash\n\n        // search\n        let search\n        if (searchIndex !== -1) {\n            if (hashIndex === -1) {\n                search = href.slice(searchIndex)\n            } else {\n                search = href.slice(searchIndex, hashIndex)\n            }\n        }\n        search = search === '?' ? '' : search\n\n        // pathname\n        let pathname\n        const firstIndex = searchIndex !== -1 && (hashIndex === -1 || searchIndex < hashIndex) ? searchIndex : hashIndex\n        if (firstIndex > 0) {\n            pathname = href.slice(0, firstIndex)\n        } else if (firstIndex === -1 && href.length > 0) {\n            pathname = href\n        }\n        if (hostname && !pathname) {\n            pathname = '/'\n        }\n\n        return {\n            protocol,\n            hostname,\n            port,\n            pathname,\n            hash,\n            search,\n        }\n    }\n\n    /**\n     * 不触发检查的方式替换 href\n     */\n    $$setHrefWithoutCheck(value) {\n        this.$_allowCheck = false\n        this.replace(value)\n        this.$_allowCheck = true\n    }\n\n    /**\n     * 开始检查 hash 变化\n     */\n    $$startCheckHash() {\n        if (!this.$_allowCheck) return\n\n        this.$_lastHash = this.$_hash\n        this.$_lastPathname = this.$_pathname\n        this.$_lastSearch = this.$_search\n        this.$_lastHref = this.href\n    }\n\n    /**\n     * 检查 hash 变化\n     */\n    $$endCheckHash(needCheckUrlChange) {\n        if (!this.$_allowCheck) return\n\n        if ((needCheckUrlChange || (this.$_lastPathname === this.$_pathname && this.$_lastSearch === this.$_search)) && this.$_lastHash !== this.$_hash) {\n            this.$$trigger('hashchange', {\n                event: {\n                    oldURL: this.$_lastHref,\n                    newURL: this.href,\n                }\n            })\n        }\n\n        this.$_lastHash = ''\n        this.$_lastPathname = ''\n        this.$_lastSearch = ''\n        this.$_lastHref = ''\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get protocol() {\n        return this.$_protocol\n    }\n\n    set protocol(value) {\n        if (!value || typeof value !== 'string') return\n\n        const parseRes = /^([a-z0-9.+-]+)(:)?$/i.exec(value)\n        const oldValues = this.$_getOldValues()\n\n        if (parseRes) {\n            if (parseRes[2] === ':') {\n                this.$_protocol = value\n            } else {\n                this.$_protocol = `${parseRes[1]}:`\n            }\n\n            if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n        }\n    }\n\n    get host() {\n        return (this.$_hostname || '') + (this.$_port ? ':' + this.$_port : '')\n    }\n\n    set host(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname, port} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    set hostname(value) {\n        if (!value || typeof value !== 'string') return\n\n        const {hostname} = Location.$$parse(`//${value}`)\n        const oldValues = this.$_getOldValues()\n\n        this.$_hostname = hostname || this.$_hostname\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    set port(value) {\n        value = +value\n\n        if (typeof value !== 'number' || !isFinite(value) || value <= 0) return\n\n        const port = value === 80 ? '' : value + ''\n        const oldValues = this.$_getOldValues()\n\n        this.$_port = port\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get origin() {\n        return `${this.$_protocol}//${this.host}`\n    }\n\n    set origin(value) {\n        if (!value || typeof value !== 'string') return\n        if (!/^(([a-zA-Z0-9]+:)|(\\/\\/))/i.test(value)) return // 没有带协议\n\n        const {protocol, hostname, port} = Location.$$parse(value)\n        const oldValues = this.$_getOldValues()\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    set pathname(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '/') {\n            this.$_pathname = '/'\n        } else {\n            if (value[0] !== '/') value = `/${value}`\n\n            const {pathname} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_pathname = pathname || '/'\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    set search(value) {\n        if (typeof value !== 'string') return\n\n        const oldValues = this.$_getOldValues()\n\n        if (!value || value === '?') {\n            this.$_search = ''\n        } else {\n            if (value[0] !== '?') value = `?${value}`\n\n            const {search} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_search = search || ''\n        }\n\n        if (this.$_checkUrl(oldValues)) this.$_enterHistory()\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    set hash(value) {\n        if (typeof value !== 'string') return\n\n        this.$$startCheckHash()\n\n        if (!value || value === '#') {\n            this.$_hash = ''\n        } else {\n            if (value[0] !== '#') value = `#${value}`\n\n            const {hash} = Location.$$parse(`//miniprogram${value}`)\n\n            this.$_hash = hash || ''\n        }\n\n        this.$$endCheckHash()\n        this.$_enterHistory()\n    }\n\n    get href() {\n        return `${this.$_protocol}//${this.host}${this.$_pathname}${this.$_search}${this.$_hash}`\n    }\n\n    set href(value) {\n        this.$_setHrefWithoutEnterHistory(value)\n        this.$_enterHistory()\n    }\n\n    reload() {\n        const window = cache.getWindow(this.$_pageId)\n        let param = ['type=jump', `targeturl=${encodeURIComponent(this.href)}`]\n        if (this.$_search) param.push(`search=${encodeURIComponent(this.$_search)}`)\n        if (this.$_hash) param.push(`hash=${encodeURIComponent(this.$_hash)}`)\n\n        param = '?' + param.join('&')\n\n        const callMethod = window.$$miniprogram.isTabBarPage(this.$_pageRoute) ? 'switchTab' : 'redirectTo'\n        wx[callMethod]({\n            url: `${this.$_pageRoute}${param}`,\n        })\n    }\n\n    replace(value) {\n        // 和直接赋值 location.href 不同，不需要进入 history\n        this.$_setHrefWithoutEnterHistory(value)\n    }\n\n    toString() {\n        return this.href\n    }\n}\n\nmodule.exports = Location\n","const EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst Tree = require('./tree/tree')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst A = require('./node/element/a')\nconst Image = require('./node/element/image')\nconst Input = require('./node/element/input')\nconst Textarea = require('./node/element/textarea')\nconst Video = require('./node/element/video')\nconst Canvas = require('./node/element/canvas')\nconst Select = require('./node/element/select')\nconst Option = require('./node/element/option')\nconst NotSupport = require('./node/element/not-support')\nconst WxComponent = require('./node/element/wx-component')\nconst WxCustomComponent = require('./node/element/wx-custom-component')\nconst Cookie = require('./bom/cookie')\n\nconst CONSTRUCTOR_MAP = {\n    A,\n    IMG: Image,\n    INPUT: Input,\n    TEXTAREA: Textarea,\n    VIDEO: Video,\n    CANVAS: Canvas,\n    SELECT: Select,\n    OPTION: Option,\n}\nconst WX_COMPONENT_TRANSFORM_LIST = ['checkbox', 'checkbox-group', 'input', 'label', 'radio', 'radio-group', 'textarea', 'canvas'] // 需要从 wx-xxx 转回 xxx 节点\nlet WX_CUSTOM_COMPONENT_MAP = {}\n\n/**\n * 将部分 wx-xxx 组件转换成普通 dom 节点\n */\nfunction transformWxComponent2Dom(wxComponentName, options, tree) {\n    let groupEvent = null\n    if (wxComponentName === 'radio' || wxComponentName === 'checkbox') {\n        options.attrs.type = wxComponentName\n        wxComponentName = 'input'\n    } else if (wxComponentName === 'radio-group' || wxComponentName === 'checkbox-group') {\n        groupEvent = wxComponentName.split('-')[0]\n        wxComponentName = 'div'\n    }\n    options.tagName = wxComponentName\n    delete options.attrs.behavior\n    const normalElement = CONSTRUCTOR_MAP[wxComponentName.toUpperCase()] || Element\n    const element = normalElement.$$create(options, tree)\n\n    if (groupEvent) {\n        // group 组件转成 div，监听底下的表单组件来做处理\n        element.addEventListener('change', evt => {\n            if (!evt.$$isGroup) evt.stopImmediatePropagation()\n        })\n        element.addEventListener(`$$${groupEvent}Change`, evt => {\n            const detail = {}\n            if (groupEvent === 'radio') {\n                (element.querySelectorAll('input[type=radio]') || []).forEach(item => {\n                    if (item !== evt.target) item.setAttribute('checked', false)\n                })\n                detail.value = evt.target.value\n            } else if (groupEvent === 'checkbox') {\n                detail.value = (element.querySelectorAll('input[type=checkbox]') || [])\n                    .filter(item => item.checked)\n                    .map(item => item.value)\n            }\n\n            element.$$trigger('change', {\n                event: new Event({\n                    timeStamp: evt.timeStamp,\n                    touches: evt.touches,\n                    changedTouches: evt.changedTouches,\n                    name: 'change',\n                    target: element,\n                    eventPhase: Event.AT_TARGET,\n                    detail,\n                    $$extra: {$$isGroup: true},\n                }),\n                currentTarget: element,\n            })\n        })\n    }\n\n    return element\n}\n\n\nclass Document extends EventTarget {\n    constructor(pageId, nodeIdMap) {\n        super()\n\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        const cookieStore = runtime.cookieStore\n        WX_CUSTOM_COMPONENT_MAP = runtime.usingComponents || {}\n\n        this.$_pageId = pageId\n        const pageRoute = tool.getPageRoute(pageId)\n        const pageName = tool.getPageName(pageRoute)\n\n        // 用于封装特殊标签和对应构造器\n        const that = this\n        this.$_imageConstructor = function HTMLImageElement(width, height) {\n            return Image.$$create({\n                tagName: 'img',\n                nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n                attrs: {},\n                width,\n                height,\n            }, that.$_tree)\n        }\n\n        this.$_pageId = pageId\n        this.$_tree = new Tree(pageId, {\n            type: 'element',\n            tagName: 'body',\n            attrs: {},\n            unary: false,\n            nodeId: 'e-body',\n            children: [],\n        }, nodeIdMap, this)\n        this.$_cookie = new Cookie(pageName)\n        this.$_config = null\n\n        // documentElement\n        this.$_node = this.$$createElement({\n            tagName: 'html',\n            attrs: {},\n            nodeId: `a-${tool.getId()}`, // 运行前生成，使用 a- 前缀\n            type: Node.DOCUMENT_NODE,\n        })\n        this.$_node.$$updateParent(this) // documentElement 的 parentNode 是 document\n\n        // head 元素\n        this.$_head = this.createElement('head')\n\n        // 更新 body 的 parentNode\n        this.$_tree.root.$$updateParent(this.$_node)\n        this.$_node.$$children.push(this.$_tree.root)\n\n        // 持久化 cookie\n        if (cookieStore !== 'memory' && cookieStore !== 'globalmemory') {\n            try {\n                const key = cookieStore === 'storage' ? `PAGE_COOKIE_${pageName}` : 'PAGE_COOKIE'\n                const cookie = wx.getStorageSync(key)\n                if (cookie) this.$$cookieInstance.deserialize(cookie)\n            } catch (err) {\n                // ignore\n            }\n        }\n    }\n\n    /**\n     * Image 构造器\n     */\n    get $$imageConstructor() {\n        return this.$_imageConstructor\n    }\n\n    get $$pageId() {\n        return this.$_pageId\n    }\n\n    /**\n     * 完整的 cookie，包括 httpOnly 也能获取到\n     */\n    get $$cookie() {\n        return this.$_cookie.getCookie(this.URL, true)\n    }\n\n    /**\n     * 获取 cookie 实例\n     */\n    get $$cookieInstance() {\n        return this.$_cookie\n    }\n\n    /**\n     * 创建内置组件的时候是否支持不用前缀写法\n     */\n    get $$notNeedPrefix() {\n        if (!this.$_config) this.$_config = cache.getConfig()\n        return this.$_config && this.$_config.runtime && this.$_config.runtime.wxComponent === 'noprefix'\n    }\n\n    /**\n     * 设置页面显示状态\n     */\n    set $$visibilityState(value) {\n        this.$_visibilityState = value\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options) {\n        this.documentElement.$$trigger(eventName, options)\n    }\n\n    /**\n     * 内部所有节点创建都走此接口，统一把控\n     */\n    $$createElement(options, tree) {\n        const originTagName = options.tagName\n        const tagName = originTagName.toUpperCase()\n        let wxComponentName = null\n        tree = tree || this.$_tree\n\n        const constructorClass = CONSTRUCTOR_MAP[tagName]\n        if (constructorClass) {\n            return constructorClass.$$create(options, tree)\n        } else if (tagName === 'WX-COMPONENT') {\n            options.attrs = options.attrs || {}\n            const behavior = options.attrs.behavior\n            if (behavior && WX_COMPONENT_TRANSFORM_LIST.indexOf(behavior) !== -1) return transformWxComponent2Dom(behavior, options, tree) // 需要转成普通 dom\n            else return WxComponent.$$create(options, tree)\n        // eslint-disable-next-line no-cond-assign\n        } else if (wxComponentName = tool.checkIsWxComponent(originTagName, this.$$notNeedPrefix)) {\n            // 内置组件的特殊写法，转成 wx-component 节点\n            options.attrs = options.attrs || {}\n            if (WX_COMPONENT_TRANSFORM_LIST.indexOf(wxComponentName) !== -1) return transformWxComponent2Dom(wxComponentName, options, tree) // 需要转成普通 dom\n            else {\n                options.tagName = 'wx-component'\n                options.attrs.behavior = wxComponentName\n                return WxComponent.$$create(options, tree)\n            }\n        } else if (WX_CUSTOM_COMPONENT_MAP[originTagName]) {\n            // 自定义组件的特殊写法，转成 wx-custom-component 节点\n            options.tagName = 'wx-custom-component'\n            options.attrs = options.attrs || {}\n            options.componentName = originTagName\n            return WxCustomComponent.$$create(options, tree)\n        } else if (!tool.isTagNameSupport(tagName)) {\n            return NotSupport.$$create(options, tree)\n        } else {\n            return Element.$$create(options, tree)\n        }\n    }\n\n    /**\n     * 内部所有文本节点创建都走此接口，统一把控\n     */\n    $$createTextNode(options, tree) {\n        return TextNode.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 内部所有注释节点创建都走此接口，统一把控\n     */\n    $$createComment(options, tree) {\n        return Comment.$$create(options, tree || this.$_tree)\n    }\n\n    /**\n     * 处理 Set-Cookie 头串\n     */\n    $$setCookie(str) {\n        if (str && typeof str === 'string') {\n            let start = 0\n            let startSplit = 0\n            let nextSplit = str.indexOf(',', startSplit)\n            const cookies = []\n\n            while (nextSplit >= 0) {\n                const lastSplitStr = str.substring(start, nextSplit)\n                const splitStr = str.substr(nextSplit)\n\n                if (/^,\\s*([^,=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.test(splitStr)) {\n                // 分割成功，则上一片是完整 cookie\n                    cookies.push(lastSplitStr)\n                    start = nextSplit + 1\n                }\n\n                startSplit = nextSplit + 1\n                nextSplit = str.indexOf(',', startSplit)\n            }\n\n            // 塞入最后一片 cookie\n            cookies.push(str.substr(start))\n\n            cookies.forEach(cookie => this.cookie = cookie)\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeType() {\n        return Node.DOCUMENT_NODE\n    }\n\n    get documentElement() {\n        return this.$_node\n    }\n\n    get body() {\n        return this.$_tree.root\n    }\n\n    get nodeName() {\n        return '#document'\n    }\n\n    get head() {\n        return this.$_head\n    }\n\n    get defaultView() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get URL() {\n        if (this.defaultView) return this.defaultView.location.href\n\n        return ''\n    }\n\n    get cookie() {\n        return this.$_cookie.getCookie(this.URL)\n    }\n\n    set cookie(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_cookie.setCookie(value, this.URL)\n    }\n\n    get visibilityState() {\n        return this.$_visibilityState\n    }\n\n    get hidden() {\n        return this.$_visibilityState === 'visible'\n    }\n\n    getElementById(id) {\n        if (typeof id !== 'string') return\n\n        return this.$_tree.getById(id) || null\n    }\n\n    getElementsByTagName(tagName) {\n        if (typeof tagName !== 'string') return []\n\n        return this.$_tree.getByTagName(tagName, this.documentElement)\n    }\n\n    getElementsByClassName(className) {\n        if (typeof className !== 'string') return []\n\n        return this.$_tree.getByClassName(className, this.documentElement)\n    }\n\n    getElementsByName(name) {\n        if (typeof name !== 'string') return []\n\n        return this.$_tree.query(`*[name=${name}]`, this.documentElement)\n    }\n\n    querySelector(selector) {\n        if (typeof selector !== 'string') return\n\n        return this.$_tree.query(selector, this.documentElement)[0] || null\n    }\n\n    querySelectorAll(selector) {\n        if (typeof selector !== 'string') return []\n\n        return this.$_tree.query(selector, this.documentElement)\n    }\n\n    createElement(tagName) {\n        if (typeof tagName !== 'string') return\n\n        tagName = tagName.trim()\n        if (!tagName) return\n\n        return this.$$createElement({\n            tagName,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createElementNS(ns, tagName) {\n        // 不支持真正意义上的 createElementNS，转成调用 createElement\n        return this.createElement(tagName)\n    }\n\n    createTextNode(content) {\n        content = '' + content\n\n        return this.$$createTextNode({\n            content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createComment() {\n        // 忽略注释内容的传入\n        return this.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n\n    createDocumentFragment() {\n        return Element.$$create({\n            tagName: 'documentfragment',\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n            nodeType: Node.DOCUMENT_FRAGMENT_NODE,\n        }, this.$_tree)\n    }\n\n    createEvent() {\n        const window = cache.getWindow(this.$_pageId)\n\n        return new window.CustomEvent()\n    }\n\n    addEventListener(eventName, handler, options) {\n        this.documentElement.addEventListener(eventName, handler, options)\n    }\n\n    removeEventListener(eventName, handler, isCapture) {\n        this.documentElement.removeEventListener(eventName, handler, isCapture)\n    }\n\n    dispatchEvent(evt) {\n        this.documentElement.dispatchEvent(evt)\n    }\n}\n\nmodule.exports = Document\n","const Event = require('./event')\n\nclass CustomEvent extends Event {\n    constructor(name = '', options = {}) {\n        super({\n            name,\n            ...options,\n        })\n    }\n}\n\nmodule.exports = CustomEvent\n","/**\n * babel extends 无法直接继承 Array，所以换种方法来继承：https://babeljs.io/docs/en/caveats/#classes\n */\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nfunction ClassList(onUpdate) {\n    this.$$init(onUpdate)\n}\n\n/**\n * 创建实例\n */\nClassList.$$create = function(onUpdate) {\n    const config = cache.getConfig()\n\n    if (config.optimization.domExtendMultiplexing) {\n    // 复用 dom 扩展对象\n        const instance = pool.get()\n\n        if (instance) {\n            instance.$$init(onUpdate)\n            return instance\n        }\n    }\n\n    return new ClassList(onUpdate)\n}\n\nClassList.prototype = Object.assign([], {\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate\n    },\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.length = 0\n    },\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    },\n\n    /**\n     * 解析 className\n     */\n    $$parse(className = '') {\n        this.length = 0 // 置空当前内容\n\n        className = className.trim()\n        className = className ? className.split(/\\s+/) : []\n\n        for (const item of className) {\n            this.push(item)\n        }\n\n        this.$_doUpdate()\n    },\n\n    /**\n     * 对外属性和方法\n     */\n    item(index) {\n        return this[index]\n    },\n\n    contains(className) {\n        if (typeof className !== 'string') return false\n\n        return this.indexOf(className) !== -1\n    },\n\n    add(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (className && this.indexOf(className) === -1) {\n                this.push(className)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    remove(...args) {\n        let isUpdate = false\n\n        for (let className of args) {\n            if (typeof className !== 'string') continue\n\n            className = className.trim()\n\n            if (!className) continue\n\n            const index = this.indexOf(className)\n            if (index >= 0) {\n                this.splice(index, 1)\n                isUpdate = true\n            }\n        }\n\n        if (isUpdate) this.$_doUpdate()\n    },\n\n    toggle(className, force) {\n        if (typeof className !== 'string') return false\n\n        className = className.trim()\n\n        if (!className) return false\n\n        const isNotContain = this.indexOf(className) === -1\n        let action = isNotContain ? 'add' : 'remove'\n        action = force === true ? 'add' : force === false ? 'remove' : action\n\n        if (action === 'add') {\n            this.add(className)\n        } else {\n            this.remove(className)\n        }\n\n        return force === true || force === false ? force : isNotContain\n    },\n\n    toString() {\n        return this.join(' ')\n    },\n})\n\nmodule.exports = ClassList\n","const styleList = require('./style-list')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\n/**\n * 解析样式串\n */\nfunction parse(styleText) {\n    const rules = {}\n\n    if (styleText) {\n        styleText = tool.decodeContent(styleText)\n        styleText = styleText.replace(/url\\([^)]+\\)/ig, all => all.replace(/;/ig, ':#||#:')) // 先处理值里面的分号\n        styleText.split(';').forEach(rule => {\n            rule = rule.trim()\n            if (!rule) return\n\n            const split = rule.indexOf(':')\n            if (split === -1) return\n\n            const name = tool.toCamel(rule.substr(0, split).trim())\n            rules[name] = rule.substr(split + 1).replace(/:#\\|\\|#:/ig, ';').trim()\n        })\n    }\n\n    return rules\n}\n\nclass Style {\n    constructor(onUpdate) {\n        this.$$init(onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(onUpdate)\n                return instance\n            }\n        }\n\n        return new Style(onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(onUpdate) {\n        this.$_doUpdate = onUpdate || (() => {})\n        this.$_disableCheckUpdate = false // 是否禁止检查更新\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_doUpdate = null\n        this.$_disableCheckUpdate = false\n\n        styleList.forEach(name => {\n            this[`$_${name}`] = undefined\n        })\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 检查更新\n     */\n    $_checkUpdate() {\n        if (!this.$_disableCheckUpdate) {\n            this.$_doUpdate()\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get cssText() {\n        const joinText = styleList.filter(name => this[`$_${name}`]).map(name => `${tool.toDash(name)}:${this['$_' + name]}`).join(';').trim()\n        return joinText ? `${joinText};` : ''\n    }\n\n    set cssText(styleText) {\n        if (typeof styleText !== 'string') return\n\n        styleText = styleText.replace(/\"/g, '\\'')\n\n        // 解析样式\n        const rules = parse(styleText)\n\n        this.$_disableCheckUpdate = true // 将每条规则的设置合并为一次更新\n        for (const name of styleList) {\n            this[name] = rules[name]\n        }\n        this.$_disableCheckUpdate = false\n        this.$_checkUpdate()\n    }\n\n    getPropertyValue(name) {\n        if (typeof name !== 'string') return ''\n\n        name = tool.toCamel(name)\n        return this[name] || ''\n    }\n}\n\n/**\n * 设置各个属性的 getter、setter\n */\nconst properties = {}\nstyleList.forEach(name => {\n    properties[name] = {\n        get() {\n            return this[`$_${name}`] || ''\n        },\n        set(value) {\n            const config = cache.getConfig()\n            const oldValue = this[`$_${name}`]\n            value = value !== undefined ? '' + value : undefined\n\n            // 判断 value 是否需要删减\n            if (value && config.optimization.styleValueReduce && value.length > config.optimization.styleValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.styleValueReduce}`)\n                value = undefined\n            }\n\n            this[`$_${name}`] = value\n            if (oldValue !== value) this.$_checkUpdate()\n        },\n    }\n})\nObject.defineProperties(Style.prototype, properties)\n\nmodule.exports = Style\n","const Pool = require('../util/pool')\nconst cache = require('../util/cache')\nconst tool = require('../util/tool')\n\nconst pool = new Pool()\n\nclass Attribute {\n    constructor(element, onUpdate) {\n        this.$$init(element, onUpdate)\n    }\n\n    /**\n     * 创建实例\n     */\n    static $$create(element, onUpdate) {\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(element, onUpdate)\n                return instance\n            }\n        }\n\n        return new Attribute(element, onUpdate)\n    }\n\n    /**\n     * 初始化实例\n     */\n    $$init(element, onUpdate) {\n        this.$_element = element\n        this.$_doUpdate = onUpdate\n        this.$_map = {}\n        this.$_list = []\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        this.$_element = null\n        this.$_doUpdate = null\n        this.$_map = null\n        this.$_list = null\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.domExtendMultiplexing) {\n            // 复用 dom 扩展对象\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 属性映射表\n     */\n    get map() {\n        return this.$_map\n    }\n\n    /**\n     * 属性列表，需要动态更新\n     */\n    get list() {\n        return this.$_list\n    }\n\n    /**\n     * 设置属性\n     */\n    set(name, value) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            map.id = value\n        } else if (name === 'class' || (element.tagName === 'WX-COMPONENT' && name === 'className')) {\n            element.className = value\n        } else if (name === 'style') {\n            element.style.cssText = value\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            element.dataset[datasetName] = value\n        } else {\n            const config = cache.getConfig()\n\n            // 判断 value 是否需要删减\n            if (typeof value === 'string' && config.optimization.attrValueReduce && value.length > config.optimization.attrValueReduce) {\n                console.warn(`property \"${name}\" will be deleted, because it's greater than ${config.optimization.attrValueReduce}`)\n                value = ''\n            }\n\n            map[name] = value\n\n            // canvas 如果有 node 对象，需要将 width/height 设置进去\n            if ((name === 'width' || name === 'height') && element.tagName === 'CANVAS' && element.$$node) {\n                element.$$node[name] = value\n            }\n\n            // 其他字段的设置需要触发父组件更新\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 取属性\n     */\n    get(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return map.id || ''\n        } if (name === 'class') {\n            return element.className\n        } else if (name === 'style') {\n            return element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return undefined\n            return element.dataset[datasetName]\n        } else {\n            return map[name]\n        }\n    }\n\n    /**\n     * 判断属性是否存在\n     */\n    has(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            return !!element.id\n        } else if (name === 'class') {\n            return !!element.className\n        } else if (name === 'style') {\n            return !!element.style.cssText\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (!element.$__dataset) return false\n            return Object.prototype.hasOwnProperty.call(element.dataset, datasetName)\n        } else {\n            return Object.prototype.hasOwnProperty.call(map, name)\n        }\n    }\n\n    /**\n     * 删除属性\n     */\n    remove(name) {\n        const element = this.$_element\n        const map = this.$_map\n\n        if (name === 'id') {\n            element.id = ''\n        } else if (name === 'class' || name === 'style') {\n            this.set(name, '')\n        } else if (name.indexOf('data-') === 0) {\n            const datasetName = tool.toCamel(name.substr(5))\n            if (element.$__dataset) delete element.dataset[datasetName]\n        } else {\n            // 其他字段的设置需要触发父组件更新\n            delete map[name]\n            this.$_doUpdate()\n        }\n\n        this.triggerUpdate()\n    }\n\n    /**\n     * 更新属性列表\n     */\n    triggerUpdate() {\n        const map = this.$_map\n        const list = this.$_list\n\n        // 清空旧的列表\n        list.forEach(item => {\n            delete list[item.name]\n        })\n        delete list.class\n        delete list.style\n        list.length = 0\n\n        // 添加新列表\n        Object.keys(map).forEach(name => {\n            if (name !== 'id') {\n                const item = {name, value: map[name]}\n\n                list.push(item)\n                list[name] = item\n            }\n        })\n\n        const idValue = this.get('id')\n        const classValue = this.get('class')\n        const styleValue = this.get('style')\n        if (idValue) {\n            const item = {name: 'id', value: idValue}\n            list.push(item)\n            list.id = item\n        }\n        if (classValue) {\n            const item = {name: 'class', value: classValue}\n            list.push(item)\n            list.class = item\n        }\n        if (styleValue) {\n            const item = {name: 'style', value: styleValue}\n            list.push(item)\n            list.style = item\n        }\n    }\n}\n\nmodule.exports = Attribute\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass TextNode extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new TextNode(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'text'\n\n        super.$$init(options, tree)\n\n        this.$_content = options.content || ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_content = ''\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.textMultiplexing) {\n            // 复用 text 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        if (this.parentNode) this.parentNode.$$trigger('$$childNodesUpdate')\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n            content: this.$_content,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#text'\n    }\n\n    get nodeType() {\n        return Node.TEXT_NODE\n    }\n\n    get nodeValue() {\n        return this.textContent\n    }\n\n    set nodeValue(value) {\n        this.textContent = value\n    }\n\n    get textContent() {\n        return this.$_content\n    }\n\n    set textContent(value) {\n        value += ''\n\n        this.$_content = value\n        this.$_triggerParentUpdate()\n    }\n\n    get data() {\n        return this.textContent\n    }\n\n    set data(value) {\n        this.textContent = value\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createTextNode({\n            content: this.$_content,\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = TextNode\n","const Node = require('./node')\nconst tool = require('../util/tool')\nconst Pool = require('../util/pool')\nconst cache = require('../util/cache')\n\nconst pool = new Pool()\n\nclass Comment extends Node {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Comment(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        options.type = 'comment'\n\n        super.$$init(options, tree)\n    }\n\n    /**\n     * 回收实例\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.commentMultiplexing) {\n            // 复用 comment 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 对应的 dom 信息\n     */\n    get $$domInfo() {\n        return {\n            nodeId: this.$_nodeId,\n            pageId: this.$_pageId,\n            type: this.$_type,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get nodeName() {\n        return '#comment'\n    }\n\n    get nodeType() {\n        return Node.COMMENT_NODE\n    }\n\n    cloneNode() {\n        return this.ownerDocument.$$createComment({\n            nodeId: `b-${tool.getId()}`, // 运行时生成，使用 b- 前缀\n        })\n    }\n}\n\nmodule.exports = Comment\n","const tool = require('./util/tool')\nconst cache = require('./util/cache')\nconst Window = require('./window')\nconst Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\n\nmodule.exports = {\n    createPage(route, config) {\n        if (config) cache.setConfig(config)\n\n        const pageId = `p-${tool.getId()}-/${route}`\n        const window = new Window(pageId)\n        const nodeIdMap = {}\n        const document = new Document(pageId, nodeIdMap)\n\n        cache.init(pageId, {\n            window,\n            document,\n            nodeIdMap,\n        })\n\n        return {\n            pageId,\n            window,\n            document,\n        }\n    },\n\n    destroyPage(pageId) {\n        cache.destroy(pageId)\n    },\n\n    // 开放给 miniprogram-element\n    $$adapter: {\n        cache,\n        EventTarget,\n        Event,\n        tool,\n    },\n}\n","const Document = require('./document')\nconst EventTarget = require('./event/event-target')\nconst Event = require('./event/event')\nconst OriginalCustomEvent = require('./event/custom-event')\nconst Location = require('./bom/location')\nconst Navigator = require('./bom/navigator')\nconst Screen = require('./bom/screen')\nconst History = require('./bom/history')\nconst Miniprogram = require('./bom/miniprogram')\nconst {SessionStorage, LocalStorage} = require('./bom/storage')\nconst WorkerImpl = require('./bom/worker')\nconst Performance = require('./bom/performance')\nconst OriginalXMLHttpRequest = require('./bom/xml-http-request')\nconst Node = require('./node/node')\nconst Element = require('./node/element')\nconst TextNode = require('./node/text-node')\nconst Comment = require('./node/comment')\nconst ClassList = require('./node/class-list')\nconst Style = require('./node/style')\nconst Attribute = require('./node/attribute')\nconst cache = require('./util/cache')\nconst tool = require('./util/tool')\n\nlet lastRafTime = 0\nconst WINDOW_PROTOTYPE_MAP = {\n    location: Location.prototype,\n    navigator: Navigator.prototype,\n    performance: Performance.prototype,\n    screen: Screen.prototype,\n    history: History.prototype,\n    localStorage: LocalStorage.prototype,\n    sessionStorage: SessionStorage.prototype,\n    XMLHttpRequest: OriginalXMLHttpRequest.prototype,\n    event: Event.prototype,\n}\nconst ELEMENT_PROTOTYPE_MAP = {\n    attribute: Attribute.prototype,\n    classList: ClassList.prototype,\n    style: Style.prototype,\n}\nconst subscribeMap = {}\nconst globalObject = {}\n\nclass Window extends EventTarget {\n    constructor(pageId) {\n        super()\n\n        const config = cache.getConfig()\n        const timeOrigin = +new Date()\n        const that = this\n\n        this.$_pageId = pageId\n\n        this.$_outerHeight = 0\n        this.$_outerWidth = 0\n        this.$_innerHeight = 0\n        this.$_innerWidth = 0\n\n        this.$_location = new Location(pageId)\n        this.$_navigator = new Navigator()\n        this.$_screen = new Screen()\n        this.$_history = new History(this.$_location)\n        this.$_miniprogram = new Miniprogram(pageId)\n        this.$_localStorage = new LocalStorage(this)\n        this.$_sessionStorage = new SessionStorage(this)\n        this.$_performance = new Performance(timeOrigin)\n\n        this.$_nowFetchingWebviewInfoPromise = null // 正在拉取 webview 端信息的 promise 实例\n\n        this.$_fetchDeviceInfo()\n        this.$_initInnerEvent()\n\n        // 补充实例的属性，用于 'xxx' in XXX 判断\n        this.onhashchange = null\n\n        // HTMLElement 构造器\n        this.$_elementConstructor = function HTMLElement(...args) {\n            return Element.$$create(...args)\n        }\n\n        // CustomEvent 构造器\n        this.$_customEventConstructor = class CustomEvent extends OriginalCustomEvent {\n            constructor(name = '', options = {}) {\n                options.timeStamp = +new Date() - timeOrigin\n                super(name, options)\n            }\n        }\n\n        // XMLHttpRequest 构造器\n        this.$_xmlHttpRequestConstructor = class XMLHttpRequest extends OriginalXMLHttpRequest {constructor() { super(that) }}\n\n        // Worker/SharedWorker 构造器\n        if (config.generate && config.generate.worker) {\n            this.$_workerConstructor = class Worker extends WorkerImpl.Worker {constructor(url) { super(url, that) }}\n            this.$_sharedWorkerConstructor = class SharedWorker extends WorkerImpl.SharedWorker {constructor(url) { super(url, that) }}\n        }\n\n        // react 环境兼容\n        this.HTMLIFrameElement = function() {}\n    }\n\n    /**\n     * 初始化内部事件\n     */\n    $_initInnerEvent() {\n        // 监听 location 的事件\n        this.$_location.addEventListener('hashchange', ({oldURL, newURL}) => {\n            this.$$trigger('hashchange', {\n                event: new Event({\n                    name: 'hashchange',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {\n                        oldURL,\n                        newURL,\n                    },\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听 history 的事件\n        this.$_history.addEventListener('popstate', ({state}) => {\n            this.$$trigger('popstate', {\n                event: new Event({\n                    name: 'popstate',\n                    target: this,\n                    eventPhase: Event.AT_TARGET,\n                    $$extra: {state},\n                }),\n                currentTarget: this,\n            })\n        })\n\n        // 监听滚动事件\n        this.addEventListener('scroll', () => {\n            const document = this.document\n            // 记录最近一次滚动事件触发的时间戳\n            if (document) document.documentElement.$$scrollTimeStamp = +new Date()\n        })\n    }\n\n    /**\n     * 拉取设备参数\n     */\n    $_fetchDeviceInfo() {\n        try {\n            const info = wx.getSystemInfoSync()\n\n            this.$_outerHeight = info.screenHeight\n            this.$_outerWidth = info.screenWidth\n            this.$_innerHeight = info.windowHeight\n            this.$_innerWidth = info.windowWidth\n\n            this.$_screen.$$reset(info)\n            this.$_navigator.$$reset(info)\n        } catch (err) {\n            // ignore\n        }\n    }\n\n    /**\n     * 拉取处理切面必要的信息\n     */\n    $_getAspectInfo(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n        let method = descriptor[1]\n        let type = descriptor[2]\n        let prototype\n\n        // 找出对象原型\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                prototype = WINDOW_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Window.prototype\n            }\n        } else if (main === 'document') {\n            prototype = Document.prototype\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                prototype = ELEMENT_PROTOTYPE_MAP[sub]\n                method = type\n                type = descriptor[3]\n            } else {\n                prototype = Element.prototype\n            }\n        } else if (main === 'textNode') {\n            prototype = TextNode.prototype\n        } else if (main === 'comment') {\n            prototype = Comment.prototype\n        }\n\n        return {prototype, method, type}\n    }\n\n    /**\n     * 暴露给小程序用的对象\n     */\n    get $$miniprogram() {\n        return this.$_miniprogram\n    }\n\n    /**\n     * 获取全局共享对象\n     */\n    get $$global() {\n        return globalObject\n    }\n\n    /**\n     * 销毁实例\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        const pageId = this.$_pageId\n\n        WorkerImpl.destroy(pageId)\n        Object.keys(subscribeMap).forEach(name => {\n            const handlersMap = subscribeMap[name]\n            if (handlersMap[pageId]) handlersMap[pageId] = null\n        })\n    }\n\n    /**\n     * 小程序端的 getComputedStyle 实现\n     * https://developers.weixin.qq.com/miniprogram/dev/api/wxml/NodesRef.fields.html\n     */\n    $$getComputedStyle(dom, computedStyle = []) {\n        tool.flushThrottleCache() // 先清空 setData\n        return new Promise((resolve, reject) => {\n            if (dom.tagName === 'BODY') {\n                this.$$createSelectorQuery().select('.miniprogram-root').fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            } else {\n                this.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${dom.$$nodeId}`).fields({computedStyle}, res => (res ? resolve(res) : reject())).exec()\n            }\n        })\n    }\n\n    /**\n     * 强制清空 setData 缓存\n     */\n    $$forceRender() {\n        tool.flushThrottleCache()\n    }\n\n    /**\n     * 触发节点事件\n     */\n    $$trigger(eventName, options = {}) {\n        if (eventName === 'error' && typeof options.event === 'string') {\n            // 此处触发自 App.onError 钩子\n            const errStack = options.event\n            const errLines = errStack.split('\\n')\n            let message = ''\n            for (let i = 0, len = errLines.length; i < len; i++) {\n                const line = errLines[i]\n                if (line.trim().indexOf('at') !== 0) {\n                    message += (line + '\\n')\n                } else {\n                    break\n                }\n            }\n\n            const error = new Error(message)\n            error.stack = errStack\n            options.event = new this.$_customEventConstructor('error', {\n                target: this,\n                $$extra: {\n                    message,\n                    filename: '',\n                    lineno: 0,\n                    colno: 0,\n                    error,\n                },\n            })\n            options.args = [message, error]\n\n            // window.onerror 比较特殊，需要调整参数\n            if (typeof this.onerror === 'function' && !this.onerror.$$isOfficial) {\n                const oldOnError = this.onerror\n                this.onerror = (event, message, error) => {\n                    oldOnError.call(this, message, '', 0, 0, error)\n                }\n                this.onerror.$$isOfficial = true // 标记为官方封装的方法\n            }\n        }\n\n        super.$$trigger(eventName, options)\n    }\n\n    /**\n     * 获取原型\n     */\n    $$getPrototype(descriptor) {\n        if (!descriptor || typeof descriptor !== 'string') return\n\n        descriptor = descriptor.split('.')\n        const main = descriptor[0]\n        const sub = descriptor[1]\n\n        if (main === 'window') {\n            if (WINDOW_PROTOTYPE_MAP[sub]) {\n                return WINDOW_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Window.prototype\n            }\n        } else if (main === 'document') {\n            if (!sub) {\n                return Document.prototype\n            }\n        } else if (main === 'element') {\n            if (ELEMENT_PROTOTYPE_MAP[sub]) {\n                return ELEMENT_PROTOTYPE_MAP[sub]\n            } else if (!sub) {\n                return Element.prototype\n            }\n        } else if (main === 'textNode') {\n            if (!sub) {\n                return TextNode.prototype\n            }\n        } else if (main === 'comment') {\n            if (!sub) {\n                return Comment.prototype\n            }\n        }\n    }\n\n    /**\n     * 扩展 dom/bom 对象\n     */\n    $$extend(descriptor, options) {\n        if (!descriptor || !options || typeof descriptor !== 'string' || typeof options !== 'object') return\n\n        const prototype = this.$$getPrototype(descriptor)\n        const keys = Object.keys(options)\n\n        if (prototype) keys.forEach(key => prototype[key] = options[key])\n    }\n\n    /**\n     * 对 dom/bom 对象方法追加切面方法\n     */\n    $$addAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function') return\n\n            // 重写原始方法\n            if (!methodInPrototype.$$isHook) {\n                prototype[method] = function(...args) {\n                    const beforeFuncs = prototype[method].$$before || []\n                    const afterFuncs = prototype[method].$$after || []\n\n                    if (beforeFuncs.length) {\n                        for (const beforeFunc of beforeFuncs) {\n                            const isStop = beforeFunc.apply(this, args)\n                            if (isStop) return\n                        }\n                    }\n\n                    const res = methodInPrototype.apply(this, args)\n\n                    if (afterFuncs.length) {\n                        for (const afterFunc of afterFuncs) {\n                            afterFunc.call(this, res)\n                        }\n                    }\n\n                    return res\n                }\n                prototype[method].$$isHook = true\n                prototype[method].$$originalMethod = methodInPrototype\n            }\n\n            // 追加切面方法\n            if (type === 'before') {\n                prototype[method].$$before = prototype[method].$$before || []\n                prototype[method].$$before.push(func)\n            } else if (type === 'after') {\n                prototype[method].$$after = prototype[method].$$after || []\n                prototype[method].$$after.push(func)\n            }\n        }\n    }\n\n    /**\n     * 删除对 dom/bom 对象方法追加前置/后置处理\n     */\n    $$removeAspect(descriptor, func) {\n        if (!descriptor || !func || typeof descriptor !== 'string' || typeof func !== 'function') return\n\n        const {prototype, method, type} = this.$_getAspectInfo(descriptor)\n\n        // 处理切面\n        if (prototype && method && type) {\n            const methodInPrototype = prototype[method]\n            if (typeof methodInPrototype !== 'function' || !methodInPrototype.$$isHook) return\n\n            // 移除切面方法\n            if (type === 'before' && methodInPrototype.$$before) {\n                methodInPrototype.$$before.splice(methodInPrototype.$$before.indexOf(func), 1)\n            } else if (type === 'after' && methodInPrototype.$$after) {\n                methodInPrototype.$$after.splice(methodInPrototype.$$after.indexOf(func), 1)\n            }\n\n            if ((!methodInPrototype.$$before || !methodInPrototype.$$before.length) && (!methodInPrototype.$$after || !methodInPrototype.$$after.length)) {\n                prototype[method] = methodInPrototype.$$originalMethod\n            }\n        }\n    }\n\n    /**\n     * 订阅广播事件\n     */\n    $$subscribe(name, handler) {\n        if (typeof name !== 'string' || typeof handler !== 'function') return\n\n        const pageId = this.$_pageId\n        subscribeMap[name] = subscribeMap[name] || {}\n        subscribeMap[name][pageId] = subscribeMap[name][pageId] || []\n        subscribeMap[name][pageId].push(handler)\n    }\n\n    /**\n     * 取消订阅广播事件\n     */\n    $$unsubscribe(name, handler) {\n        const pageId = this.$_pageId\n\n        if (typeof name !== 'string' || !subscribeMap[name] || !subscribeMap[name][pageId]) return\n\n        const handlers = subscribeMap[name][pageId]\n        if (!handler) {\n            // 取消所有 handler 的订阅\n            handlers.length = 0\n        } else if (typeof handler === 'function') {\n            const index = handlers.indexOf(handler)\n            if (index !== -1) handlers.splice(index, 1)\n        }\n    }\n\n    /**\n     * 发布广播事件\n     */\n    $$publish(name, data) {\n        if (typeof name !== 'string' || !subscribeMap[name]) return\n\n        Object.keys(subscribeMap[name]).forEach(pageId => {\n            const handlers = subscribeMap[name][pageId]\n            if (handlers && handlers.length) {\n                handlers.forEach(handler => {\n                    if (typeof handler !== 'function') return\n\n                    try {\n                        handler.call(null, data)\n                    } catch (err) {\n                        console.error(err)\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get location() {\n        return this.$_location\n    }\n\n    set location(href) {\n        this.$_location.href = href\n    }\n\n    get navigator() {\n        return this.$_navigator\n    }\n\n    get CustomEvent() {\n        return this.$_customEventConstructor\n    }\n\n    get Event() {\n        return Event\n    }\n\n    get self() {\n        return this\n    }\n\n    get localStorage() {\n        return this.$_localStorage\n    }\n\n    get sessionStorage() {\n        return this.$_sessionStorage\n    }\n\n    get screen() {\n        return this.$_screen\n    }\n\n    get history() {\n        return this.$_history\n    }\n\n    get outerHeight() {\n        return this.$_outerHeight\n    }\n\n    get outerWidth() {\n        return this.$_outerWidth\n    }\n\n    get innerHeight() {\n        return this.$_innerHeight\n    }\n\n    get innerWidth() {\n        return this.$_innerWidth\n    }\n\n    get Image() {\n        return this.document.$$imageConstructor\n    }\n\n    get setTimeout() {\n        return setTimeout.bind(null)\n    }\n\n    get clearTimeout() {\n        return clearTimeout.bind(null)\n    }\n\n    get setInterval() {\n        return setInterval.bind(null)\n    }\n\n    get clearInterval() {\n        return clearInterval.bind(null)\n    }\n\n    get HTMLElement() {\n        return this.$_elementConstructor\n    }\n\n    get Element() {\n        return Element\n    }\n\n    get Node() {\n        return Node\n    }\n\n    get RegExp() {\n        return RegExp\n    }\n\n    get Math() {\n        return Math\n    }\n\n    get Number() {\n        return Number\n    }\n\n    get Boolean() {\n        return Boolean\n    }\n\n    get String() {\n        return String\n    }\n\n    get Date() {\n        return Date\n    }\n\n    get Symbol() {\n        return Symbol\n    }\n\n    get parseInt() {\n        return parseInt\n    }\n\n    get parseFloat() {\n        return parseFloat\n    }\n\n    get console() {\n        return console\n    }\n\n    get performance() {\n        return this.$_performance\n    }\n\n    get SVGElement() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.SVGElement is not supported')\n        return function() {}\n    }\n\n    get XMLHttpRequest() {\n        return this.$_xmlHttpRequestConstructor\n    }\n\n    get Worker() {\n        return this.$_workerConstructor\n    }\n\n    get SharedWorker() {\n        return this.$_sharedWorkerConstructor\n    }\n\n    get devicePixelRatio() {\n        return wx.getSystemInfoSync().pixelRatio\n    }\n\n    open(url) {\n        // 不支持 windowName 和 windowFeatures\n        this.location.$$open(url)\n    }\n\n    close() {\n        wx.navigateBack({\n            delta: 1,\n        })\n    }\n\n    getComputedStyle() {\n        // 不作任何实现，只作兼容使用\n        console.warn('window.getComputedStyle is not supported, please use window.$$getComputedStyle instead of it')\n        return {\n            // vue transition 组件使用\n            transitionDelay: '',\n            transitionDuration: '',\n            animationDelay: '',\n            animationDuration: '',\n        }\n    }\n\n    requestAnimationFrame(callback) {\n        if (typeof callback !== 'function') return\n\n        const now = new Date()\n        const nextRafTime = Math.max(lastRafTime + 16, now)\n        return setTimeout(() => {\n            callback(nextRafTime)\n            lastRafTime = nextRafTime\n        }, nextRafTime - now)\n    }\n\n    cancelAnimationFrame(timeId) {\n        return clearTimeout(timeId)\n    }\n}\n\nmodule.exports = Window\n","const QuerySelector = require('./query-selector')\nconst tool = require('../util/tool')\n\n/**\n * 遍历 dom 树，收集类和标签对应的节点列表\n */\nfunction walkDomTree(node, cache) {\n    const tagMap = cache.tagMap = cache.tagMap || {}\n    const classMap = cache.classMap = cache.classMap || {}\n    const {tagName, classList} = node\n\n    // 标签\n    tagMap[tagName] = tagMap[tagName] || []\n    tagMap[tagName].push(node)\n\n    // 类\n    for (const className of classList) {\n        classMap[className] = classMap[className] || []\n        classMap[className].push(node)\n    }\n\n    const children = node.children || []\n\n    for (const child of children) {\n        // 递归遍历\n        walkDomTree(child, cache)\n    }\n}\n\nclass Tree {\n    constructor(pageId, root, nodeIdMap, document) {\n        this.pageId = pageId\n        this.root = document.$$createElement(root, this)\n        this.nodeIdMap = nodeIdMap\n        this.idMap = {}\n        this.document = document\n\n        this.querySelector = new QuerySelector()\n        if (nodeIdMap) nodeIdMap[root.nodeId] = this.root\n\n        this.walk(root, this.root)\n    }\n\n    /**\n     * 遍历 ast\n     */\n    walk(ast, parentNode) {\n        const children = ast.children\n        const idMap = this.idMap\n        const nodeIdMap = this.nodeIdMap\n        const document = this.document\n\n        if (!children || !children.length) return\n\n        // 遍历子节点\n        for (const child of children) {\n            let childNode\n\n            if (child.type === 'element') {\n                childNode = document.$$createElement(child, this)\n            } else if (child.type === 'text') {\n                childNode = document.$$createTextNode(child, this)\n            }\n\n            // 处理 id 缓存\n            const id = childNode.id\n            if (id && !idMap[id]) {\n                idMap[id] = childNode\n            }\n\n            // 处理 nodeId 缓存\n            if (nodeIdMap) nodeIdMap[child.nodeId] = childNode\n\n            // 插入子节点\n            parentNode.appendChild(childNode)\n\n            // 遍历子节点的 ast\n            this.walk(child, childNode)\n        }\n    }\n\n    /**\n     * 更新 idMap\n     */\n    updateIdMap(id, node) {\n        this.idMap[id] = node\n    }\n\n    /**\n     * 根据 id 获取节点\n     */\n    getById(id) {\n        return this.idMap[id]\n    }\n\n    /**\n     * 根据标签名获取节点列表\n     */\n    getByTagName(tagName, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        if (tool.checkIsWxComponent(tagName.toLowerCase(), false)) {\n            // 内置组件\n            tagName = tagName.toLowerCase().slice(3)\n            return (cache.tagMap['WX-COMPONENT'] || []).filter(findNode => findNode.behavior === tagName)\n        }\n\n        return cache.tagMap[tagName.toUpperCase()] || []\n    }\n\n    /**\n     * 根据类名获取节点列表\n     */\n    getByClassName(className, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return cache.classMap[className] || []\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    query(selector, node) {\n        const cache = {}\n        walkDomTree(node || this.root, cache)\n\n        return this.querySelector.exec(selector, {\n            idMap: this.idMap,\n            tagMap: cache.tagMap,\n            classMap: cache.classMap,\n        })\n    }\n}\n\nmodule.exports = Tree\n","/**\n * 感谢 sizzle：https://github.com/jquery/sizzle/tree/master\n */\nconst tool = require('../util/tool')\n\nconst PSEUDO_CHECK = {\n    checked: node => node.checked || node.selected,\n    disabled: node => node.disabled,\n    enabled: node => !node.disabled,\n    'first-child': node => node.parentNode.children[0] === node,\n    'last-child': node => node.parentNode.children[node.parentNode.children.length - 1] === node,\n    'nth-child': (node, param) => {\n        const children = node.parentNode.children\n        const {a, b} = param\n        const index = children.indexOf(node) + 1\n\n        if (a) {\n            return (index - b) % a === 0\n        } else {\n            return index === b\n        }\n    },\n}\n\nconst ATTR_CHECK = {\n    '=': (nodeVal, val) => nodeVal === val,\n    '~=': (nodeVal, val) => nodeVal.split(/\\s+/).indexOf(val) !== -1,\n    '|=': (nodeVal, val) => nodeVal === val || nodeVal.indexOf(val + '-') === 0,\n    '^=': (nodeVal, val) => nodeVal.indexOf(val) === 0,\n    '$=': (nodeVal, val) => nodeVal.substr(nodeVal.length - val.length) === val,\n    '*=': (nodeVal, val) => nodeVal.indexOf(val) !== -1,\n}\n\nconst KINSHIP_CHECK = {\n    ' ': (node, kinshipRule) => {\n        let kinshipNode = node.parentNode\n\n        while (kinshipNode) {\n            if (checkHit(kinshipNode, kinshipRule)) return kinshipNode\n\n            kinshipNode = kinshipNode.parentNode\n        }\n\n        return null\n    },\n    '>': (node, kinshipRule) => {\n        const kinshipNode = node.parentNode\n\n        return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n    },\n    '+': (node, kinshipRule) => {\n        const children = node.parentNode\n\n        for (let i = 0, len = children.length; i < len; i++) {\n            const child = children[i]\n\n            if (child === node) {\n                const kinshipNode = children[i - 1]\n\n                return checkHit(kinshipNode, kinshipRule) ? kinshipNode : null\n            }\n        }\n\n        return null\n    },\n    '~': (node, kinshipRule) => {\n        const children = node.parentNode\n        let foundCurrent = false\n\n        for (let i = children.length - 1; i >= 0; i--) {\n            const child = children[i]\n\n            if (foundCurrent && checkHit(child, kinshipRule)) return child\n            if (child === node) foundCurrent = true\n        }\n\n        return null\n    },\n}\n\n/**\n * 检查节点是否符合规则\n */\nfunction checkHit(node, rule) {\n    if (!node) return false\n\n    const {\n        id, class: classList, tag, pseudo, attr\n    } = rule\n\n    // id 选择器\n    if (id) {\n        if (node.id !== id) return false\n    }\n\n    // 类选择器\n    if (classList && classList.length) {\n        for (const className of classList) {\n            if (!node.classList || !node.classList.contains(className)) return false\n        }\n    }\n\n    // 标签选择器\n    if (tag && tag !== '*') {\n        if (tool.checkIsWxComponent(tag.toLowerCase(), false)) {\n            // 内置组件\n            if (node.tagName !== 'WX-COMPONENT' || node.behavior !== tag.slice(3).toLowerCase()) return false\n        } else if (node.tagName !== tag.toUpperCase()) {\n            return false\n        }\n    }\n\n    // 伪类选择器\n    if (pseudo) {\n        for (const {name, param} of pseudo) {\n            const checkPseudo = PSEUDO_CHECK[name]\n            if (!checkPseudo || !checkPseudo(node, param)) return false\n        }\n    }\n\n    // 属性选择器\n    if (attr) {\n        for (const {name, opr, val} of attr) {\n            const nodeVal = node[name] || node.getAttribute(name)\n\n            if (nodeVal === undefined || nodeVal === null) return false\n            if (opr) {\n                // 存在操作符\n                const checkAttr = ATTR_CHECK[opr]\n                if (!checkAttr || !checkAttr(nodeVal, val)) return false\n            }\n        }\n    }\n\n    return true\n}\n\n/**\n * 数组去重\n */\nfunction unique(list) {\n    for (let i = 0; i < list.length; i++) {\n        const a = list[i]\n\n        for (let j = i + 1; j < list.length; j++) {\n            const b = list[j]\n            if (a === b) list.splice(j, 1)\n        }\n    }\n\n    return list\n}\n\n/**\n * 将节点按照文档顺序排列\n */\nfunction sortNodes(list) {\n    list.sort((a, b) => {\n        const aList = [a]\n        const bList = [b]\n        let aParent = a.parentNode\n        let bParent = b.parentNode\n\n        if (aParent === bParent) {\n            // 检查顺序\n            const children = aParent.children\n            return children.indexOf(a) - children.indexOf(b)\n        }\n\n        // a 到根的列表\n        while (aParent) {\n            aList.unshift(aParent)\n            aParent = aParent.parentNode\n        }\n\n        // b 到根的列表\n        while (bParent) {\n            bList.unshift(bParent)\n            bParent = bParent.parentNode\n        }\n\n        // 找到最近共同祖先\n        let i = 0\n        while (aList[i] === bList[i]) i++\n\n        // 检查顺序\n        const children = aList[i - 1].children\n        return children.indexOf(aList[i]) - children.indexOf(bList[i])\n    })\n\n    return list\n}\n\nclass QuerySelector {\n    constructor() {\n        this.parseCache = {} // 解析查询串缓存\n        this.parseCacheKeys = []\n\n        const idReg = '#([\\\\\\\\\\\\w-]+)' // id 选择器\n        const tagReg = '\\\\*|wx-component|[a-zA-Z-]+\\\\w*' // 标签选择器\n        const classReg = '\\\\.([\\\\\\\\\\\\w-]+)' // 类选择器\n        const pseudoReg = ':([\\\\\\\\\\\\w-]+)(?:\\\\(([^\\\\(\\\\)]*|(?:\\\\([^\\\\)]+\\\\)|[^\\\\(\\\\)]*)+)\\\\))?' // 伪类选择器\n        const attrReg = '\\\\[\\\\s*([\\\\\\\\\\\\w-]+)(?:([*^$|~!]?=)[\\'\"]?([^\\'\"\\\\[]+)[\\'\"]?)?\\\\s*\\\\]' // 属性选择器\n        const kinshipReg = '\\\\s*([>\\\\s+~](?!=))\\\\s*' // 亲属选择器\n        this.regexp = new RegExp(`^(?:(${idReg})|(${tagReg})|(${classReg})|(${pseudoReg})|(${attrReg})|(${kinshipReg}))`)\n    }\n\n    /**\n     * 存入解析查询串缓存\n     */\n    setParseCache(key, value) {\n        if (this.parseCacheKeys.length > 50) {\n            delete this.parseCache[this.parseCacheKeys.shift()]\n        }\n\n        this.parseCacheKeys.push(key)\n        this.parseCache[key] = value\n\n        return value\n    }\n\n    /**\n     * 获取解析查询串缓存\n     */\n    getParseCache(key) {\n        return this.parseCache[key]\n    }\n\n    /**\n     * 解析查询串\n     */\n    parse(selector) {\n        const segment = [{tag: '*'}]\n        const regexp = this.regexp\n\n        const onProcess = (all, idAll, id, tagAll, classAll, className, pseudoAll, pseudoName, pseudoParam, attrAll, attrName, attrOpr, attrVal, kinshipAll, kinship) => {\n            if (idAll) {\n                // id 选择器\n                segment[segment.length - 1].id = id\n            } else if (tagAll) {\n                // 标签选择器\n                segment[segment.length - 1].tag = tagAll.toLowerCase()\n            } else if (classAll) {\n                // 类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.class = currentRule.class || []\n\n                currentRule.class.push(className)\n            } else if (pseudoAll) {\n                // 伪类选择器\n                const currentRule = segment[segment.length - 1]\n                currentRule.pseudo = currentRule.pseudo || []\n                pseudoName = pseudoName.toLowerCase()\n\n                const pseudo = {name: pseudoName}\n\n                if (pseudoParam) pseudoParam = pseudoParam.trim()\n                if (pseudoName === 'nth-child') {\n                    // 处理 nth-child 伪类，参数统一处理成 an + b 的格式\n                    pseudoParam = pseudoParam.replace(/\\s+/g, '')\n\n                    if (pseudoParam === 'even') {\n                        // 偶数个\n                        pseudoParam = {a: 2, b: 2}\n                    } else if (pseudoParam === 'odd') {\n                        // 奇数个\n                        pseudoParam = {a: 2, b: 1}\n                    } else if (pseudoParam) {\n                        // 其他表达式\n                        const nthParsed = pseudoParam.match(/^(?:(\\d+)|(\\d*)?n([+-]\\d+)?)$/)\n\n                        if (!nthParsed) {\n                            // 解析失败\n                            pseudoParam = {a: 0, b: 1}\n                        } else if (nthParsed[1]) {\n                            // 纯数字\n                            pseudoParam = {a: 0, b: +nthParsed[1]}\n                        } else {\n                            // 表达式\n                            pseudoParam = {\n                                a: nthParsed[2] ? +nthParsed[2] : 1,\n                                b: nthParsed[3] ? +nthParsed[3] : 0,\n                            }\n                        }\n                    } else {\n                        // 默认取第一个\n                        pseudoParam = {a: 0, b: 1}\n                    }\n                }\n                if (pseudoParam) pseudo.param = pseudoParam\n\n                currentRule.pseudo.push(pseudo)\n            } else if (attrAll) {\n                // 属性选择器\n                const currentRule = segment[segment.length - 1]\n\n                currentRule.attr = currentRule.attr || []\n                currentRule.attr.push({\n                    name: attrName,\n                    opr: attrOpr,\n                    val: attrVal\n                })\n            } else if (kinshipAll) {\n                // 亲属选择器\n                segment[segment.length - 1].kinship = kinship\n                segment.push({tag: '*'}) // 插入新规则\n            }\n\n            return ''\n        }\n\n        // 逐个选择器解析\n        let lastParse\n        selector = selector.replace(regexp, onProcess)\n\n        while (lastParse !== selector) {\n            lastParse = selector\n            selector = selector.replace(regexp, onProcess)\n        }\n\n        return selector ? '' : segment\n    }\n\n    /**\n     * 查询符合条件的节点\n     */\n    exec(selector, extra) {\n        selector = selector.trim().replace(/\\s+/g, ' ').replace(/\\s*(,|[>\\s+~](?!=)|[*^$|~!]?=)\\s*/g, '$1')\n        const {idMap, tagMap, classMap} = extra\n\n        // 查询缓存\n        let segment = this.getParseCache(selector)\n\n        // 无缓存，进行解析\n        if (!segment) {\n            segment = this.parse(selector)\n\n            // 无法正常解析\n            if (!segment) return []\n\n            this.setParseCache(selector, segment)\n        }\n\n        // 无解析结果\n        if (!segment[0]) return []\n\n        // 执行解析结果\n        const lastRule = segment[segment.length - 1] // 从右往左\n        const {id, class: classList, tag} = lastRule\n        let hitNodes = []\n\n        // 寻找可能符合要求的节点\n        if (id) {\n            // id 选择器\n            const node = idMap[id]\n            hitNodes = node ? [node] : []\n        } else if (classList && classList.length) {\n            // 类选择器\n            for (const className of classList) {\n                const classNodes = classMap[className]\n                if (classNodes) {\n                    for (const classNode of classNodes) {\n                        if (hitNodes.indexOf(classNode) === -1) hitNodes.push(classNode)\n                    }\n                }\n            }\n        } else if (tag && tag !== '*') {\n            // 标签选择器，查询指定标签，支持内置组件\n            const tagName = tool.checkIsWxComponent(tag.toLowerCase(), false) ? 'WX-COMPONENT' : tag.toUpperCase()\n            const tagNodes = tagMap[tagName]\n            if (tagNodes) hitNodes = tagNodes\n        } else {\n            // 标签选择器，查询全部节点\n            Object.keys(tagMap).forEach(key => {\n                const tagNodes = tagMap[key]\n                if (tagNodes) {\n                    for (const tagNode of tagNodes) hitNodes.push(tagNode)\n                }\n            })\n        }\n\n        // 从下往上过滤节点列表\n        if (hitNodes.length && segment.length) {\n            for (let i = hitNodes.length - 1; i >= 0; i--) {\n                let checkNode = hitNodes[i]\n                let isMatched = false\n\n                // 从右往左进行规则过滤\n                for (let j = segment.length - 1; j >= 0; j--) {\n                    const prevRule = segment[j - 1]\n\n                    // 检查待选节点，后续的亲属节点不需要再检查\n                    if (j === segment.length - 1) isMatched = checkHit(checkNode, lastRule)\n\n                    if (isMatched && prevRule) {\n                        // 检查亲属选择器\n                        const kinship = prevRule.kinship\n                        const checkKinship = KINSHIP_CHECK[kinship]\n\n                        if (checkKinship) checkNode = checkKinship(checkNode, prevRule)\n\n                        if (!checkNode) {\n                            // 亲属检查失败\n                            isMatched = false\n                            break\n                        }\n                    } else {\n                        break\n                    }\n                }\n\n                if (!isMatched) hitNodes.splice(i, 1) // 不符合，从待选节点列表中删除\n            }\n        }\n\n        if (hitNodes.length) {\n            // 去重、排序\n            hitNodes = unique(hitNodes)\n            hitNodes = sortNodes(hitNodes)\n        }\n\n        return hitNodes\n    }\n}\n\nmodule.exports = QuerySelector\n","/**\n * 支持的样式属性列表，默认只包含常用的样式属性\n */\n\nmodule.exports = [\n    'position', 'top', 'bottom', 'right', 'left', 'float', 'clear',\n    'display', 'width', 'height', 'maxHeight', 'maxWidth', 'minHeight', 'minWidth', 'flex', 'flexBasis', 'flexGrow', 'flexShrink', 'flexDirection', 'flexWrap', 'justifyContent', 'alignItems', 'order',\n    'padding', 'paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop',\n    'margin', 'marginBottom', 'marginLeft', 'marginRight', 'marginTop',\n\n    'background', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPosition', 'backgroundRepeat', 'backgroundSize',\n    'border', 'borderRadius', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderBottomStyle', 'borderBottomWidth', 'borderCollapse', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderTopStyle', 'borderTopWidth',\n    'borderTop', 'borderBottom', 'borderRight', 'borderLeft',\n    'outline', 'borderWidth', 'borderStyle', 'borderColor',\n\n    'animation', 'animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction',\n    'transition', 'transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction',\n    'transform', 'transformOrigin', 'perspective', 'perspectiveOrigin', 'backfaceVisibility',\n\n    'font', 'fontFamily', 'fontSize', 'fontStyle', 'fontWeight',\n    'color', 'textAlign', 'textDecoration', 'textIndent', 'textRendering', 'textShadow', 'textOverflow', 'textTransform',\n    'wordBreak', 'wordSpacing', 'wordWrap', 'lineHeight', 'letterSpacing', 'whiteSpace', 'userSelect',\n\n    'visibility', 'opacity', 'zIndex', 'zoom', 'overflow', 'overflowX', 'overflowY',\n    'boxShadow', 'boxSizing', 'content', 'cursor', 'direction', 'listStyle', 'objectFit', 'pointerEvents', 'resize', 'verticalAlign', 'willChange', 'clip', 'clipPath', 'fill',\n\n    'touchAction', 'WebkitAppearance'\n]\n","/**\n * 感谢 John Resig： https://johnresig.com/files/htmlparser.js\n */\n\n// 正则声明\nconst doctypeReg = /^<!\\s*doctype((?:\\s+[\\w:]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst startTagReg = /^<([-A-Za-z0-9_]+)((?:\\s+[-A-Za-z0-9_:@.]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/i\nconst endTagReg = /^<\\/([-A-Za-z0-9_]+)[^>]*>/i\nconst attrReg = /([-A-Za-z0-9_:@.]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g\n\n// 空元素 - https://www.w3.org/TR/html/syntax.html#void-elements\nconst voidMap = {};\n['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].forEach(n => voidMap[n] = true)\n\n// 块级元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements#Elements\nconst blockMap = {};\n['address', 'article', 'aside', 'blockquote', 'canvas', 'dd', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr', 'li', 'main', 'nav', 'noscript', 'ol', 'output', 'p', 'pre', 'section', 'table', 'tfoot', 'ul', 'video'].forEach(n => blockMap[n] = true)\n\n// 行内元素 - https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements#Elements\nconst inlineMap = {};\n['a', 'abbr', 'acronym', 'b', 'bdo', 'big', 'br', 'button', 'cite', 'code', 'dfn', 'em', 'i', 'img', 'input', 'kbd', 'label', 'map', 'object', 'q', 'samp', 'script', 'select', 'small', 'span', 'strong', 'sub', 'sup', 'textarea', 'time', 'tt', 'var'].forEach(n => inlineMap[n] = true)\n\n// 可能包含任意内容的元素 - https://www.w3.org/TR/html/syntax.html#raw-text\nconst rawTextMap = {};\n['script', 'style'].forEach(n => rawTextMap[n] = true)\n\nconst longAttributeCache = {}\nlet seed = 0\n\n/**\n * 分词\n */\nfunction tokenize(content, handler) {\n    const stack = []\n    let last = content\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    while (content) {\n        let isText = true\n\n        if (!stack.last() || !rawTextMap[stack.last()]) {\n            if (content.indexOf('<!--') === 0) {\n                // comment\n                const index = content.indexOf('-->')\n\n                if (index >= 0) {\n                    content = content.substring(index + 3)\n                    if (handler.comment) handler.comment(content)\n                    isText = false\n                }\n            } else if (content.indexOf('</') === 0) {\n                // end tag\n                const match = content.match(endTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(endTagReg, parseEndTag)\n                    isText = false\n                }\n            } else if (content.indexOf('<') === 0) {\n                // start tag\n                let match = content.match(startTagReg)\n\n                if (match) {\n                    content = content.substring(match[0].length)\n                    match[0].replace(startTagReg, parseStartTag)\n                    isText = false\n                } else {\n                    // 检测 doctype\n                    match = content.match(doctypeReg)\n\n                    if (match) {\n                        content = content.substring(match[0].length)\n                        isText = false\n                    }\n                }\n            }\n\n            if (isText) {\n                const indexStart = content.indexOf('<')\n                const indexEnd = content.indexOf('>')\n\n                // 简单自动纠错，只有 <、只有 >、> 在 < 前面、< 和 > 中间没有内容\n                let text = ''\n                if (indexStart === -1 || indexStart >= 0 && indexEnd === -1 || indexStart > indexEnd || (indexEnd > indexStart && !content.substring(indexStart + 1, indexEnd).trim())) {\n                    text = content.replace(/>/g, '&gt;').replace(/</g, '&lt;')\n                    content = ''\n                } else {\n                    text = content.substring(0, indexStart)\n                    content = content.substring(indexStart)\n                }\n\n                if (handler.text && text) handler.text(text)\n            }\n        } else {\n            const execRes = (new RegExp(`</${stack.last()}[^>]*>`)).exec(content)\n\n            if (execRes) {\n                const text = content.substring(0, execRes.index)\n                content = content.substring(execRes.index + execRes[0].length)\n\n                text.replace(/<!--(.*?)-->/g, '')\n                if (text && handler.text) handler.text(text)\n            }\n\n            parseEndTag('', stack.last())\n        }\n\n        if (content === last) throw new Error(`parse error: ${content}`)\n        last = content\n    }\n\n    // 关闭栈内的标签\n    parseEndTag()\n\n    function parseStartTag(tag, tagName, rest, unary) {\n        tagName = tagName.toLowerCase()\n        unary = !!unary\n\n        // 放宽规则，允许行内元素包含块级元素\n        // if (blockMap[tagName]) {\n        //     while (stack.last() && inlineMap[stack.last()]) {\n        //         // 自动关闭栈内的行内元素\n        //         parseEndTag('', stack.last())\n        //     }\n        // }\n\n        unary = voidMap[tagName] || !!unary\n\n        if (!unary) stack.push(tagName)\n\n        if (handler.start) {\n            const attrs = []\n\n            try {\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value,\n                    })\n                })\n            } catch (err) {\n                // 某些安卓机遇到过长的字符串执行属性正则替换会跪（主要是 base 64），这里就先临时过滤掉这种特殊情况\n                rest = rest.replace(/url\\([^)]+\\)/ig, all => {\n                    const id = `url(:#|${++seed}|#:)`\n                    longAttributeCache[id] = all\n                    return id\n                })\n                rest.replace(attrReg, (all, $1, $2, $3, $4) => {\n                    const value = $2 || $3 || $4\n\n                    attrs.push({\n                        name: $1,\n                        value: value.replace(/url\\(:#\\|\\d+\\|#:\\)/ig, all => longAttributeCache[all] || 'url()'),\n                    })\n                })\n            }\n\n            handler.start(tagName, attrs, unary)\n        }\n    }\n\n    function parseEndTag(tag, tagName) {\n        let pos\n\n        if (!tagName) {\n            pos = 0\n        } else {\n            // 找到同名的开始标签\n            tagName = tagName.toLowerCase()\n\n            for (pos = stack.length - 1; pos >= 0; pos--) {\n                if (stack[pos] === tagName) break\n            }\n        }\n\n        if (pos >= 0) {\n            // 关闭开始标签和结束标签中的所有标签\n            for (let i = stack.length - 1; i >= pos; i--) {\n                if (handler.end) handler.end(stack[i])\n            }\n\n            stack.length = pos\n        }\n    }\n}\n\n/**\n * 解析\n */\nfunction parse(html) {\n    const r = {\n        children: [],\n    }\n    const stack = [r]\n\n    stack.last = function() {\n        return this[this.length - 1]\n    }\n\n    tokenize(html, {\n        start(tagName, attrs, unary) {\n            const node = {\n                type: 'element',\n                tagName,\n                attrs,\n                unary,\n                children: [],\n            }\n\n            stack.last().children.push(node)\n\n            if (!unary) {\n                stack.push(node)\n            }\n        },\n        // eslint-disable-next-line no-unused-vars\n        end(tagName) {\n            const node = stack.pop()\n\n            if (node.tagName === 'table') {\n                // 补充插入 tbody\n                let hasTbody = false\n\n                for (const child of node.children) {\n                    if (child.tagName === 'tbody') {\n                        hasTbody = true\n                        break\n                    }\n                }\n\n                if (!hasTbody) {\n                    node.children = [{\n                        type: 'element',\n                        tagName: 'tbody',\n                        attrs: [],\n                        unary: false,\n                        children: node.children,\n                    }]\n                }\n            }\n        },\n        text(content) {\n            content = content.trim()\n            if (!content) return\n\n            stack.last().children.push({\n                type: 'text',\n                content,\n            })\n        },\n        comment(content) {\n            content = content.trim()\n\n            stack.last().children.push({\n                type: 'comment',\n                content,\n            })\n        },\n    })\n\n    return r.children\n}\n\nmodule.exports = {\n    tokenize,\n    parse,\n    voidMap,\n    blockMap,\n    inlineMap,\n    rawTextMap,\n}\n","const Element = require('../element')\nconst Location = require('../../bom/location')\nconst cache = require('../../util/cache')\nconst Pool = require('../../util/pool')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLAnchorElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLAnchorElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        this.$_protocol = 'http:'\n        this.$_hostname = ''\n        this.$_port = ''\n        this.$_pathname = '/'\n        this.$_search = ''\n        this.$_hash = ''\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_protocol = null\n        this.$_hostname = null\n        this.$_port = null\n        this.$_pathname = null\n        this.$_search = null\n        this.$_hash = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$_children.forEach(child => child.$$recycle())\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const href = node.href\n        if (href) html += ` href=\"${tool.escapeForHtmlGeneration(href)}\"`\n\n        const target = node.target\n        if (target) html += ` target=\"${tool.escapeForHtmlGeneration(target)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.href = node.href || ''\n        this.target = node.target || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            href: this.href,\n            target: this.target,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get href() {\n        return this.$_attrs.get('href')\n    }\n\n    set href(value) {\n        value = '' + value\n\n        if (value.indexOf('//') === -1) {\n            const {origin} = cache.getConfig()\n            value = origin + (value[0] === '/' ? value : `/${value}`)\n        }\n\n        this.$_attrs.set('href', value)\n        const {\n            protocol, hostname, port, pathname, search, hash\n        } = Location.$$parse(value)\n\n        this.$_protocol = protocol || this.$_protocol\n        this.$_hostname = hostname || this.$_hostname\n        this.$_port = port || ''\n        this.$_pathname = pathname || '/'\n        this.$_search = search || ''\n        this.$_hash = hash || ''\n    }\n\n    get protocol() {\n        return this.$_protocol\n    }\n\n    get hostname() {\n        return this.$_hostname\n    }\n\n    get port() {\n        return this.$_port\n    }\n\n    get pathname() {\n        return this.$_pathname\n    }\n\n    get search() {\n        return this.$_search\n    }\n\n    get hash() {\n        return this.$_hash\n    }\n\n    get target() {\n        return this.$_attrs.get('target')\n    }\n\n    set target(value) {\n        value = '' + value\n        this.$_attrs.set('target', value)\n    }\n}\n\nmodule.exports = HTMLAnchorElement\n","const Element = require('../element')\nconst Event = require('../../event/event')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass Image extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new Image(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_naturalWidth = 0\n        this.$_naturalHeight = 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的 $$destroy 方法\n     */\n    $$destroy() {\n        super.$$destroy()\n\n        this.$_naturalWidth = null\n        this.$_naturalHeight = null\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\n    }\n\n    /**\n     * 重置长宽\n     */\n    $_resetRect(rect = {}) {\n        this.$_naturalWidth = rect.width || 0\n        this.$_naturalHeight = rect.height || 0\n\n        this.$_initRect()\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get src() {\n        return this.$_attrs.get('src') || ''\n    }\n\n    set src(value) {\n        if (!value || typeof value !== 'string') return\n\n        this.$_attrs.set('src', value)\n\n        setTimeout(() => {\n            wx.getImageInfo({\n                src: this.src,\n                success: res => {\n                    // 加载成功，调整图片的宽高\n                    this.$_resetRect(res)\n\n                    // 触发 load 事件\n                    this.$$trigger('load', {\n                        event: new Event({\n                            name: 'load',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n                fail: () => {\n                    // 加载失败，调整图片的宽高\n                    this.$_resetRect({width: 0, height: 0})\n\n                    // 触发 error 事件\n                    this.$$trigger('error', {\n                        event: new Event({\n                            name: 'error',\n                            target: this,\n                            eventPhase: Event.AT_TARGET\n                        }),\n                        currentTarget: this,\n                    })\n                },\n            })\n        }, 0)\n    }\n\n    get width() {\n        return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('width', value)\n        this.$_initRect()\n    }\n\n    get height() {\n        return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        this.$_attrs.set('height', value)\n        this.$_initRect()\n    }\n\n    get naturalWidth() {\n        return this.$_naturalWidth\n    }\n\n    get naturalHeight() {\n        return this.$_naturalHeight\n    }\n}\n\nmodule.exports = Image\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLInputElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLInputElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const type = node.type\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\n\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        const maxlength = node.maxlength\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\n\n        const placeholder = node.placeholder\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder)}\"`\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.type = node.type || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.maxlength = node.maxlength\n        this.placeholder = node.placeholder || ''\n\n        // 特殊字段\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            type: this.type,\n            value: this.value,\n            disabled: this.disabled,\n            maxlength: this.maxlength,\n            placeholder: this.placeholder,\n\n            // 特殊字段\n            mpplaceholderclass: this.mpplaceholderclass,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        this.$_attrs.set('name', value)\n    }\n\n    get type() {\n        return this.$_attrs.get('type') || 'text'\n    }\n\n    set type(value) {\n        value = '' + value\n        this.$_attrs.set('type', value)\n    }\n\n    get value() {\n        const type = this.$_attrs.get('type')\n        const value = this.$_attrs.get('value')\n\n        if ((type === 'radio' || type === 'checkbox') && value === undefined) return 'on'\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get maxlength() {\n        return this.$_attrs.get('maxlength')\n    }\n\n    set maxlength(value) {\n        this.$_attrs.set('maxlength', value)\n    }\n\n    get placeholder() {\n        return this.$_attrs.get('placeholder') || ''\n    }\n\n    set placeholder(value) {\n        value = '' + value\n        this.$_attrs.set('placeholder', value)\n    }\n\n    get autofocus() {\n        return !!this.$_attrs.get('autofocus')\n    }\n\n    set autofocus(value) {\n        value = !!value\n        this.$_attrs.set('autofocus', value)\n    }\n\n    set checked(value) {\n        this.$_attrs.set('checked', value)\n    }\n\n    get checked() {\n        return this.$_attrs.get('checked') || ''\n    }\n\n    focus() {\n        this.$_attrs.set('focus', true)\n    }\n\n    blur() {\n        this.$_attrs.set('focus', false)\n    }\n}\n\nmodule.exports = HTMLInputElement\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLTextAreaElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLTextAreaElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\r\n     */\r\n    $$dealWithAttrsForGenerateHtml(html, node) {\r\n        const type = node.type\r\n        if (type) html += ` type=\"${tool.escapeForHtmlGeneration(type)}\"`\r\n\r\n        const value = node.value\r\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\r\n\r\n        const disabled = node.disabled\r\n        if (disabled) html += ' disabled'\r\n\r\n        const maxlength = node.maxlength\r\n        if (maxlength) html += ` maxlength=\"${tool.escapeForHtmlGeneration(maxlength)}\"`\r\n\r\n        const placeholder = node.placeholder\r\n        if (placeholder) html += ` placeholder=\"${tool.escapeForHtmlGeneration(placeholder.replace(/\"/g, '\\\\\"'))}\"`\r\n\r\n        return html\r\n    }\r\n\r\n    /**\r\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForOuterHTML(node) {\r\n        this.name = node.name || ''\r\n        this.type = node.type || ''\r\n        this.value = node.value || ''\r\n        this.disabled = !!node.disabled\r\n        this.maxlength = node.maxlength\r\n        this.placeholder = node.placeholder || ''\r\n\r\n        // 特殊字段\r\n        this.mpplaceholderclass = node.mpplaceholderclass || ''\r\n    }\r\n\r\n    /**\r\n     * 调用 cloneNode 接口时用于处理额外的属性\r\n     */\r\n    $$dealWithAttrsForCloneNode() {\r\n        return {\r\n            type: this.type,\r\n            value: this.value,\r\n            disabled: this.disabled,\r\n            maxlength: this.maxlength,\r\n            placeholder: this.placeholder,\r\n\r\n            // 特殊字段\r\n            mpplaceholderclass: this.mpplaceholderclass,\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get type() {\r\n        return this.$_attrs.get('type') || 'textarea'\r\n    }\r\n\r\n    set type(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('type', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get disabled() {\r\n        return !!this.$_attrs.get('disabled')\r\n    }\r\n\r\n    set disabled(value) {\r\n        value = !!value\r\n        this.$_attrs.set('disabled', value)\r\n    }\r\n\r\n    get maxlength() {\r\n        return this.$_attrs.get('maxlength')\r\n    }\r\n\r\n    set maxlength(value) {\r\n        this.$_attrs.set('maxlength', value)\r\n    }\r\n\r\n    get placeholder() {\r\n        return this.$_attrs.get('placeholder') || ''\r\n    }\r\n\r\n    set placeholder(value) {\r\n        value = '' + value\r\n        this.$_attrs.set('placeholder', value)\r\n    }\r\n\r\n    get autofocus() {\r\n        return !!this.$_attrs.get('autofocus')\r\n    }\r\n\r\n    set autofocus(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autofocus', value)\r\n    }\r\n\r\n    get selectionStart() {\r\n        const value = +this.$_attrs.get('selection-start')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionStart(value) {\r\n        this.$_attrs.set('selection-start', value)\r\n    }\r\n\r\n    get selectionEnd() {\r\n        const value = +this.$_attrs.get('selection-end')\r\n        return value !== undefined ? value : -1\r\n    }\r\n\r\n    set selectionEnd(value) {\r\n        this.$_attrs.set('selection-end', value)\r\n    }\r\n\r\n    focus() {\r\n        this.$_attrs.set('focus', true)\r\n    }\r\n\r\n    blur() {\r\n        this.$_attrs.set('focus', false)\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLTextAreaElement\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass HTMLVideoElement extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new HTMLVideoElement(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        const width = options.width\r\n        const height = options.height\r\n\r\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\r\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\r\n\r\n        super.$$init(options, tree)\r\n\r\n        this.$_initRect()\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 更新父组件树\r\n     */\r\n    $_triggerParentUpdate() {\r\n        this.$_initRect()\r\n        super.$_triggerParentUpdate()\r\n    }\r\n\r\n    /**\r\n     * 初始化长宽\r\n     */\r\n    $_initRect() {\r\n        const width = parseInt(this.$_attrs.get('width'), 10)\r\n        const height = parseInt(this.$_attrs.get('height'), 10)\r\n\r\n        if (typeof width === 'number' && width >= 0) this.$_style.width = `${width}px`\r\n        if (typeof height === 'number' && height >= 0) this.$_style.height = `${height}px`\r\n    }\r\n\r\n    /**\r\n     * 对外属性和方法\r\n     */\r\n    get src() {\r\n        return this.$_attrs.get('src') || ''\r\n    }\r\n\r\n    set src(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('src', value)\r\n    }\r\n\r\n    get width() {\r\n        return +this.$_attrs.get('width') || 0\r\n    }\r\n\r\n    set width(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('width', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get height() {\r\n        return +this.$_attrs.get('height') || 0\r\n    }\r\n\r\n    set height(value) {\r\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\r\n\r\n        this.$_attrs.set('height', value)\r\n        this.$_initRect()\r\n    }\r\n\r\n    get autoplay() {\r\n        return !!this.$_attrs.get('autoplay')\r\n    }\r\n\r\n    set autoplay(value) {\r\n        value = !!value\r\n        this.$_attrs.set('autoplay', value)\r\n    }\r\n\r\n    get loop() {\r\n        return !!this.$_attrs.get('loop')\r\n    }\r\n\r\n    set loop(value) {\r\n        value = !!value\r\n        this.$_attrs.set('loop', value)\r\n    }\r\n\r\n    get muted() {\r\n        return !!this.$_attrs.get('muted')\r\n    }\r\n\r\n    set muted(value) {\r\n        value = !!value\r\n        this.$_attrs.set('muted', value)\r\n    }\r\n\r\n    get controls() {\r\n        const value = this.$_attrs.get('controls')\r\n        return value !== undefined ? !!value : true\r\n    }\r\n\r\n    set controls(value) {\r\n        this.$_attrs.set('controls', value)\r\n    }\r\n\r\n    get poster() {\r\n        return this.$_attrs.get('poster')\r\n    }\r\n\r\n    set poster(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('poster', value)\r\n    }\r\n\r\n    get currentTime() {\r\n        return +this.$_attrs.get('currentTime') || 0\r\n    }\r\n\r\n    get buffered() {\r\n        return this.$_attrs.get('buffered')\r\n    }\r\n}\r\n\r\nmodule.exports = HTMLVideoElement\r\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass HTMLCanvasElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLCanvasElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        const width = options.width\n        const height = options.height\n\n        if (typeof width === 'number' && width >= 0) options.attrs.width = width\n        if (typeof height === 'number' && height >= 0) options.attrs.height = height\n\n        super.$$init(options, tree)\n\n        this.$_node = null\n\n        this.$_initRect()\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 准备 canvas 节点\n     */\n    $$prepare() {\n        return new Promise((resolve, reject) => {\n            this.$$getNodesRef().then(nodesRef => nodesRef.node(res => {\n                const {width, height} = this\n                this.$_node = res.node\n\n                // 设置 canvas 宽高\n                this.$_node.width = width\n                this.$_node.height = height\n\n                resolve(this)\n            }).exec()).catch(reject)\n        })\n    }\n\n    get $$node() {\n        return this.$_node\n    }\n\n    /**\n     * 更新父组件树\n     */\n    $_triggerParentUpdate() {\n        this.$_initRect()\n        super.$_triggerParentUpdate()\n    }\n\n    /**\n     * 初始化长宽\n     */\n    $_initRect() {\n        const width = parseInt(this.$_attrs.get('width'), 10)\n        const height = parseInt(this.$_attrs.get('height'), 10)\n\n        if (typeof width === 'number' && width >= 0) {\n            this.$_style.width = `${width}px`\n        }\n        if (typeof height === 'number' && height >= 0) {\n            this.$_style.height = `${height}px`\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        if (this.$_node) return this.$_node.width\n        else return +this.$_attrs.get('width') || 0\n    }\n\n    set width(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.width = value\n        else this.$_attrs.set('width', value)\n    }\n\n    get height() {\n        if (this.$_node) return this.$_node.height\n        else return +this.$_attrs.get('height') || 0\n    }\n\n    set height(value) {\n        if (typeof value !== 'number' || !isFinite(value) || value < 0) return\n\n        if (this.$_node) this.$_node.height = value\n        else this.$_attrs.set('height', value)\n    }\n\n    getContext(type) {\n        if (!this.$_node) {\n            console.warn('canvas is not prepared, please call $$prepare method first')\n            return\n        }\n        return this.$_node.getContext(type)\n    }\n\n    createPath2D(...args) {\n        return this.$_node.createPath2D(...args)\n    }\n\n    createImage(...args) {\n        return this.$_node.createImage(...args)\n    }\n\n    createImageData(...args) {\n        return this.$_node.createImageData(...args)\n    }\n\n    requestAnimationFrame(...args) {\n        return this.$_node.requestAnimationFrame(...args)\n    }\n\n    cancelAnimationFrame(...args) {\n        return this.$_node.cancelAnimationFrame(...args)\n    }\n\n    toDataURL(...args) {\n        return this.$_node.toDataURL(...args)\n    }\n}\n\nmodule.exports = HTMLCanvasElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLSelectElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLSelectElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n        this.$$resetOptions()\n    }\n\n    /**\n     * 重置 options 显示\n     */\n    $$resetOptions() {\n        const value = this.value\n\n        if (value !== undefined) {\n            this.options.forEach(child => child.$$updateSelected(child.value === value))\n        } else {\n            this.options.forEach((child, index) => child.$$updateSelected(index === 0))\n        }\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.escapeForHtmlGeneration(value)}\"`\n\n        const disabled = node.disabled\n        if (disabled) html += ' disabled'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.name = node.name || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selectedIndex = node.selectedIndex || 0\n    }\n\n    /**\n     * 调用 cloneNode 接口时用于处理额外的属性\n     */\n    $$dealWithAttrsForCloneNode() {\n        return {\n            value: this.value,\n            disabled: this.disabled,\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get name() {\n        return this.$_attrs.get('name')\n    }\n\n    set name(value) {\n        value = '' + value\n        return this.$_attrs.set('name', value)\n    }\n\n    get value() {\n        let value = this.$_attrs.get('value')\n        if (value === undefined) {\n            // 没有设置 value 的时候，取 options 中被选中那项的 value\n            const option = this.options.find(option => !!option.selected)\n            if (option) {\n                value = option.value\n                this.$$setAttributeWithoutUpdate('value', value)\n            }\n        }\n        return value\n    }\n\n    set value(value) {\n        value = '' + value\n\n        this.$_attrs.set('value', value)\n\n        // 同步更新 selectedIndex 属性\n        this.$_attrs.set('selectedIndex', this.options.findIndex(option => option.value === value))\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    get selectedIndex() {\n        return +this.$_attrs.get('selectedIndex')\n    }\n\n    set selectedIndex(value) {\n        value = +value\n\n        this.$_attrs.set('selectedIndex', value)\n\n        // 同步更新 value 属性\n        this.$_attrs.set('value', this.options[value] && this.options[value].value || '')\n\n        // 同步更新 options 的 selected\n        this.$$resetOptions()\n    }\n\n    get options() {\n        // 只考虑儿子节点中的 option\n        return this.$_children.filter(child => child.tagName === 'OPTION' && !child.disabled)\n    }\n}\n\nmodule.exports = HTMLSelectElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\nconst tool = require('../../util/tool')\n\nconst pool = new Pool()\n\nclass HTMLOptionElement extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new HTMLOptionElement(options, tree)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    /**\n     * 调用 $_generateHtml 接口时用于处理额外的属性，\n     */\n    $$dealWithAttrsForGenerateHtml(html, node) {\n        const value = node.value\n        if (value) html += ` value=\"${tool.tool.escapeForHtmlGeneration(value)}\"`\n\n        const label = node.label\n        if (label) html += ` label=\"${tool.tool.escapeForHtmlGeneration(label)}\"`\n\n        const selected = node.selected\n        if (selected) html += ' selected'\n\n        return html\n    }\n\n    /**\n     * 调用 outerHTML 的 setter 时用于处理额外的属性\n     */\n    $$dealWithAttrsForOuterHTML(node) {\n        this.label = node.label || ''\n        this.value = node.value || ''\n        this.disabled = !!node.disabled\n        this.selected = !!node.selected\n    }\n\n    /**\n     * 更新 selected，不触发 select 的更新\n     */\n    $$updateSelected(value) {\n        value = !!value\n        this.$_attrs.set('selected', value)\n    }\n\n    get label() {\n        return this.$_attrs.get('label') || this.textContent\n    }\n\n    set label(value) {\n        value = '' + value\n        this.$_attrs.set('label', value)\n    }\n\n    get value() {\n        const value = this.$_attrs.get('value')\n        return value !== undefined ? value : this.label\n    }\n\n    set value(value) {\n        value = '' + value\n        this.$_attrs.set('value', value)\n    }\n\n    get disabled() {\n        return !!this.$_attrs.get('disabled')\n    }\n\n    set disabled(value) {\n        value = !!value\n        this.$_attrs.set('disabled', value)\n    }\n\n    set selected(value) {\n        this.$$updateSelected(value)\n\n        // 同步更新 select 的 selectedIndex 和 value，只考虑父亲节点中 select\n        const parentNode = this.parentNode\n        if (parentNode && parentNode.tagName === 'SELECT') {\n            parentNode.value = this.value\n        }\n    }\n\n    get selected() {\n        return !!this.$_attrs.get('selected')\n    }\n}\n\nmodule.exports = HTMLOptionElement\n","const Element = require('../element')\nconst Pool = require('../../util/pool')\nconst cache = require('../../util/cache')\n\nconst pool = new Pool()\n\nclass NotSupport extends Element {\n    /**\n     * 创建实例\n     */\n    static $$create(options, tree) {\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            const instance = pool.get()\n\n            if (instance) {\n                instance.$$init(options, tree)\n                return instance\n            }\n        }\n\n        return new NotSupport(options, tree)\n    }\n\n    /**\n     * 覆写父类的 $$init 方法\n     */\n    $$init(options, tree) {\n        super.$$init(options, tree)\n\n        // 处理特殊节点\n        const window = cache.getWindow(this.$_pageId)\n        if (window.onDealWithNotSupportDom) window.onDealWithNotSupportDom(this)\n    }\n\n    /**\n     * 覆写父类的回收实例方法\n     */\n    $$recycle() {\n        this.$$destroy()\n\n        const config = cache.getConfig()\n\n        if (config.optimization.elementMultiplexing) {\n            // 复用 element 节点\n            pool.add(this)\n        }\n    }\n\n    get behavior() {\n        return 'not-support'\n    }\n}\n\nmodule.exports = NotSupport\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\nconst tool = require('../../util/tool')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_attrs.get('behavior') || ''\r\n    }\r\n\r\n    set behavior(value) {\r\n        if (!value || typeof value !== 'string') return\r\n\r\n        this.$_attrs.set('behavior', value)\r\n    }\r\n\r\n    get value() {\r\n        return this.$_attrs.get('value')\r\n    }\r\n\r\n    set value(value) {\r\n        this.$_attrs.set('value', value)\r\n    }\r\n\r\n    get scrollTop() {\r\n        return this.$_attrs.get('scroll-top') || 0\r\n    }\r\n\r\n    set scrollTop(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-top', value)\r\n        }\r\n    }\r\n\r\n    get scrollLeft() {\r\n        return this.$_attrs.get('scroll-left') || 0\r\n    }\r\n\r\n    set scrollLeft(value) {\r\n        value = parseInt(value, 10)\r\n\r\n        if (!isNaN(value)) {\r\n            this.$_attrs.set('scroll-left', value)\r\n        }\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        super.setAttribute(name, value)\r\n\r\n        if (name === 'scroll-into-view') {\r\n            // TODO：scroll-into-view 先转成 scroll-top 来处理，等基础库支持\r\n            tool.flushThrottleCache() // 先清空 setData\r\n            Promise.resolve().then(() => {\r\n                const scrollItem = this.ownerDocument.getElementById(value)\r\n                if (!scrollItem) return\r\n\r\n                const propName = this.getAttribute('scroll-x') ? 'scroll-left' : this.getAttribute('scroll-y') ? 'scroll-top' : ''\r\n                if (!propName) return\r\n\r\n                const window = cache.getWindow(this.$_pageId)\r\n                Promise.all([\r\n                    new Promise(resolve => window.$$createSelectorQuery().select(`.miniprogram-root >>> .node-${this.$_nodeId}`).fields({rect: true, scrollOffset: true}).exec(resolve)),\r\n                    scrollItem.$$getBoundingClientRect()\r\n                ]).then(res => {\r\n                    const rectName = propName === 'scroll-left' ? 'left' : 'top'\r\n                    const scrollRect = res[0][0]\r\n                    const itemRect = res[1]\r\n\r\n                    super.setAttribute(propName, itemRect[rectName] - scrollRect[rectName] + scrollRect[tool.toCamel(propName)])\r\n                }).catch(console.error)\r\n            }).catch(console.error)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxComponent\r\n","const Element = require('../element')\r\nconst Pool = require('../../util/pool')\r\nconst cache = require('../../util/cache')\r\n\r\nconst pool = new Pool()\r\n\r\nclass WxCustomComponent extends Element {\r\n    /**\r\n     * 创建实例\r\n     */\r\n    static $$create(options, tree) {\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            const instance = pool.get()\r\n\r\n            if (instance) {\r\n                instance.$$init(options, tree)\r\n                return instance\r\n            }\r\n        }\r\n\r\n        return new WxCustomComponent(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$init 方法\r\n     */\r\n    $$init(options, tree) {\r\n        this.$_behavior = options.componentName\r\n\r\n        super.$$init(options, tree)\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的 $$destroy 方法\r\n     */\r\n    $$destroy() {\r\n        super.$$destroy()\r\n\r\n        this.$_behavior = null\r\n    }\r\n\r\n    /**\r\n     * 覆写父类的回收实例方法\r\n     */\r\n    $$recycle() {\r\n        this.$$destroy()\r\n\r\n        const config = cache.getConfig()\r\n\r\n        if (config.optimization.elementMultiplexing) {\r\n            // 复用 element 节点\r\n            pool.add(this)\r\n        }\r\n    }\r\n\r\n    get behavior() {\r\n        return this.$_behavior\r\n    }\r\n\r\n    setAttribute(name, value) {\r\n        if (name.indexOf('kbone-func-') === 0) {\r\n            // 特殊属性，用于传入函数\r\n            const realName = name.slice('kbone-func-'.length)\r\n            if (typeof value === 'function') {\r\n                super.setAttribute(realName, value)\r\n            } else {\r\n                const window = cache.getWindow(this.$_pageId)\r\n                super.setAttribute(realName, window[value])\r\n            }\r\n        } else {\r\n            super.setAttribute(name, value)\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = WxCustomComponent\r\n","const Location = require('./location')\nconst cache = require('../util/cache')\n\nclass Cookie {\n    constructor(pageName) {\n        const config = cache.getConfig()\n        const runtime = config.runtime || {}\n        this.cookieStore = runtime.cookieStore\n        this.$_pageName = pageName\n\n        if (this.cookieStore !== 'storage' && this.cookieStore !== 'memory') {\n            // 需要全局共享\n            this.$_map = cache.getCookie()\n        } else {\n            this.$_map = {} // 三维数组，domain - path - key\n        }\n    }\n\n    static parse(cookieStr) {\n        if (!cookieStr && typeof cookieStr !== 'string') return null\n\n        cookieStr = cookieStr.trim().split(';')\n\n        // key-value\n        const parseKeyValue = /^([^=;\\x00-\\x1F]+)=([^;\\n\\r\\0\\x00-\\x1F]*).*/.exec(cookieStr.shift())\n        if (!parseKeyValue) return null\n\n        const key = (parseKeyValue[1] || '').trim()\n        const value = (parseKeyValue[2] || '').trim()\n\n        // 其他字段\n        let path = null\n        let domain = null\n        let expires = null\n        let maxAge = null\n        let secure = false\n        let httpOnly = false\n\n        for (let item of cookieStr) {\n            item = item.trim()\n            if (!item) continue\n\n            let [key, value] = item.split('=')\n            key = (key || '').trim().toLowerCase()\n            value = (value || '').trim()\n\n            if (!key) continue\n\n            switch (key) {\n            case 'path':\n                if (value[0] === '/') path = value\n                break\n            case 'domain':\n                value = value.replace(/^\\./, '').toLowerCase()\n                if (value) domain = value\n                break\n            case 'expires':\n                if (value) {\n                    const timeStamp = Date.parse(value)\n                    if (timeStamp) expires = timeStamp\n                }\n                break\n            case 'max-age':\n                if (/^-?[0-9]+$/.test(value)) maxAge = +value * 1000\n                break\n            case 'secure':\n                secure = true\n                break\n            case 'httponly':\n                httpOnly = true\n                break\n            default:\n                // ignore\n                break\n            }\n        }\n\n        return {\n            key, value, path, domain, expires, maxAge, secure, httpOnly\n        }\n    }\n\n    /**\n     * 判断 domain\n     */\n    $_checkDomain(host, cookieDomain) {\n        if (host === cookieDomain) return true\n\n        const index = host.indexOf(`.${cookieDomain}`)\n\n        return index > 0 && cookieDomain.length + index + 1 === host.length\n    }\n\n    /**\n     * 判断 path\n     */\n    $_checkPath(path, cookiePath) {\n        if (path === cookiePath) return true\n\n        cookiePath = cookiePath === '/' ? '' : cookiePath\n        return path.indexOf(`${cookiePath}/`) === 0\n    }\n\n    /**\n     * 判断过期\n     */\n    $_checkExpires(cookie) {\n        const now = Date.now()\n\n        // maxAge 优先\n        if (cookie.maxAge !== null) return cookie.createTime + cookie.maxAge > now\n\n        // 判断 expires\n        if (cookie.expires !== null) return cookie.expires > now\n\n        return true\n    }\n\n    /**\n     * 设置 cookie\n     */\n    setCookie(cookie, url) {\n        cookie = Cookie.parse(cookie)\n\n        if (!cookie) return\n\n        const {hostname, port, pathname} = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n\n        if (cookie.domain) {\n            // 判断 domain\n            if (!this.$_checkDomain(host, cookie.domain)) return\n        } else {\n            // 使用 host 作为默认的 domain\n            cookie.domain = host\n        }\n\n        // 需要设置 path 字段的情况，取 url 中除去最后一节的 path\n        if (!cookie.path || cookie.path[0] !== '/') {\n            const lastIndex = path.lastIndexOf('/')\n\n            cookie.path = lastIndex === 0 ? path : path.substr(0, lastIndex)\n        }\n\n        // 存入 cookie\n        const map = this.$_map\n        const cookieDomain = cookie.domain\n        const cookiePath = cookie.path\n        const cookieKey = cookie.key\n\n        if (!map[cookieDomain]) map[cookieDomain] = {}\n        if (!map[cookieDomain][cookiePath]) map[cookieDomain][cookiePath] = {}\n\n        const oldCookie = map[cookieDomain][cookiePath][cookieKey]\n        cookie.createTime = oldCookie && oldCookie.createTime || Date.now()\n\n        if (this.$_checkExpires(cookie)) {\n            // 未过期\n            map[cookieDomain][cookiePath][cookieKey] = cookie\n        } else if (oldCookie) {\n            // 存在旧 cookie，且被设置为已过期\n            delete map[cookieDomain][cookiePath][cookieKey]\n        }\n\n        // 持久化 cookie\n        if (this.cookieStore !== 'memory' && this.cookieStore !== 'globalmemory') {\n            const key = this.cookieStore === 'storage' ? `PAGE_COOKIE_${this.$_pageName}` : 'PAGE_COOKIE'\n            wx.setStorage({\n                key,\n                data: this.serialize(),\n            })\n        }\n    }\n\n    /**\n     * 拉取 cookie\n     */\n    getCookie(url, includeHttpOnly) {\n        const {\n            protocol, hostname, port, pathname\n        } = Location.$$parse(url)\n        const host = ((hostname || '') + (port ? ':' + port : '')) || ''\n        const path = (pathname || '')[0] === '/' ? pathname : '/'\n        const res = []\n\n        const map = this.$_map\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            // 判断 domain\n            if (this.$_checkDomain(host, domainItem)) {\n                const domainMap = map[domainItem] || {}\n                const pathList = Object.keys(domainMap)\n\n                for (const pathItem of pathList) {\n                    // 判断 path\n                    if (this.$_checkPath(path, pathItem)) {\n                        const pathMap = map[domainItem][pathItem] || {}\n\n                        Object.keys(pathMap).forEach(key => {\n                            const cookie = pathMap[key]\n\n                            if (!cookie) return\n\n                            // 判断协议\n                            if (cookie.secure && protocol !== 'https:' && protocol !== 'wss:') return\n                            if (!includeHttpOnly && cookie.httpOnly && protocol && protocol !== 'http:') return\n\n                            // 判断过期\n                            if (this.$_checkExpires(cookie)) {\n                                res.push(cookie)\n                            } else {\n                                // 过期，删掉\n                                delete map[domainItem][pathItem][key]\n                            }\n                        })\n                    }\n                }\n            }\n        }\n\n        return res\n            .sort((a, b) => {\n                const gap = a.createTime - b.createTime\n\n                if (!gap) {\n                    return a.key < b.key ? -1 : 1\n                } else {\n                    return gap\n                }\n            })\n            .map(cookie => `${cookie.key}=${cookie.value}`)\n            .join('; ')\n    }\n\n    /**\n     * 序列化\n     */\n    serialize() {\n        try {\n            return JSON.stringify(this.$_map)\n        } catch (err) {\n            console.log('cannot serialize the cookie')\n            return ''\n        }\n    }\n\n    /**\n     * 反序列化\n     */\n    deserialize(str) {\n        let map = {}\n        try {\n            map = JSON.parse(str)\n        } catch (err) {\n            console.log('cannot deserialize the cookie')\n            map = {}\n        }\n\n        // 合并 cookie\n        const domainList = Object.keys(map)\n\n        for (const domainItem of domainList) {\n            const domainMap = map[domainItem] || {}\n            const pathList = Object.keys(domainMap)\n\n            for (const pathItem of pathList) {\n                const pathMap = map[domainItem][pathItem] || {}\n\n                Object.keys(pathMap).forEach(key => {\n                    const cookie = pathMap[key]\n\n                    if (!cookie) return\n\n                    // 已存在则不覆盖\n                    if (!this.$_map[domainItem]) this.$_map[domainItem] = {}\n                    if (!this.$_map[domainItem][pathItem]) this.$_map[domainItem][pathItem] = {}\n                    if (!this.$_map[domainItem][pathItem][key]) this.$_map[domainItem][pathItem][key] = cookie\n                })\n            }\n        }\n    }\n}\n\nmodule.exports = Cookie\n","class Navigator {\n    constructor() {\n        this.$_language = ''\n        this.$_wxVersion = ''\n        this.$_brand = '' // 手机品牌\n        this.$_model = '' // 手机型号\n        this.$_platform = ''\n        this.$_system = '' // 操作系统版本\n\n        this.$_userAgent = ''\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_language = info.language\n        this.$_wxVersion = info.version\n        this.$_brand = info.brand\n        this.$_model = info.model\n        this.$_platform = info.platform\n        this.$_system = info.system\n\n        // 拼装 userAgent\n        const appVersion = '5.0'\n        const appleWebKitVersion = '602.3.12'\n        let platformContext\n        if (this.$_platform === 'ios') {\n            // 拆分系统版本号\n            let systemVersion = this.$_system.split(' ')\n            if (systemVersion.length >= 2) {\n                systemVersion = systemVersion[1].split('.').join('_')\n            } else {\n                systemVersion = ''\n            }\n\n            platformContext = `${this.$_brand}; CPU ${this.$_brand} OS ${systemVersion} like Mac OS X`\n        } else if (this.$_platform === 'android') {\n            platformContext = `Linux; ${this.$_system}; ${this.$_model}`\n        } else {\n            // 在开发者工具上，默认在 windows x64 上运行\n            platformContext = 'Windows NT 6.1; win64; x64'\n        }\n\n        this.$_userAgent = `${this.appCodeName}/${appVersion} (${platformContext}) AppleWebKit/${appleWebKitVersion} (KHTML, like Gecko) Mobile MicroMessenger/${this.$_wxVersion} Language/${this.language}`\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get userAgent() {\n        return this.$_userAgent\n    }\n\n    get appCodeName() {\n        return 'Mozilla'\n    }\n\n    get appName() {\n        return 'Netscape'\n    }\n\n    get language() {\n        return this.$_language\n    }\n\n    get languages() {\n        return [this.$_language]\n    }\n\n    get platform() {\n        return this.$_platform\n    }\n\n    get product() {\n        return 'Gecko'\n    }\n}\n\nmodule.exports = Navigator\n","const EventTarget = require('../event/event-target')\n\nclass Screen extends EventTarget {\n    constructor() {\n        super()\n\n        this.$_width = 0\n        this.$_height = 0\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset(info) {\n        this.$_width = info.screenWidth\n        this.$_height = info.screenHeight\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get width() {\n        return this.$_width\n    }\n\n    get height() {\n        return this.$_height\n    }\n}\n\nmodule.exports = Screen\n","/**\n * 暂不维护跳转后页面的历史，不做页面刷新的操作\n */\nconst Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nclass History extends EventTarget {\n    constructor(location) {\n        super()\n\n        this.$_location = location\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: location.href,\n        }]\n        this.$_currentIndex = 0\n\n        this.$_location.addEventListener('$_addToHistory', evt => {\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n            this.$_stack.push({\n                state: null,\n                title: '',\n                url: evt.href\n            })\n        })\n    }\n\n    /**\n     * 检查是否同源\n     */\n    $_checkOrigin(url) {\n        const {protocol, hostname, port} = Location.$$parse(url)\n\n        return (!protocol || this.$_location.protocol === protocol) && (!hostname || this.$_location.hostname === hostname) && ((!hostname && !port) || this.$_location.port === port)\n    }\n\n    /**\n     * 重置实例\n     */\n    $$reset() {\n        this.$_stack = [{\n            state: null,\n            title: '',\n            url: this.$_location.href,\n        }]\n        this.$_currentIndex = 0\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get state() {\n        const current = this.$_stack[this.$_currentIndex]\n        return current && current.state || null\n    }\n\n    get length() {\n        return this.$_stack.length\n    }\n\n    back() {\n        this.go(-1)\n    }\n\n    forward() {\n        this.go(1)\n    }\n\n    go(delta) {\n        if (typeof delta === 'number') {\n            const next = this.$_currentIndex + delta\n\n            if (next >= 0 && next < this.$_stack.length && this.$_currentIndex !== next) {\n                this.$_currentIndex = next\n                // 替换 href，但不做跳转（理论上此处应该做跳转，但是在小程序环境里不适合）\n                this.$_location.$$startCheckHash()\n                this.$_location.$$setHrefWithoutCheck(this.$_stack[this.$_currentIndex].url)\n                this.$_location.$$endCheckHash(true) // 因为不跳转，所以要强制触发 hashchange 检测\n\n                this.$$trigger('popstate', {\n                    event: {\n                        state: this.state\n                    }\n                })\n            }\n        } else {\n            // 刷新当前页面\n            this.$_location.reload()\n        }\n    }\n\n    pushState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n\n            this.$_currentIndex++\n            this.$_stack = this.$_stack.slice(0, this.$_currentIndex)\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.push({state, title, url: this.$_location.href})\n        }\n    }\n\n    replaceState(state = null, title, url) {\n        if (!url || typeof url !== 'string') return\n\n        if (this.$_checkOrigin(url)) {\n            // 同源才允许操作\n            if (title && typeof title === 'string') {\n                // 设置标题\n                wx.setNavigationBarTitle({title})\n            }\n\n            // 替换 href，但不做跳转\n            this.$_location.$$setHrefWithoutCheck(url)\n\n            this.$_stack.splice(this.$_currentIndex, 1, {state, title, url: this.$_location.href})\n        }\n    }\n}\n\nmodule.exports = History\n","const cache = require('../util/cache')\n\nlet pageUrlRouteMap = null\n\nclass Miniprogram {\n    constructor(pageId) {\n        this.$_pageId = pageId\n        this.$_pageUrl = '' // 页面真实 url\n        this.$_subpackagesMap = {} // 分包名映射表\n    }\n\n    get window() {\n        return cache.getWindow(this.$_pageId) || null\n    }\n\n    get document() {\n        return cache.getDocument(this.$_pageId) || null\n    }\n\n    get config() {\n        return cache.getConfig()\n    }\n\n    get subpackagesMap() {\n        return this.$_subpackagesMap\n    }\n\n    /**\n     * 初始化\n     */\n    init(url) {\n        if (typeof url === 'string') this.$_pageUrl = url // 设置真实 url\n        const {\n            origin, entry, router, runtime = {}\n        } = cache.getConfig()\n        const subpackagesMap = runtime.subpackagesMap || {}\n\n        this.$_pageUrl = this.$_pageUrl || (origin + entry)\n        this.$_subpackagesMap = subpackagesMap\n        this.window.location.$$reset(this.$_pageUrl)\n        this.window.history.$$reset()\n\n        if (!pageUrlRouteMap) {\n            // 需要初始化页面 url - 小程序页面路由映射表\n            pageUrlRouteMap = {}\n\n            Object.keys(router).forEach(pageName => {\n                const regexpList = []\n\n                router[pageName].forEach(pathObj => {\n                    // 构造正则表达式\n                    const regexp = new RegExp(pathObj.regexp, pathObj.options)\n                    regexpList.push(regexp)\n                })\n\n                // 将每个页面的路由改造成函数，方便后续做匹配用\n                pageUrlRouteMap[pageName] = pathname => {\n                    for (const regexp of regexpList) {\n                        const parseRes = regexp.exec(pathname)\n                        regexp.lastIndex = 0\n\n                        if (parseRes) {\n                            // 匹配成功\n                            const packageName = subpackagesMap[pageName]\n                            return `/${packageName ? packageName + '/' : ''}pages/${pageName}/index`\n                        }\n                    }\n\n                    return null\n                }\n            })\n        }\n    }\n\n    /**\n     * 需要匹配对应路由的 route\n     */\n    getMatchRoute(pathname) {\n        const keys = Object.keys(pageUrlRouteMap)\n        for (const key of keys) {\n            const matchRes = pageUrlRouteMap[key](pathname)\n\n            if (matchRes) return matchRes // 匹配成功\n        }\n\n        return null\n    }\n\n    /**\n     * 判断是否 tabBar 页面\n     */\n    isTabBarPage(pageRoute) {\n        const {\n            runtime = {}\n        } = cache.getConfig()\n        const tabBarMap = runtime.tabBarMap || {}\n        return !!tabBarMap[pageRoute]\n    }\n}\n\nmodule.exports = Miniprogram\n","const Event = require('../event/event')\nconst cache = require('../util/cache')\n\nclass Storage {\n    constructor(window) {\n        this.$_window = window\n        this.$_keys = []\n    }\n\n    /**\n     * 触发 window 的 storage 事件\n     */\n    $_triggerStorage(key, newValue, oldValue, force) {\n        if (!force && newValue === oldValue) return\n\n        const windowList = cache.getWindowList() || []\n        windowList.forEach(window => {\n            if (window && window !== this.$_window) {\n                window.$$trigger('storage', {\n                    event: new Event({\n                        name: 'storage',\n                        target: window,\n                        $$extra: {\n                            key,\n                            newValue,\n                            oldValue,\n                            storageArea: this,\n                            url: this.$_window.location.href,\n                        }\n                    })\n                })\n            }\n        })\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get length() {\n        return this.$_keys && this.$_keys.length || 0\n    }\n\n    key(num) {\n        if (typeof num !== 'number' || !isFinite(num) || num < 0) return null\n        return this.$_keys[num] || null\n    }\n}\n\nclass SessionStorage extends Storage {\n    constructor(window) {\n        super(window)\n        this.$_map = {}\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n        return this.$_map[key] || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = this.$_map[key] || null\n        this.$_map[key] = data\n\n        // 调整顺序\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n        this.$_keys.push(key)\n\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = this.$_map[key] || null\n        delete this.$_map[key]\n\n        // 删除 key\n        const index = this.$_keys.indexOf(key)\n        if (index >= 0) this.$_keys.splice(index, 1)\n\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        this.$_map = {}\n        this.$_keys.length = 0\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nclass LocalStorage extends Storage {\n    /**\n     * 更新 storage 信息\n     */\n    $_updateInfo() {\n        try {\n            const info = wx.getStorageInfoSync()\n            const windowList = cache.getWindowList() || []\n            windowList.forEach(window => {\n                if (window) {\n                    window.localStorage.$$keys = info.keys\n                }\n            })\n        } catch (err) {\n            console.warn('getStorageInfoSync fail')\n        }\n    }\n\n    set $$keys(keys) {\n        this.$_keys = keys\n    }\n\n    /**\n     * 对外属性和方法\n     */\n\n    getItem(key) {\n        if (!key || typeof key !== 'string') return null\n\n        return wx.getStorageSync(key) || null\n    }\n\n    setItem(key, data) {\n        if (!key || typeof key !== 'string') return\n        data = '' + data\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.setStorageSync(key, data)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, data, oldValue)\n    }\n\n    removeItem(key) {\n        if (!key || typeof key !== 'string') return\n\n        const oldValue = wx.getStorageSync(key) || null\n\n        wx.removeStorageSync(key)\n        this.$_updateInfo()\n        this.$_triggerStorage(key, null, oldValue)\n    }\n\n    clear() {\n        wx.clearStorageSync()\n        this.$_updateInfo()\n        this.$_triggerStorage(null, null, null, true)\n    }\n}\n\nmodule.exports = {\n    SessionStorage,\n    LocalStorage,\n}\n","/**\n * 受限于小程序环境，不支持 data url 和 options 参数\n */\nconst Event = require('../event/event')\nconst EventTarget = require('../event/event-target')\nconst cache = require('../util/cache')\n\nlet wxWorker = null\nlet wxWorkerPath = null\nlet callbackList = []\nlet sharedWorkerInstCount = 0\nconst workerMap = {}\nconst sharedWorkerMap = {}\n\n/**\n * 获取 worker 所在目录\n */\nfunction getWorkersDir() {\n    const config = cache.getConfig()\n    const generate = config.generate\n    return generate && generate.worker\n}\n\n/**\n * 获取 worker 路径\n */\nfunction getWorkerUrl(url) {\n    const fileName = url.split('/').pop()\n    return getWorkersDir() + '/' + fileName\n}\n\n/**\n * 监听 worker 消息回调\n */\nfunction onWorkerMessage(worker, callback) {\n    callbackList.push(callback)\n    if (!worker._hasRegisterCb) {\n        worker.onMessage(res => {\n            callbackList.forEach(func => func(res))\n        })\n        worker._hasRegisterCb = true\n    }\n}\n\nclass Worker extends EventTarget {\n    constructor(url, window, isSharedWorker) {\n        super()\n\n        const filePath = getWorkerUrl(url)\n\n        if (wxWorker) {\n            // 小程序只允许创建一个 worker 实例\n            if (!isSharedWorker || (filePath !== wxWorkerPath)) throw new Error('exceed max concurrent workers limit')\n        }\n\n        this.$_pageId = window.$_pageId\n        this.isSharedWorker = isSharedWorker\n        wxWorkerPath = filePath\n        wxWorker = wxWorker || this.$_tryCatch(() => wx.createWorker(wxWorkerPath))\n\n        if (wxWorker) {\n            this.$_onMessage = res => {\n                if (res.type === 'message' && res.pageId === this.$_pageId) {\n                    this.$$trigger('message', {\n                        event: new Event({\n                            name: 'message',\n                            target: this,\n                            $$extra: {\n                                data: res.data,\n                            },\n                        })\n                    })\n                }\n            }\n            onWorkerMessage(wxWorker, this.$_onMessage)\n\n            const navigator = {}\n            const location = {}\n            if (window && !isSharedWorker) {\n                ['userAgent', 'appCodeName', 'appName', 'language', 'languages', 'platform', 'product'].forEach(key => navigator[key] = window.navigator[key]);\n                ['protocol', 'host', 'hostname', 'port', 'origin', 'pathname', 'search', 'hash', 'href'].forEach(key => location[key] = window.location[key])\n            }\n            this.$_tryCatch(() => wxWorker.postMessage({\n                type: 'connect', pageId: this.$_pageId, navigator, location\n            }))\n        }\n\n        if (!this.isSharedWorker) workerMap[this.$_pageId] = this\n    }\n\n    /**\n     * 处理方法的 try catch 调用\n     */\n    $_tryCatch(func) {\n        try {\n            return func.call(this)\n        } catch (error) {\n            console.error(error)\n            this.$$trigger('error', {\n                event: new Event({\n                    name: 'error',\n                    target: this,\n                    $$extra: {\n                        error,\n                        message: error.message || '',\n                        filename: wxWorkerPath,\n                    }\n                })\n            })\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    postMessage(data) {\n        if (this.$_pageId && wxWorker) this.$_tryCatch(() => wxWorker.postMessage({type: 'message', pageId: this.$_pageId, data}))\n    }\n\n    terminate() {\n        if (this.$_pageId && wxWorker) {\n            this.$_pageId = null\n            if (!this.isSharedWorker) delete workerMap[this.$_pageId]\n            this.$_tryCatch(() => wxWorker.terminate())\n            wxWorker = null\n            wxWorkerPath = null\n            callbackList = []\n        }\n    }\n}\n\nclass SharedWorker extends EventTarget {\n    constructor(url, window) {\n        super()\n\n        const pageId = window.$_pageId\n        this.$_worker = new Worker(url, window, true)\n        this.$_worker.close = () => {\n            sharedWorkerInstCount--\n            callbackList.splice(callbackList.indexOf(this.$_worker.$_onMessage), 1)\n            if (!sharedWorkerInstCount) this.$_worker.terminate()\n            if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].splice(sharedWorkerMap[pageId].indexOf(this), 1)\n        }\n        this.$_worker.start = () => {}\n        sharedWorkerInstCount++\n        sharedWorkerMap[pageId] = sharedWorkerMap[pageId] || []\n        sharedWorkerMap[pageId].push(this)\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get port() {\n        return this.$_worker\n    }\n}\n\n/**\n * 页面删除\n */\nfunction destroy(pageId) {\n    if (sharedWorkerMap[pageId]) sharedWorkerMap[pageId].forEach(sharedWorker => sharedWorker.port.close())\n    sharedWorkerMap[pageId] = null\n    if (workerMap[pageId]) workerMap[pageId].terminate()\n    workerMap[pageId] = null\n}\n\n\nmodule.exports = {\n    Worker,\n    SharedWorker,\n    destroy,\n}\n","class Performance {\n    constructor(timeOrigin) {\n        this.$_timeOrigin = timeOrigin\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get navigation() {\n        console.warn('performance.navigation is not supported')\n        return null\n    }\n\n    get timing() {\n        console.warn('performance.timing is not supported')\n        return null\n    }\n\n    get timeOrigin() {\n        return this.$_timeOrigin\n    }\n\n    now() {\n        return +new Date() - this.$_timeOrigin\n    }\n}\n\nmodule.exports = Performance\n","const Location = require('./location')\nconst EventTarget = require('../event/event-target')\n\nconst SUPPORT_METHOD = ['OPTIONS', 'GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'TRACE', 'CONNECT']\nconst STATUS_TEXT_MAP = {\n    100: 'Continue',\n    101: 'Switching protocols',\n\n    200: 'OK',\n    201: 'Created',\n    202: 'Accepted',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    405: 'Method Not Allowed',\n    406: 'Not Acceptable',\n    407: 'Proxy Authentication Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Large',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Suitable',\n    417: 'Expectation Failed',\n\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported',\n}\n\nclass XMLHttpRequest extends EventTarget {\n    constructor(window) {\n        super()\n\n        this.$_window = window\n        this.$_method = ''\n        this.$_url = ''\n        this.$_data = null\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.UNSENT\n        this.$_header = {\n            Accept: '*/*'\n        }\n        this.$_responseType = ''\n        this.$_resHeader = null\n        this.$_response = null\n        this.$_timeout = 0\n        this.$_startTime = null\n        this.$_withCredentials = true // 向前兼容，默认为 true\n\n        this.$_requestTask = null\n        this.$_requestSuccess = this.$_requestSuccess.bind(this)\n        this.$_requestFail = this.$_requestFail.bind(this)\n        this.$_requestComplete = this.$_requestComplete.bind(this)\n    }\n\n    /**\n     * readyState 变化\n     */\n    $_callReadyStateChange(readyState) {\n        const hasChange = readyState !== this.$_readyState\n        this.$_readyState = readyState\n\n        if (hasChange) this.$$trigger('readystatechange')\n    }\n\n    /**\n     * 执行请求\n     */\n    $_callRequest() {\n        if (!this.$_window || !this.$_window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        if (this.$_timeout) {\n            this.$_startTime = +new Date()\n\n            setTimeout(() => {\n                if (!this.$_status && this.$_readyState !== XMLHttpRequest.DONE) {\n                    // 超时\n                    if (this.$_requestTask) this.$_requestTask.abort()\n                    this.$_callReadyStateChange(XMLHttpRequest.DONE)\n                    this.$$trigger('timeout')\n                }\n            }, this.$_timeout)\n        }\n\n        // 重置各种状态\n        this.$_status = 0\n        this.$_statusText = ''\n        this.$_readyState = XMLHttpRequest.OPENED\n        this.$_resHeader = null\n        this.$_response = null\n\n        // 补完 url\n        let url = this.$_url\n        url = url.indexOf('//') === -1 ? this.$_window.location.origin + url : url\n\n        // 头信息\n        const header = Object.assign({}, this.$_header)\n        header.cookie = this.$_window.document.$$cookie\n        if (!this.withCredentials) {\n            // 不同源，要求 withCredentials 为 true 才携带 cookie\n            const {origin} = Location.$$parse(url)\n            if (origin !== this.$_window.location.origin) delete header.cookie\n        }\n\n        this.$_requestTask = wx.request({\n            url,\n            data: this.$_data || {},\n            header,\n            method: this.$_method,\n            dataType: this.$_responseType === 'json' ? 'json' : 'text',\n            responseType: this.$_responseType === 'arraybuffer' ? 'arraybuffer' : 'text',\n            success: this.$_requestSuccess,\n            fail: this.$_requestFail,\n            complete: this.$_requestComplete,\n        })\n    }\n\n    /**\n     * 请求成功\n     */\n    $_requestSuccess({data, statusCode, header}) {\n        if (!this.$_window || !this.$_window.document) {\n            console.warn('this page has been unloaded, so this request will be canceled.')\n            return\n        }\n\n        this.$_status = statusCode\n        this.$_resHeader = header\n\n        this.$_callReadyStateChange(XMLHttpRequest.HEADERS_RECEIVED)\n\n        // 处理 set-cookie\n        if (this.$_window) {\n            const setCookie = header['Set-Cookie']\n\n            if (setCookie && typeof setCookie === 'string') {\n                this.$_window.document.$$setCookie(setCookie)\n            }\n        }\n\n        // 处理返回数据\n        if (data) {\n            this.$_callReadyStateChange(XMLHttpRequest.LOADING)\n            this.$$trigger('loadstart')\n            this.$_response = data\n            this.$$trigger('loadend')\n        }\n    }\n\n    /**\n     * 请求失败\n     */\n    $_requestFail({errMsg}) {\n        this.$_status = 0\n        this.$_statusText = errMsg\n\n        this.$$trigger('error')\n    }\n\n    /**\n     * 请求完成\n     */\n    $_requestComplete() {\n        this.$_startTime = null\n        this.$_requestTask = null\n        this.$_callReadyStateChange(XMLHttpRequest.DONE)\n\n        if (this.$_status) {\n            this.$$trigger('load')\n        }\n    }\n\n    /**\n     * 对外属性和方法\n     */\n    get timeout() {\n        return this.$_timeout\n    }\n\n    set timeout(timeout) {\n        if (typeof timeout !== 'number' || !isFinite(timeout) || timeout <= 0) return\n\n        this.$_timeout = timeout\n    }\n\n    get status() {\n        return this.$_status\n    }\n\n    get statusText() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED) return ''\n\n        return STATUS_TEXT_MAP[this.$_status + ''] || this.$_statusText || ''\n    }\n\n    get readyState() {\n        return this.$_readyState\n    }\n\n    get responseType() {\n        return this.$_responseType\n    }\n\n    set responseType(value) {\n        if (typeof value !== 'string') return\n\n        this.$_responseType = value\n    }\n\n    get responseText() {\n        if (!this.$_responseType || this.$_responseType === 'text') {\n            return this.$_response\n        }\n\n        return null\n    }\n\n    get response() {\n        return this.$_response\n    }\n\n    get withCredentials() {\n        return this.$_withCredentials\n    }\n\n    set withCredentials(value) {\n        this.$_withCredentials = !!value\n    }\n\n    abort() {\n        if (this.$_requestTask) {\n            this.$_requestTask.abort()\n            this.$$trigger('abort')\n        }\n    }\n\n    getAllResponseHeaders() {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return ''\n\n        return Object.keys(this.$_resHeader)\n            .map(key => `${key}: ${this.$_resHeader[key]}`)\n            .join('\\r\\n')\n    }\n\n    getResponseHeader(name) {\n        if (this.$_readyState === XMLHttpRequest.UNSENT || this.$_readyState === XMLHttpRequest.OPENED || !this.$_resHeader) return null\n\n        // 处理大小写不敏感\n        const key = Object.keys(this.$_resHeader).find(item => item.toLowerCase() === name.toLowerCase())\n        const value = key ? this.$_resHeader[key] : null\n\n        return typeof value === 'string' ? value : null\n    }\n\n    open(method, url) {\n        if (typeof method === 'string') method = method.toUpperCase()\n\n        if (SUPPORT_METHOD.indexOf(method) < 0) return\n        if (!url || typeof url !== 'string') return\n\n        this.$_method = method\n        this.$_url = url\n\n        this.$_callReadyStateChange(XMLHttpRequest.OPENED)\n    }\n\n    setRequestHeader(header, value) {\n        if (typeof header === 'string' && typeof value === 'string') {\n            this.$_header[header] = value\n        }\n    }\n\n    send(data) {\n        if (this.$_readyState !== XMLHttpRequest.OPENED) return\n\n        this.$_data = data\n        this.$_callRequest()\n    }\n}\n\nXMLHttpRequest.UNSENT = 0\nXMLHttpRequest.OPENED = 1\nXMLHttpRequest.HEADERS_RECEIVED = 2\nXMLHttpRequest.LOADING = 3\nXMLHttpRequest.DONE = 4\n\nmodule.exports = XMLHttpRequest\n"],"sourceRoot":""}